

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Aug 06 00:11:45 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1786
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	swtext2,local,class=CONST,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x620,48
    68                           	dabs	1,0x5A0,80
    69                           	dabs	1,0x520,80
    70                           	dabs	1,0x4A0,80
    71                           	dabs	1,0x464,12
    72                           	dabs	1,0x22C4,0,_gGlucoseValue
    73                           	dabs	1,0x7E,2
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011D                     	;# 
   139  011D                     	;# 
   140  011D                     	;# 
   141  011E                     	;# 
   142  011F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  020C                     	;# 
   181  020D                     	;# 
   182  020E                     	;# 
   183  0210                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0216                     	;# 
   197  0216                     	;# 
   198  0217                     	;# 
   199  0217                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  030C                     	;# 
   212  030D                     	;# 
   213  030E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  038C                     	;# 
   219  038D                     	;# 
   220  038E                     	;# 
   221  0390                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  039D                     	;# 
   232  039E                     	;# 
   233  039F                     	;# 
   234  0511                     	;# 
   235  0513                     	;# 
   236  051A                     	;# 
   237  0811                     	;# 
   238  0812                     	;# 
   239  0813                     	;# 
   240  0814                     	;# 
   241  0815                     	;# 
   242  0816                     	;# 
   243  0817                     	;# 
   244  0818                     	;# 
   245  0819                     	;# 
   246  081A                     	;# 
   247  081B                     	;# 
   248  081C                     	;# 
   249  081D                     	;# 
   250  081E                     	;# 
   251  081F                     	;# 
   252  0820                     	;# 
   253  0821                     	;# 
   254  0821                     	;# 
   255  0822                     	;# 
   256  0823                     	;# 
   257  0823                     	;# 
   258  0824                     	;# 
   259  0825                     	;# 
   260  0825                     	;# 
   261  0826                     	;# 
   262  0827                     	;# 
   263  0827                     	;# 
   264  0828                     	;# 
   265  0829                     	;# 
   266  082A                     	;# 
   267  082B                     	;# 
   268  082C                     	;# 
   269  082D                     	;# 
   270  082E                     	;# 
   271  082F                     	;# 
   272  0831                     	;# 
   273  0832                     	;# 
   274  0833                     	;# 
   275  0834                     	;# 
   276  0835                     	;# 
   277  0836                     	;# 
   278  0837                     	;# 
   279  0838                     	;# 
   280  0839                     	;# 
   281  083A                     	;# 
   282  083B                     	;# 
   283  083C                     	;# 
   284  083D                     	;# 
   285  083E                     	;# 
   286  083F                     	;# 
   287  0840                     	;# 
   288  0841                     	;# 
   289  0841                     	;# 
   290  0842                     	;# 
   291  0843                     	;# 
   292  0843                     	;# 
   293  0844                     	;# 
   294  0845                     	;# 
   295  0845                     	;# 
   296  0846                     	;# 
   297  0847                     	;# 
   298  0847                     	;# 
   299  0848                     	;# 
   300  0849                     	;# 
   301  084A                     	;# 
   302  084B                     	;# 
   303  084C                     	;# 
   304  084D                     	;# 
   305  084E                     	;# 
   306  084F                     	;# 
   307  0851                     	;# 
   308  0852                     	;# 
   309  0853                     	;# 
   310  0854                     	;# 
   311  0855                     	;# 
   312  0856                     	;# 
   313  0857                     	;# 
   314  0858                     	;# 
   315  0859                     	;# 
   316  085A                     	;# 
   317  085B                     	;# 
   318  085C                     	;# 
   319  085D                     	;# 
   320  085E                     	;# 
   321  085F                     	;# 
   322  0860                     	;# 
   323  0861                     	;# 
   324  0861                     	;# 
   325  0862                     	;# 
   326  0863                     	;# 
   327  0863                     	;# 
   328  0864                     	;# 
   329  0865                     	;# 
   330  0865                     	;# 
   331  0866                     	;# 
   332  0867                     	;# 
   333  0867                     	;# 
   334  0868                     	;# 
   335  0869                     	;# 
   336  086A                     	;# 
   337  086B                     	;# 
   338  086C                     	;# 
   339  086D                     	;# 
   340  086E                     	;# 
   341  086F                     	;# 
   342  0FE4                     	;# 
   343  0FE5                     	;# 
   344  0FE6                     	;# 
   345  0FE7                     	;# 
   346  0FE8                     	;# 
   347  0FE9                     	;# 
   348  0FEA                     	;# 
   349  0FEB                     	;# 
   350  0FED                     	;# 
   351  0FEE                     	;# 
   352  0FEF                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0008                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0016                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001C                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011A                     	;# 
   415  011B                     	;# 
   416  011C                     	;# 
   417  011D                     	;# 
   418  011D                     	;# 
   419  011D                     	;# 
   420  011E                     	;# 
   421  011F                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0197                     	;# 
   434  0199                     	;# 
   435  0199                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019A                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019C                     	;# 
   448  019D                     	;# 
   449  019D                     	;# 
   450  019D                     	;# 
   451  019E                     	;# 
   452  019E                     	;# 
   453  019E                     	;# 
   454  019F                     	;# 
   455  019F                     	;# 
   456  019F                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  020D                     	;# 
   461  020E                     	;# 
   462  0210                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  0212                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0213                     	;# 
   469  0214                     	;# 
   470  0214                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  028C                     	;# 
   480  028D                     	;# 
   481  028E                     	;# 
   482  0291                     	;# 
   483  0291                     	;# 
   484  0292                     	;# 
   485  0293                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  030C                     	;# 
   491  030D                     	;# 
   492  030E                     	;# 
   493  0311                     	;# 
   494  0311                     	;# 
   495  0312                     	;# 
   496  0313                     	;# 
   497  038C                     	;# 
   498  038D                     	;# 
   499  038E                     	;# 
   500  0390                     	;# 
   501  0391                     	;# 
   502  0392                     	;# 
   503  0393                     	;# 
   504  0394                     	;# 
   505  0395                     	;# 
   506  0396                     	;# 
   507  0397                     	;# 
   508  0398                     	;# 
   509  0399                     	;# 
   510  039D                     	;# 
   511  039E                     	;# 
   512  039F                     	;# 
   513  0511                     	;# 
   514  0513                     	;# 
   515  051A                     	;# 
   516  0811                     	;# 
   517  0812                     	;# 
   518  0813                     	;# 
   519  0814                     	;# 
   520  0815                     	;# 
   521  0816                     	;# 
   522  0817                     	;# 
   523  0818                     	;# 
   524  0819                     	;# 
   525  081A                     	;# 
   526  081B                     	;# 
   527  081C                     	;# 
   528  081D                     	;# 
   529  081E                     	;# 
   530  081F                     	;# 
   531  0820                     	;# 
   532  0821                     	;# 
   533  0821                     	;# 
   534  0822                     	;# 
   535  0823                     	;# 
   536  0823                     	;# 
   537  0824                     	;# 
   538  0825                     	;# 
   539  0825                     	;# 
   540  0826                     	;# 
   541  0827                     	;# 
   542  0827                     	;# 
   543  0828                     	;# 
   544  0829                     	;# 
   545  082A                     	;# 
   546  082B                     	;# 
   547  082C                     	;# 
   548  082D                     	;# 
   549  082E                     	;# 
   550  082F                     	;# 
   551  0831                     	;# 
   552  0832                     	;# 
   553  0833                     	;# 
   554  0834                     	;# 
   555  0835                     	;# 
   556  0836                     	;# 
   557  0837                     	;# 
   558  0838                     	;# 
   559  0839                     	;# 
   560  083A                     	;# 
   561  083B                     	;# 
   562  083C                     	;# 
   563  083D                     	;# 
   564  083E                     	;# 
   565  083F                     	;# 
   566  0840                     	;# 
   567  0841                     	;# 
   568  0841                     	;# 
   569  0842                     	;# 
   570  0843                     	;# 
   571  0843                     	;# 
   572  0844                     	;# 
   573  0845                     	;# 
   574  0845                     	;# 
   575  0846                     	;# 
   576  0847                     	;# 
   577  0847                     	;# 
   578  0848                     	;# 
   579  0849                     	;# 
   580  084A                     	;# 
   581  084B                     	;# 
   582  084C                     	;# 
   583  084D                     	;# 
   584  084E                     	;# 
   585  084F                     	;# 
   586  0851                     	;# 
   587  0852                     	;# 
   588  0853                     	;# 
   589  0854                     	;# 
   590  0855                     	;# 
   591  0856                     	;# 
   592  0857                     	;# 
   593  0858                     	;# 
   594  0859                     	;# 
   595  085A                     	;# 
   596  085B                     	;# 
   597  085C                     	;# 
   598  085D                     	;# 
   599  085E                     	;# 
   600  085F                     	;# 
   601  0860                     	;# 
   602  0861                     	;# 
   603  0861                     	;# 
   604  0862                     	;# 
   605  0863                     	;# 
   606  0863                     	;# 
   607  0864                     	;# 
   608  0865                     	;# 
   609  0865                     	;# 
   610  0866                     	;# 
   611  0867                     	;# 
   612  0867                     	;# 
   613  0868                     	;# 
   614  0869                     	;# 
   615  086A                     	;# 
   616  086B                     	;# 
   617  086C                     	;# 
   618  086D                     	;# 
   619  086E                     	;# 
   620  086F                     	;# 
   621  0FE4                     	;# 
   622  0FE5                     	;# 
   623  0FE6                     	;# 
   624  0FE7                     	;# 
   625  0FE8                     	;# 
   626  0FE9                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEF                     	;# 
   632  0000                     	;# 
   633  0001                     	;# 
   634  0002                     	;# 
   635  0003                     	;# 
   636  0004                     	;# 
   637  0005                     	;# 
   638  0006                     	;# 
   639  0007                     	;# 
   640  0008                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  008C                     	;# 
   662  008D                     	;# 
   663  008E                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0094                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0097                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009A                     	;# 
   675  009B                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009E                     	;# 
   680  009F                     	;# 
   681  010C                     	;# 
   682  010D                     	;# 
   683  010E                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0113                     	;# 
   687  0114                     	;# 
   688  0115                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0118                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011D                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  0191                     	;# 
   704  0191                     	;# 
   705  0192                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0199                     	;# 
   714  0199                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019A                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019D                     	;# 
   729  019D                     	;# 
   730  019E                     	;# 
   731  019E                     	;# 
   732  019E                     	;# 
   733  019F                     	;# 
   734  019F                     	;# 
   735  019F                     	;# 
   736  019F                     	;# 
   737  019F                     	;# 
   738  020C                     	;# 
   739  020D                     	;# 
   740  020E                     	;# 
   741  0210                     	;# 
   742  0211                     	;# 
   743  0211                     	;# 
   744  0212                     	;# 
   745  0212                     	;# 
   746  0213                     	;# 
   747  0213                     	;# 
   748  0214                     	;# 
   749  0214                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0215                     	;# 
   753  0215                     	;# 
   754  0216                     	;# 
   755  0216                     	;# 
   756  0217                     	;# 
   757  0217                     	;# 
   758  028C                     	;# 
   759  028D                     	;# 
   760  028E                     	;# 
   761  0291                     	;# 
   762  0291                     	;# 
   763  0292                     	;# 
   764  0293                     	;# 
   765  0298                     	;# 
   766  0298                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  030C                     	;# 
   770  030D                     	;# 
   771  030E                     	;# 
   772  0311                     	;# 
   773  0311                     	;# 
   774  0312                     	;# 
   775  0313                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  0390                     	;# 
   780  0391                     	;# 
   781  0392                     	;# 
   782  0393                     	;# 
   783  0394                     	;# 
   784  0395                     	;# 
   785  0396                     	;# 
   786  0397                     	;# 
   787  0398                     	;# 
   788  0399                     	;# 
   789  039D                     	;# 
   790  039E                     	;# 
   791  039F                     	;# 
   792  0511                     	;# 
   793  0513                     	;# 
   794  051A                     	;# 
   795  0811                     	;# 
   796  0812                     	;# 
   797  0813                     	;# 
   798  0814                     	;# 
   799  0815                     	;# 
   800  0816                     	;# 
   801  0817                     	;# 
   802  0818                     	;# 
   803  0819                     	;# 
   804  081A                     	;# 
   805  081B                     	;# 
   806  081C                     	;# 
   807  081D                     	;# 
   808  081E                     	;# 
   809  081F                     	;# 
   810  0820                     	;# 
   811  0821                     	;# 
   812  0821                     	;# 
   813  0822                     	;# 
   814  0823                     	;# 
   815  0823                     	;# 
   816  0824                     	;# 
   817  0825                     	;# 
   818  0825                     	;# 
   819  0826                     	;# 
   820  0827                     	;# 
   821  0827                     	;# 
   822  0828                     	;# 
   823  0829                     	;# 
   824  082A                     	;# 
   825  082B                     	;# 
   826  082C                     	;# 
   827  082D                     	;# 
   828  082E                     	;# 
   829  082F                     	;# 
   830  0831                     	;# 
   831  0832                     	;# 
   832  0833                     	;# 
   833  0834                     	;# 
   834  0835                     	;# 
   835  0836                     	;# 
   836  0837                     	;# 
   837  0838                     	;# 
   838  0839                     	;# 
   839  083A                     	;# 
   840  083B                     	;# 
   841  083C                     	;# 
   842  083D                     	;# 
   843  083E                     	;# 
   844  083F                     	;# 
   845  0840                     	;# 
   846  0841                     	;# 
   847  0841                     	;# 
   848  0842                     	;# 
   849  0843                     	;# 
   850  0843                     	;# 
   851  0844                     	;# 
   852  0845                     	;# 
   853  0845                     	;# 
   854  0846                     	;# 
   855  0847                     	;# 
   856  0847                     	;# 
   857  0848                     	;# 
   858  0849                     	;# 
   859  084A                     	;# 
   860  084B                     	;# 
   861  084C                     	;# 
   862  084D                     	;# 
   863  084E                     	;# 
   864  084F                     	;# 
   865  0851                     	;# 
   866  0852                     	;# 
   867  0853                     	;# 
   868  0854                     	;# 
   869  0855                     	;# 
   870  0856                     	;# 
   871  0857                     	;# 
   872  0858                     	;# 
   873  0859                     	;# 
   874  085A                     	;# 
   875  085B                     	;# 
   876  085C                     	;# 
   877  085D                     	;# 
   878  085E                     	;# 
   879  085F                     	;# 
   880  0860                     	;# 
   881  0861                     	;# 
   882  0861                     	;# 
   883  0862                     	;# 
   884  0863                     	;# 
   885  0863                     	;# 
   886  0864                     	;# 
   887  0865                     	;# 
   888  0865                     	;# 
   889  0866                     	;# 
   890  0867                     	;# 
   891  0867                     	;# 
   892  0868                     	;# 
   893  0869                     	;# 
   894  086A                     	;# 
   895  086B                     	;# 
   896  086C                     	;# 
   897  086D                     	;# 
   898  086E                     	;# 
   899  086F                     	;# 
   900  0FE4                     	;# 
   901  0FE5                     	;# 
   902  0FE6                     	;# 
   903  0FE7                     	;# 
   904  0FE8                     	;# 
   905  0FE9                     	;# 
   906  0FEA                     	;# 
   907  0FEB                     	;# 
   908  0FED                     	;# 
   909  0FEE                     	;# 
   910  0FEF                     	;# 
   911  0000                     	;# 
   912  0001                     	;# 
   913  0002                     	;# 
   914  0003                     	;# 
   915  0004                     	;# 
   916  0005                     	;# 
   917  0006                     	;# 
   918  0007                     	;# 
   919  0008                     	;# 
   920  0009                     	;# 
   921  000A                     	;# 
   922  000B                     	;# 
   923  000C                     	;# 
   924  000D                     	;# 
   925  000E                     	;# 
   926  0010                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0013                     	;# 
   930  0014                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  008C                     	;# 
   941  008D                     	;# 
   942  008E                     	;# 
   943  0090                     	;# 
   944  0091                     	;# 
   945  0092                     	;# 
   946  0093                     	;# 
   947  0094                     	;# 
   948  0095                     	;# 
   949  0096                     	;# 
   950  0097                     	;# 
   951  0098                     	;# 
   952  0099                     	;# 
   953  009A                     	;# 
   954  009B                     	;# 
   955  009B                     	;# 
   956  009C                     	;# 
   957  009D                     	;# 
   958  009E                     	;# 
   959  009F                     	;# 
   960  010C                     	;# 
   961  010D                     	;# 
   962  010E                     	;# 
   963  0111                     	;# 
   964  0112                     	;# 
   965  0113                     	;# 
   966  0114                     	;# 
   967  0115                     	;# 
   968  0116                     	;# 
   969  0117                     	;# 
   970  0118                     	;# 
   971  0119                     	;# 
   972  011A                     	;# 
   973  011B                     	;# 
   974  011C                     	;# 
   975  011D                     	;# 
   976  011D                     	;# 
   977  011D                     	;# 
   978  011E                     	;# 
   979  011F                     	;# 
   980  018C                     	;# 
   981  018D                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0193                     	;# 
   988  0194                     	;# 
   989  0195                     	;# 
   990  0196                     	;# 
   991  0197                     	;# 
   992  0199                     	;# 
   993  0199                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019A                     	;# 
   997  019A                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019C                     	;# 
  1006  019D                     	;# 
  1007  019D                     	;# 
  1008  019D                     	;# 
  1009  019E                     	;# 
  1010  019E                     	;# 
  1011  019E                     	;# 
  1012  019F                     	;# 
  1013  019F                     	;# 
  1014  019F                     	;# 
  1015  019F                     	;# 
  1016  019F                     	;# 
  1017  020C                     	;# 
  1018  020D                     	;# 
  1019  020E                     	;# 
  1020  0210                     	;# 
  1021  0211                     	;# 
  1022  0211                     	;# 
  1023  0212                     	;# 
  1024  0212                     	;# 
  1025  0213                     	;# 
  1026  0213                     	;# 
  1027  0214                     	;# 
  1028  0214                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0216                     	;# 
  1034  0216                     	;# 
  1035  0217                     	;# 
  1036  0217                     	;# 
  1037  028C                     	;# 
  1038  028D                     	;# 
  1039  028E                     	;# 
  1040  0291                     	;# 
  1041  0291                     	;# 
  1042  0292                     	;# 
  1043  0293                     	;# 
  1044  0298                     	;# 
  1045  0298                     	;# 
  1046  0299                     	;# 
  1047  029A                     	;# 
  1048  030C                     	;# 
  1049  030D                     	;# 
  1050  030E                     	;# 
  1051  0311                     	;# 
  1052  0311                     	;# 
  1053  0312                     	;# 
  1054  0313                     	;# 
  1055  038C                     	;# 
  1056  038D                     	;# 
  1057  038E                     	;# 
  1058  0390                     	;# 
  1059  0391                     	;# 
  1060  0392                     	;# 
  1061  0393                     	;# 
  1062  0394                     	;# 
  1063  0395                     	;# 
  1064  0396                     	;# 
  1065  0397                     	;# 
  1066  0398                     	;# 
  1067  0399                     	;# 
  1068  039D                     	;# 
  1069  039E                     	;# 
  1070  039F                     	;# 
  1071  0511                     	;# 
  1072  0513                     	;# 
  1073  051A                     	;# 
  1074  0811                     	;# 
  1075  0812                     	;# 
  1076  0813                     	;# 
  1077  0814                     	;# 
  1078  0815                     	;# 
  1079  0816                     	;# 
  1080  0817                     	;# 
  1081  0818                     	;# 
  1082  0819                     	;# 
  1083  081A                     	;# 
  1084  081B                     	;# 
  1085  081C                     	;# 
  1086  081D                     	;# 
  1087  081E                     	;# 
  1088  081F                     	;# 
  1089  0820                     	;# 
  1090  0821                     	;# 
  1091  0821                     	;# 
  1092  0822                     	;# 
  1093  0823                     	;# 
  1094  0823                     	;# 
  1095  0824                     	;# 
  1096  0825                     	;# 
  1097  0825                     	;# 
  1098  0826                     	;# 
  1099  0827                     	;# 
  1100  0827                     	;# 
  1101  0828                     	;# 
  1102  0829                     	;# 
  1103  082A                     	;# 
  1104  082B                     	;# 
  1105  082C                     	;# 
  1106  082D                     	;# 
  1107  082E                     	;# 
  1108  082F                     	;# 
  1109  0831                     	;# 
  1110  0832                     	;# 
  1111  0833                     	;# 
  1112  0834                     	;# 
  1113  0835                     	;# 
  1114  0836                     	;# 
  1115  0837                     	;# 
  1116  0838                     	;# 
  1117  0839                     	;# 
  1118  083A                     	;# 
  1119  083B                     	;# 
  1120  083C                     	;# 
  1121  083D                     	;# 
  1122  083E                     	;# 
  1123  083F                     	;# 
  1124  0840                     	;# 
  1125  0841                     	;# 
  1126  0841                     	;# 
  1127  0842                     	;# 
  1128  0843                     	;# 
  1129  0843                     	;# 
  1130  0844                     	;# 
  1131  0845                     	;# 
  1132  0845                     	;# 
  1133  0846                     	;# 
  1134  0847                     	;# 
  1135  0847                     	;# 
  1136  0848                     	;# 
  1137  0849                     	;# 
  1138  084A                     	;# 
  1139  084B                     	;# 
  1140  084C                     	;# 
  1141  084D                     	;# 
  1142  084E                     	;# 
  1143  084F                     	;# 
  1144  0851                     	;# 
  1145  0852                     	;# 
  1146  0853                     	;# 
  1147  0854                     	;# 
  1148  0855                     	;# 
  1149  0856                     	;# 
  1150  0857                     	;# 
  1151  0858                     	;# 
  1152  0859                     	;# 
  1153  085A                     	;# 
  1154  085B                     	;# 
  1155  085C                     	;# 
  1156  085D                     	;# 
  1157  085E                     	;# 
  1158  085F                     	;# 
  1159  0860                     	;# 
  1160  0861                     	;# 
  1161  0861                     	;# 
  1162  0862                     	;# 
  1163  0863                     	;# 
  1164  0863                     	;# 
  1165  0864                     	;# 
  1166  0865                     	;# 
  1167  0865                     	;# 
  1168  0866                     	;# 
  1169  0867                     	;# 
  1170  0867                     	;# 
  1171  0868                     	;# 
  1172  0869                     	;# 
  1173  086A                     	;# 
  1174  086B                     	;# 
  1175  086C                     	;# 
  1176  086D                     	;# 
  1177  086E                     	;# 
  1178  086F                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;_gGlucoseValue
  1190                           
  1191                           	psect	idataCOMMON
  1192  0003                     __pidataCOMMON:	
  1193                           
  1194                           ;initializer for _gYmmoldecimalchar
  1195  0003  3406               	retlw	6
  1196                           
  1197                           	psect	idataBANK0
  1198  11FE                     __pidataBANK0:	
  1199                           
  1200                           ;initializer for _Days
  1201  11FE  3401               	retlw	1
  1202                           
  1203                           ;initializer for _Hours
  1204  11FF  340A               	retlw	10
  1205                           
  1206                           ;initializer for _Minutes
  1207  1200  340A               	retlw	10
  1208                           
  1209                           ;initializer for _Month
  1210  1201  3401               	retlw	1
  1211                           
  1212                           ;initializer for _Year
  1213  1202  340D               	retlw	13
  1214                           
  1215                           ;initializer for _gYmmolchar
  1216  1203  3407               	retlw	7
  1217                           
  1218                           	psect	idataBANK1
  1219  1233                     __pidataBANK1:	
  1220                           
  1221                           ;initializer for _gStripIdleTime
  1222  1233  3490               	retlw	144
  1223  1234  34D0               	retlw	208
  1224  1235  3403               	retlw	3
  1225  1236  3400               	retlw	0
  1226                           
  1227                           ;initializer for _gcountIdleTime
  1228  1237  34C0               	retlw	192
  1229  1238  34D4               	retlw	212
  1230  1239  3401               	retlw	1
  1231  123A  3400               	retlw	0
  1232                           
  1233                           ;initializer for _gtimeOutCount
  1234  123B  34A0               	retlw	160
  1235  123C  3486               	retlw	134
  1236  123D  3401               	retlw	1
  1237  123E  3400               	retlw	0
  1238                           
  1239                           ;initializer for _gYint
  1240  123F  3432               	retlw	50
  1241  1240  3400               	retlw	0
  1242                           
  1243                           ;initializer for _gcounter
  1244  1241  3440               	retlw	64
  1245  1242  341F               	retlw	31
  1246                           
  1247                           	psect	stringtext
  1248  0222                     __pstringtext:	
  1249  0222                     _ASCII:	
  1250  0222  3400               	retlw	0
  1251  0223  3400               	retlw	0
  1252  0224  3400               	retlw	0
  1253  0225  3400               	retlw	0
  1254  0226  3400               	retlw	0
  1255  0227  3400               	retlw	0
  1256  0228  3400               	retlw	0
  1257  0229  345F               	retlw	95
  1258  022A  3400               	retlw	0
  1259  022B  3400               	retlw	0
  1260  022C  3400               	retlw	0
  1261  022D  3407               	retlw	7
  1262  022E  3400               	retlw	0
  1263  022F  3407               	retlw	7
  1264  0230  3400               	retlw	0
  1265  0231  3414               	retlw	20
  1266  0232  347F               	retlw	127
  1267  0233  3414               	retlw	20
  1268  0234  347F               	retlw	127
  1269  0235  3414               	retlw	20
  1270  0236  3424               	retlw	36
  1271  0237  342A               	retlw	42
  1272  0238  347F               	retlw	127
  1273  0239  342A               	retlw	42
  1274  023A  3412               	retlw	18
  1275  023B  3423               	retlw	35
  1276  023C  3413               	retlw	19
  1277  023D  3408               	retlw	8
  1278  023E  3464               	retlw	100
  1279  023F  3462               	retlw	98
  1280  0240  3436               	retlw	54
  1281  0241  3449               	retlw	73
  1282  0242  3455               	retlw	85
  1283  0243  3422               	retlw	34
  1284  0244  3450               	retlw	80
  1285  0245  3400               	retlw	0
  1286  0246  3405               	retlw	5
  1287  0247  3403               	retlw	3
  1288  0248  3400               	retlw	0
  1289  0249  3400               	retlw	0
  1290  024A  3400               	retlw	0
  1291  024B  341C               	retlw	28
  1292  024C  3422               	retlw	34
  1293  024D  3441               	retlw	65
  1294  024E  3400               	retlw	0
  1295  024F  3400               	retlw	0
  1296  0250  3441               	retlw	65
  1297  0251  3422               	retlw	34
  1298  0252  341C               	retlw	28
  1299  0253  3400               	retlw	0
  1300  0254  3414               	retlw	20
  1301  0255  3408               	retlw	8
  1302  0256  343E               	retlw	62
  1303  0257  3408               	retlw	8
  1304  0258  3414               	retlw	20
  1305  0259  3408               	retlw	8
  1306  025A  3408               	retlw	8
  1307  025B  343E               	retlw	62
  1308  025C  3408               	retlw	8
  1309  025D  3408               	retlw	8
  1310  025E  3400               	retlw	0
  1311  025F  3450               	retlw	80
  1312  0260  3430               	retlw	48
  1313  0261  3400               	retlw	0
  1314  0262  3400               	retlw	0
  1315  0263  3408               	retlw	8
  1316  0264  3408               	retlw	8
  1317  0265  3408               	retlw	8
  1318  0266  3408               	retlw	8
  1319  0267  3408               	retlw	8
  1320  0268  3400               	retlw	0
  1321  0269  3460               	retlw	96
  1322  026A  3460               	retlw	96
  1323  026B  3400               	retlw	0
  1324  026C  3400               	retlw	0
  1325  026D  3420               	retlw	32
  1326  026E  3410               	retlw	16
  1327  026F  3408               	retlw	8
  1328  0270  3404               	retlw	4
  1329  0271  3402               	retlw	2
  1330  0272  343E               	retlw	62
  1331  0273  3451               	retlw	81
  1332  0274  3449               	retlw	73
  1333  0275  3445               	retlw	69
  1334  0276  343E               	retlw	62
  1335  0277  3400               	retlw	0
  1336  0278  3442               	retlw	66
  1337  0279  347F               	retlw	127
  1338  027A  3440               	retlw	64
  1339  027B  3400               	retlw	0
  1340  027C  3442               	retlw	66
  1341  027D  3461               	retlw	97
  1342  027E  3451               	retlw	81
  1343  027F  3449               	retlw	73
  1344  0280  3446               	retlw	70
  1345  0281  3421               	retlw	33
  1346  0282  3441               	retlw	65
  1347  0283  3445               	retlw	69
  1348  0284  344B               	retlw	75
  1349  0285  3431               	retlw	49
  1350  0286  3418               	retlw	24
  1351  0287  3414               	retlw	20
  1352  0288  3412               	retlw	18
  1353  0289  347F               	retlw	127
  1354  028A  3410               	retlw	16
  1355  028B  3427               	retlw	39
  1356  028C  3445               	retlw	69
  1357  028D  3445               	retlw	69
  1358  028E  3445               	retlw	69
  1359  028F  3439               	retlw	57
  1360  0290  343C               	retlw	60
  1361  0291  344A               	retlw	74
  1362  0292  3449               	retlw	73
  1363  0293  3449               	retlw	73
  1364  0294  3430               	retlw	48
  1365  0295  3401               	retlw	1
  1366  0296  3471               	retlw	113
  1367  0297  3409               	retlw	9
  1368  0298  3405               	retlw	5
  1369  0299  3403               	retlw	3
  1370  029A  3436               	retlw	54
  1371  029B  3449               	retlw	73
  1372  029C  3449               	retlw	73
  1373  029D  3449               	retlw	73
  1374  029E  3436               	retlw	54
  1375  029F  3406               	retlw	6
  1376  02A0  3449               	retlw	73
  1377  02A1  3449               	retlw	73
  1378  02A2  3429               	retlw	41
  1379  02A3  341E               	retlw	30
  1380  02A4  3400               	retlw	0
  1381  02A5  3436               	retlw	54
  1382  02A6  3436               	retlw	54
  1383  02A7  3400               	retlw	0
  1384  02A8  3400               	retlw	0
  1385  02A9  3400               	retlw	0
  1386  02AA  3456               	retlw	86
  1387  02AB  3436               	retlw	54
  1388  02AC  3400               	retlw	0
  1389  02AD  3400               	retlw	0
  1390  02AE  3408               	retlw	8
  1391  02AF  3414               	retlw	20
  1392  02B0  3422               	retlw	34
  1393  02B1  3441               	retlw	65
  1394  02B2  3400               	retlw	0
  1395  02B3  3414               	retlw	20
  1396  02B4  3414               	retlw	20
  1397  02B5  3414               	retlw	20
  1398  02B6  3414               	retlw	20
  1399  02B7  3414               	retlw	20
  1400  02B8  3400               	retlw	0
  1401  02B9  3441               	retlw	65
  1402  02BA  3422               	retlw	34
  1403  02BB  3414               	retlw	20
  1404  02BC  3408               	retlw	8
  1405  02BD  3402               	retlw	2
  1406  02BE  3401               	retlw	1
  1407  02BF  3451               	retlw	81
  1408  02C0  3409               	retlw	9
  1409  02C1  3406               	retlw	6
  1410  02C2  3432               	retlw	50
  1411  02C3  3449               	retlw	73
  1412  02C4  3479               	retlw	121
  1413  02C5  3441               	retlw	65
  1414  02C6  343E               	retlw	62
  1415  02C7  347E               	retlw	126
  1416  02C8  3411               	retlw	17
  1417  02C9  3411               	retlw	17
  1418  02CA  3411               	retlw	17
  1419  02CB  347E               	retlw	126
  1420  02CC  347F               	retlw	127
  1421  02CD  3449               	retlw	73
  1422  02CE  3449               	retlw	73
  1423  02CF  3449               	retlw	73
  1424  02D0  3436               	retlw	54
  1425  02D1  343E               	retlw	62
  1426  02D2  3441               	retlw	65
  1427  02D3  3441               	retlw	65
  1428  02D4  3441               	retlw	65
  1429  02D5  3422               	retlw	34
  1430  02D6  347F               	retlw	127
  1431  02D7  3441               	retlw	65
  1432  02D8  3441               	retlw	65
  1433  02D9  3422               	retlw	34
  1434  02DA  341C               	retlw	28
  1435  02DB  347F               	retlw	127
  1436  02DC  3449               	retlw	73
  1437  02DD  3449               	retlw	73
  1438  02DE  3449               	retlw	73
  1439  02DF  3441               	retlw	65
  1440  02E0  347F               	retlw	127
  1441  02E1  3409               	retlw	9
  1442  02E2  3409               	retlw	9
  1443  02E3  3409               	retlw	9
  1444  02E4  3401               	retlw	1
  1445  02E5  343E               	retlw	62
  1446  02E6  3441               	retlw	65
  1447  02E7  3449               	retlw	73
  1448  02E8  3449               	retlw	73
  1449  02E9  347A               	retlw	122
  1450  02EA  347F               	retlw	127
  1451  02EB  3408               	retlw	8
  1452  02EC  3408               	retlw	8
  1453  02ED  3408               	retlw	8
  1454  02EE  347F               	retlw	127
  1455  02EF  3400               	retlw	0
  1456  02F0  3441               	retlw	65
  1457  02F1  347F               	retlw	127
  1458  02F2  3441               	retlw	65
  1459  02F3  3400               	retlw	0
  1460  02F4  3420               	retlw	32
  1461  02F5  3440               	retlw	64
  1462  02F6  3441               	retlw	65
  1463  02F7  343F               	retlw	63
  1464  02F8  3401               	retlw	1
  1465  02F9  347F               	retlw	127
  1466  02FA  3408               	retlw	8
  1467  02FB  3414               	retlw	20
  1468  02FC  3422               	retlw	34
  1469  02FD  3441               	retlw	65
  1470  02FE  347F               	retlw	127
  1471  02FF  3440               	retlw	64
  1472  0300  3440               	retlw	64
  1473  0301  3440               	retlw	64
  1474  0302  3440               	retlw	64
  1475  0303  347F               	retlw	127
  1476  0304  3402               	retlw	2
  1477  0305  340C               	retlw	12
  1478  0306  3402               	retlw	2
  1479  0307  347F               	retlw	127
  1480  0308  347F               	retlw	127
  1481  0309  3404               	retlw	4
  1482  030A  3408               	retlw	8
  1483  030B  3410               	retlw	16
  1484  030C  347F               	retlw	127
  1485  030D  343E               	retlw	62
  1486  030E  3441               	retlw	65
  1487  030F  3441               	retlw	65
  1488  0310  3441               	retlw	65
  1489  0311  343E               	retlw	62
  1490  0312  347F               	retlw	127
  1491  0313  3409               	retlw	9
  1492  0314  3409               	retlw	9
  1493  0315  3409               	retlw	9
  1494  0316  3406               	retlw	6
  1495  0317  343E               	retlw	62
  1496  0318  3441               	retlw	65
  1497  0319  3451               	retlw	81
  1498  031A  3421               	retlw	33
  1499  031B  345E               	retlw	94
  1500  031C  347F               	retlw	127
  1501  031D  3409               	retlw	9
  1502  031E  3419               	retlw	25
  1503  031F  3429               	retlw	41
  1504  0320  3446               	retlw	70
  1505  0321  3446               	retlw	70
  1506  0322  3449               	retlw	73
  1507  0323  3449               	retlw	73
  1508  0324  3449               	retlw	73
  1509  0325  3431               	retlw	49
  1510  0326  3401               	retlw	1
  1511  0327  3401               	retlw	1
  1512  0328  347F               	retlw	127
  1513  0329  3401               	retlw	1
  1514  032A  3401               	retlw	1
  1515  032B  343F               	retlw	63
  1516  032C  3440               	retlw	64
  1517  032D  3440               	retlw	64
  1518  032E  3440               	retlw	64
  1519  032F  343F               	retlw	63
  1520  0330  341F               	retlw	31
  1521  0331  3420               	retlw	32
  1522  0332  3440               	retlw	64
  1523  0333  3420               	retlw	32
  1524  0334  341F               	retlw	31
  1525  0335  343F               	retlw	63
  1526  0336  3440               	retlw	64
  1527  0337  3438               	retlw	56
  1528  0338  3440               	retlw	64
  1529  0339  343F               	retlw	63
  1530  033A  3463               	retlw	99
  1531  033B  3414               	retlw	20
  1532  033C  3408               	retlw	8
  1533  033D  3414               	retlw	20
  1534  033E  3463               	retlw	99
  1535  033F  3407               	retlw	7
  1536  0340  3408               	retlw	8
  1537  0341  3470               	retlw	112
  1538  0342  3408               	retlw	8
  1539  0343  3407               	retlw	7
  1540  0344  3461               	retlw	97
  1541  0345  3451               	retlw	81
  1542  0346  3449               	retlw	73
  1543  0347  3445               	retlw	69
  1544  0348  3443               	retlw	67
  1545  0349  3400               	retlw	0
  1546  034A  347F               	retlw	127
  1547  034B  3441               	retlw	65
  1548  034C  3441               	retlw	65
  1549  034D  3400               	retlw	0
  1550  034E  3402               	retlw	2
  1551  034F  3404               	retlw	4
  1552  0350  3408               	retlw	8
  1553  0351  3410               	retlw	16
  1554  0352  3420               	retlw	32
  1555  0353  3400               	retlw	0
  1556  0354  3441               	retlw	65
  1557  0355  3441               	retlw	65
  1558  0356  347F               	retlw	127
  1559  0357  3400               	retlw	0
  1560  0358  3404               	retlw	4
  1561  0359  3402               	retlw	2
  1562  035A  3401               	retlw	1
  1563  035B  3402               	retlw	2
  1564  035C  3404               	retlw	4
  1565  035D  3440               	retlw	64
  1566  035E  3440               	retlw	64
  1567  035F  3440               	retlw	64
  1568  0360  3440               	retlw	64
  1569  0361  3440               	retlw	64
  1570  0362  3400               	retlw	0
  1571  0363  3401               	retlw	1
  1572  0364  3402               	retlw	2
  1573  0365  3404               	retlw	4
  1574  0366  3400               	retlw	0
  1575  0367  3420               	retlw	32
  1576  0368  3454               	retlw	84
  1577  0369  3454               	retlw	84
  1578  036A  3454               	retlw	84
  1579  036B  3478               	retlw	120
  1580  036C  347F               	retlw	127
  1581  036D  3448               	retlw	72
  1582  036E  3444               	retlw	68
  1583  036F  3444               	retlw	68
  1584  0370  3438               	retlw	56
  1585  0371  3438               	retlw	56
  1586  0372  3444               	retlw	68
  1587  0373  3444               	retlw	68
  1588  0374  3444               	retlw	68
  1589  0375  3420               	retlw	32
  1590  0376  3438               	retlw	56
  1591  0377  3444               	retlw	68
  1592  0378  3444               	retlw	68
  1593  0379  3448               	retlw	72
  1594  037A  347F               	retlw	127
  1595  037B  3438               	retlw	56
  1596  037C  3454               	retlw	84
  1597  037D  3454               	retlw	84
  1598  037E  3454               	retlw	84
  1599  037F  3418               	retlw	24
  1600  0380  3408               	retlw	8
  1601  0381  347E               	retlw	126
  1602  0382  3409               	retlw	9
  1603  0383  3401               	retlw	1
  1604  0384  3402               	retlw	2
  1605  0385  340C               	retlw	12
  1606  0386  3452               	retlw	82
  1607  0387  3452               	retlw	82
  1608  0388  3452               	retlw	82
  1609  0389  343E               	retlw	62
  1610  038A  347F               	retlw	127
  1611  038B  3408               	retlw	8
  1612  038C  3404               	retlw	4
  1613  038D  3404               	retlw	4
  1614  038E  3478               	retlw	120
  1615  038F  3400               	retlw	0
  1616  0390  3444               	retlw	68
  1617  0391  347D               	retlw	125
  1618  0392  3440               	retlw	64
  1619  0393  3400               	retlw	0
  1620  0394  3420               	retlw	32
  1621  0395  3440               	retlw	64
  1622  0396  3444               	retlw	68
  1623  0397  343D               	retlw	61
  1624  0398  3400               	retlw	0
  1625  0399  347F               	retlw	127
  1626  039A  3410               	retlw	16
  1627  039B  3428               	retlw	40
  1628  039C  3444               	retlw	68
  1629  039D  3400               	retlw	0
  1630  039E  3400               	retlw	0
  1631  039F  3441               	retlw	65
  1632  03A0  347F               	retlw	127
  1633  03A1  3440               	retlw	64
  1634  03A2  3400               	retlw	0
  1635  03A3  347C               	retlw	124
  1636  03A4  3404               	retlw	4
  1637  03A5  3418               	retlw	24
  1638  03A6  3404               	retlw	4
  1639  03A7  3478               	retlw	120
  1640  03A8  347C               	retlw	124
  1641  03A9  3408               	retlw	8
  1642  03AA  3404               	retlw	4
  1643  03AB  3404               	retlw	4
  1644  03AC  3478               	retlw	120
  1645  03AD  3438               	retlw	56
  1646  03AE  3444               	retlw	68
  1647  03AF  3444               	retlw	68
  1648  03B0  3444               	retlw	68
  1649  03B1  3438               	retlw	56
  1650  03B2  347C               	retlw	124
  1651  03B3  3414               	retlw	20
  1652  03B4  3414               	retlw	20
  1653  03B5  3414               	retlw	20
  1654  03B6  3408               	retlw	8
  1655  03B7  3408               	retlw	8
  1656  03B8  3414               	retlw	20
  1657  03B9  3414               	retlw	20
  1658  03BA  3418               	retlw	24
  1659  03BB  347C               	retlw	124
  1660  03BC  347C               	retlw	124
  1661  03BD  3408               	retlw	8
  1662  03BE  3404               	retlw	4
  1663  03BF  3404               	retlw	4
  1664  03C0  3408               	retlw	8
  1665  03C1  3448               	retlw	72
  1666  03C2  3454               	retlw	84
  1667  03C3  3454               	retlw	84
  1668  03C4  3454               	retlw	84
  1669  03C5  3420               	retlw	32
  1670  03C6  3404               	retlw	4
  1671  03C7  343F               	retlw	63
  1672  03C8  3444               	retlw	68
  1673  03C9  3440               	retlw	64
  1674  03CA  3420               	retlw	32
  1675  03CB  343C               	retlw	60
  1676  03CC  3440               	retlw	64
  1677  03CD  3440               	retlw	64
  1678  03CE  3420               	retlw	32
  1679  03CF  347C               	retlw	124
  1680  03D0  341C               	retlw	28
  1681  03D1  3420               	retlw	32
  1682  03D2  3440               	retlw	64
  1683  03D3  3420               	retlw	32
  1684  03D4  341C               	retlw	28
  1685  03D5  343C               	retlw	60
  1686  03D6  3440               	retlw	64
  1687  03D7  3430               	retlw	48
  1688  03D8  3440               	retlw	64
  1689  03D9  343C               	retlw	60
  1690  03DA  3444               	retlw	68
  1691  03DB  3428               	retlw	40
  1692  03DC  3410               	retlw	16
  1693  03DD  3428               	retlw	40
  1694  03DE  3444               	retlw	68
  1695  03DF  340C               	retlw	12
  1696  03E0  3450               	retlw	80
  1697  03E1  3450               	retlw	80
  1698  03E2  3450               	retlw	80
  1699  03E3  343C               	retlw	60
  1700  03E4  3444               	retlw	68
  1701  03E5  3464               	retlw	100
  1702  03E6  3454               	retlw	84
  1703  03E7  344C               	retlw	76
  1704  03E8  3444               	retlw	68
  1705  03E9  3400               	retlw	0
  1706  03EA  3408               	retlw	8
  1707  03EB  3436               	retlw	54
  1708  03EC  3441               	retlw	65
  1709  03ED  3400               	retlw	0
  1710  03EE  3400               	retlw	0
  1711  03EF  3400               	retlw	0
  1712  03F0  347F               	retlw	127
  1713  03F1  3400               	retlw	0
  1714  03F2  3400               	retlw	0
  1715  03F3  3400               	retlw	0
  1716  03F4  3441               	retlw	65
  1717  03F5  3436               	retlw	54
  1718  03F6  3408               	retlw	8
  1719  03F7  3400               	retlw	0
  1720  03F8  3430               	retlw	48
  1721  03F9  347C               	retlw	124
  1722  03FA  347F               	retlw	127
  1723  03FB  347C               	retlw	124
  1724  03FC  3430               	retlw	48
  1725  03FD  3478               	retlw	120
  1726  03FE  3446               	retlw	70
  1727  03FF  3441               	retlw	65
  1728  0400  3446               	retlw	70
  1729  0401  3478               	retlw	120
  1730  0402                     __end_of_ASCII:	
  1731  0402                     _LARGEnum:	
  1732  0402  34C0               	retlw	192
  1733  0403  3401               	retlw	1
  1734  0404  34C0               	retlw	192
  1735  0405  3401               	retlw	1
  1736  0406  34C0               	retlw	192
  1737  0407  3401               	retlw	1
  1738  0408  34C0               	retlw	192
  1739  0409  3401               	retlw	1
  1740  040A  34C0               	retlw	192
  1741  040B  3401               	retlw	1
  1742  040C  3400               	retlw	0
  1743  040D  3400               	retlw	0
  1744  040E  3400               	retlw	0
  1745  040F  3400               	retlw	0
  1746  0410  3400               	retlw	0
  1747  0411  3400               	retlw	0
  1748  0412  3400               	retlw	0
  1749  0413  3400               	retlw	0
  1750  0414  3400               	retlw	0
  1751  0415  3400               	retlw	0
  1752  0416  3400               	retlw	0
  1753  0417  3400               	retlw	0
  1754  0418  3400               	retlw	0
  1755  0419  340E               	retlw	14
  1756  041A  3400               	retlw	0
  1757  041B  340E               	retlw	14
  1758  041C  3400               	retlw	0
  1759  041D  340E               	retlw	14
  1760  041E  3400               	retlw	0
  1761  041F  3400               	retlw	0
  1762  0420  3400               	retlw	0
  1763  0421  3400               	retlw	0
  1764  0422  3400               	retlw	0
  1765  0423  3400               	retlw	0
  1766  0424  3400               	retlw	0
  1767  0425  3400               	retlw	0
  1768  0426  3400               	retlw	0
  1769  0427  3400               	retlw	0
  1770  0428  3400               	retlw	0
  1771  0429  3400               	retlw	0
  1772  042A  3400               	retlw	0
  1773  042B  3400               	retlw	0
  1774  042C  3400               	retlw	0
  1775  042D  3400               	retlw	0
  1776  042E  3400               	retlw	0
  1777  042F  3400               	retlw	0
  1778  0430  3400               	retlw	0
  1779  0431  3400               	retlw	0
  1780  0432  3400               	retlw	0
  1781  0433  3400               	retlw	0
  1782  0434  3400               	retlw	0
  1783  0435  3400               	retlw	0
  1784  0436  3400               	retlw	0
  1785  0437  3400               	retlw	0
  1786  0438  3400               	retlw	0
  1787  0439  3400               	retlw	0
  1788  043A  3400               	retlw	0
  1789  043B  3400               	retlw	0
  1790  043C  3400               	retlw	0
  1791  043D  3400               	retlw	0
  1792  043E  3400               	retlw	0
  1793  043F  3400               	retlw	0
  1794  0440  34FC               	retlw	252
  1795  0441  3403               	retlw	3
  1796  0442  34FE               	retlw	254
  1797  0443  3407               	retlw	7
  1798  0444  34FF               	retlw	255
  1799  0445  340F               	retlw	15
  1800  0446  3403               	retlw	3
  1801  0447  340C               	retlw	12
  1802  0448  3403               	retlw	3
  1803  0449  340C               	retlw	12
  1804  044A  34FF               	retlw	255
  1805  044B  340F               	retlw	15
  1806  044C  34FE               	retlw	254
  1807  044D  3407               	retlw	7
  1808  044E  34FC               	retlw	252
  1809  044F  3403               	retlw	3
  1810  0450  3400               	retlw	0
  1811  0451  3400               	retlw	0
  1812  0452  3400               	retlw	0
  1813  0453  3400               	retlw	0
  1814  0454  3400               	retlw	0
  1815  0455  3400               	retlw	0
  1816  0456  3430               	retlw	48
  1817  0457  3400               	retlw	0
  1818  0458  3438               	retlw	56
  1819  0459  3400               	retlw	0
  1820  045A  341C               	retlw	28
  1821  045B  3400               	retlw	0
  1822  045C  34FF               	retlw	255
  1823  045D  340F               	retlw	15
  1824  045E  34FF               	retlw	255
  1825  045F  340F               	retlw	15
  1826  0460  34FF               	retlw	255
  1827  0461  340F               	retlw	15
  1828  0462  3400               	retlw	0
  1829  0463  3400               	retlw	0
  1830  0464  3400               	retlw	0
  1831  0465  3400               	retlw	0
  1832  0466  3400               	retlw	0
  1833  0467  3400               	retlw	0
  1834  0468  340C               	retlw	12
  1835  0469  340C               	retlw	12
  1836  046A  340E               	retlw	14
  1837  046B  340E               	retlw	14
  1838  046C  340F               	retlw	15
  1839  046D  340F               	retlw	15
  1840  046E  3483               	retlw	131
  1841  046F  340F               	retlw	15
  1842  0470  34C3               	retlw	195
  1843  0471  340D               	retlw	13
  1844  0472  34FF               	retlw	255
  1845  0473  340C               	retlw	12
  1846  0474  347E               	retlw	126
  1847  0475  340C               	retlw	12
  1848  0476  343C               	retlw	60
  1849  0477  340C               	retlw	12
  1850  0478  3400               	retlw	0
  1851  0479  3400               	retlw	0
  1852  047A  3400               	retlw	0
  1853  047B  3400               	retlw	0
  1854  047C  3404               	retlw	4
  1855  047D  3403               	retlw	3
  1856  047E  340E               	retlw	14
  1857  047F  3407               	retlw	7
  1858  0480  340F               	retlw	15
  1859  0481  340F               	retlw	15
  1860  0482  3463               	retlw	99
  1861  0483  340C               	retlw	12
  1862  0484  3463               	retlw	99
  1863  0485  340C               	retlw	12
  1864  0486  34FF               	retlw	255
  1865  0487  340F               	retlw	15
  1866  0488  34FE               	retlw	254
  1867  0489  3407               	retlw	7
  1868  048A  349C               	retlw	156
  1869  048B  3403               	retlw	3
  1870  048C  3400               	retlw	0
  1871  048D  3400               	retlw	0
  1872  048E  3400               	retlw	0
  1873  048F  3400               	retlw	0
  1874  0490  34C0               	retlw	192
  1875  0491  3401               	retlw	1
  1876  0492  34E0               	retlw	224
  1877  0493  3401               	retlw	1
  1878  0494  34F8               	retlw	248
  1879  0495  3401               	retlw	1
  1880  0496  349C               	retlw	156
  1881  0497  3401               	retlw	1
  1882  0498  348E               	retlw	142
  1883  0499  3401               	retlw	1
  1884  049A  34FF               	retlw	255
  1885  049B  340F               	retlw	15
  1886  049C  34FF               	retlw	255
  1887  049D  340F               	retlw	15
  1888  049E  34FF               	retlw	255
  1889  049F  340F               	retlw	15
  1890  04A0  3480               	retlw	128
  1891  04A1  3401               	retlw	1
  1892  04A2  3400               	retlw	0
  1893  04A3  3400               	retlw	0
  1894  04A4  3478               	retlw	120
  1895  04A5  3403               	retlw	3
  1896  04A6  347F               	retlw	127
  1897  04A7  3407               	retlw	7
  1898  04A8  347F               	retlw	127
  1899  04A9  340F               	retlw	15
  1900  04AA  3433               	retlw	51
  1901  04AB  340C               	retlw	12
  1902  04AC  3433               	retlw	51
  1903  04AD  340C               	retlw	12
  1904  04AE  34F3               	retlw	243
  1905  04AF  340F               	retlw	15
  1906  04B0  34E3               	retlw	227
  1907  04B1  3407               	retlw	7
  1908  04B2  34C3               	retlw	195
  1909  04B3  3403               	retlw	3
  1910  04B4  3400               	retlw	0
  1911  04B5  3400               	retlw	0
  1912  04B6  3400               	retlw	0
  1913  04B7  3400               	retlw	0
  1914  04B8  34F8               	retlw	248
  1915  04B9  3401               	retlw	1
  1916  04BA  34FE               	retlw	254
  1917  04BB  3407               	retlw	7
  1918  04BC  34FF               	retlw	255
  1919  04BD  340F               	retlw	15
  1920  04BE  3423               	retlw	35
  1921  04BF  340C               	retlw	12
  1922  04C0  3433               	retlw	51
  1923  04C1  340C               	retlw	12
  1924  04C2  34F7               	retlw	247
  1925  04C3  340F               	retlw	15
  1926  04C4  34E7               	retlw	231
  1927  04C5  3407               	retlw	7
  1928  04C6  34C6               	retlw	198
  1929  04C7  3403               	retlw	3
  1930  04C8  3400               	retlw	0
  1931  04C9  3400               	retlw	0
  1932  04CA  3400               	retlw	0
  1933  04CB  3400               	retlw	0
  1934  04CC  3403               	retlw	3
  1935  04CD  3400               	retlw	0
  1936  04CE  3403               	retlw	3
  1937  04CF  3400               	retlw	0
  1938  04D0  3403               	retlw	3
  1939  04D1  340E               	retlw	14
  1940  04D2  34C3               	retlw	195
  1941  04D3  340F               	retlw	15
  1942  04D4  34F3               	retlw	243
  1943  04D5  340F               	retlw	15
  1944  04D6  34FB               	retlw	251
  1945  04D7  3400               	retlw	0
  1946  04D8  340F               	retlw	15
  1947  04D9  3400               	retlw	0
  1948  04DA  3403               	retlw	3
  1949  04DB  3400               	retlw	0
  1950  04DC  3400               	retlw	0
  1951  04DD  3400               	retlw	0
  1952  04DE  3400               	retlw	0
  1953  04DF  3400               	retlw	0
  1954  04E0  349C               	retlw	156
  1955  04E1  3403               	retlw	3
  1956  04E2  34FE               	retlw	254
  1957  04E3  3407               	retlw	7
  1958  04E4  34FF               	retlw	255
  1959  04E5  340F               	retlw	15
  1960  04E6  3463               	retlw	99
  1961  04E7  340C               	retlw	12
  1962  04E8  3463               	retlw	99
  1963  04E9  340C               	retlw	12
  1964  04EA  34FF               	retlw	255
  1965  04EB  340F               	retlw	15
  1966  04EC  34FE               	retlw	254
  1967  04ED  3407               	retlw	7
  1968  04EE  349C               	retlw	156
  1969  04EF  3403               	retlw	3
  1970  04F0  3400               	retlw	0
  1971  04F1  3400               	retlw	0
  1972  04F2  3400               	retlw	0
  1973  04F3  3400               	retlw	0
  1974  04F4  343C               	retlw	60
  1975  04F5  3406               	retlw	6
  1976  04F6  347E               	retlw	126
  1977  04F7  340E               	retlw	14
  1978  04F8  34FF               	retlw	255
  1979  04F9  340E               	retlw	14
  1980  04FA  34C3               	retlw	195
  1981  04FB  340C               	retlw	12
  1982  04FC  3443               	retlw	67
  1983  04FD  340C               	retlw	12
  1984  04FE  34FF               	retlw	255
  1985  04FF  340F               	retlw	15
  1986  0500  34FE               	retlw	254
  1987  0501  3407               	retlw	7
  1988  0502  34F8               	retlw	248
  1989  0503  3401               	retlw	1
  1990  0504  3400               	retlw	0
  1991  0505  3400               	retlw	0
  1992  0506                     __end_of_LARGEnum:	
  1993  0506                     _dpowers:	
  1994  0506  3401               	retlw	1
  1995  0507  3400               	retlw	0
  1996  0508  340A               	retlw	10
  1997  0509  3400               	retlw	0
  1998  050A  3464               	retlw	100
  1999  050B  3400               	retlw	0
  2000  050C  34E8               	retlw	232
  2001  050D  3403               	retlw	3
  2002  050E  3410               	retlw	16
  2003  050F  3427               	retlw	39
  2004  0510                     __end_of_dpowers:	
  2005  000B                     _INTCONbits	set	11
  2006  0011                     _PIR1bits	set	17
  2007  000D                     _PORTB	set	13
  2008  0018                     _T1CONbits	set	24
  2009  0017                     _TMR1H	set	23
  2010  0018                     _CARRY	set	24
  2011  005F                     _GIE	set	95
  2012  009D                     _ADCON0	set	157
  2013  009D                     _ADCON0bits	set	157
  2014  009E                     _ADCON1	set	158
  2015  009F                     _ADCON2	set	159
  2016  009C                     _ADRESH	set	156
  2017  009B                     _ADRESL	set	155
  2018  0095                     _OPTION_REG	set	149
  2019  0095                     _OPTION_REGbits	set	149
  2020  0099                     _OSCCON	set	153
  2021  0091                     _PIE1bits	set	145
  2022  008C                     _TRISA	set	140
  2023  008C                     _TRISAbits	set	140
  2024  008D                     _TRISB	set	141
  2025  008D                     _TRISBbits	set	141
  2026  008E                     _TRISC	set	142
  2027  008E                     _TRISCbits	set	142
  2028  04E9                     _GO_nDONE	set	1257
  2029  0118                     _DACCON0bits	set	280
  2030  0119                     _DACCON1	set	281
  2031  0117                     _FVRCONbits	set	279
  2032  010C                     _LATAbits	set	268
  2033  010D                     _LATBbits	set	269
  2034  010E                     _LATCbits	set	270
  2035  0869                     _LATB1	set	2153
  2036  086D                     _LATB5	set	2157
  2037  0191                     _EEADR	set	401
  2038  018C                     _ANSELA	set	396
  2039  018C                     _ANSELAbits	set	396
  2040  018D                     _ANSELB	set	397
  2041  018D                     _ANSELBbits	set	397
  2042  0195                     _EECON1	set	405
  2043  0196                     _EECON2	set	406
  2044  0193                     _EEDATA	set	403
  2045  0197                     _VREGCONbits	set	407
  2046  0CA8                     _RD	set	3240
  2047  0CA9                     _WR	set	3241
  2048  0CAA                     _WREN	set	3242
  2049  0396                     _IOCBFbits	set	918
  2050  0395                     _IOCBNbits	set	917
  2051  0511                     _OPA1CONbits	set	1297
  2052  0510                     STR_1:	
  2053  0510  342E               	retlw	46	;'.'
  2054  0511  342E               	retlw	46	;'.'
  2055  0512  346D               	retlw	109	;'m'
  2056  0513  346F               	retlw	111	;'o'
  2057  0514  346E               	retlw	110	;'n'
  2058  0515  3474               	retlw	116	;'t'
  2059  0516  3468               	retlw	104	;'h'
  2060  0517  3420               	retlw	32	;' '
  2061  0518  343D               	retlw	61	;'='
  2062  0519  3420               	retlw	32	;' '
  2063  051A  3425               	retlw	37	;'%'
  2064  051B  3430               	retlw	48	;'0'
  2065  051C  3432               	retlw	50	;'2'
  2066  051D  3464               	retlw	100	;'d'
  2067  051E  3400               	retlw	0
  2068  051F                     STR_2:	
  2069  051F  344C               	retlw	76	;'L'
  2070  0520  3465               	retlw	101	;'e'
  2071  0521  3461               	retlw	97	;'a'
  2072  0522  3472               	retlw	114	;'r'
  2073  0523  346E               	retlw	110	;'n'
  2074  0524  3442               	retlw	66	;'B'
  2075  0525  3479               	retlw	121	;'y'
  2076  0526  344D               	retlw	77	;'M'
  2077  0527  3461               	retlw	97	;'a'
  2078  0528  346B               	retlw	107	;'k'
  2079  0529  3469               	retlw	105	;'i'
  2080  052A  346E               	retlw	110	;'n'
  2081  052B  3467               	retlw	103	;'g'
  2082  052C  3400               	retlw	0
  2083  052D                     STR_4:	
  2084  052D  3447               	retlw	71	;'G'
  2085  052E  344C               	retlw	76	;'L'
  2086  052F  3455               	retlw	85	;'U'
  2087  0530  3443               	retlw	67	;'C'
  2088  0531  344F               	retlw	79	;'O'
  2089  0532  344D               	retlw	77	;'M'
  2090  0533  3445               	retlw	69	;'E'
  2091  0534  3454               	retlw	84	;'T'
  2092  0535  3445               	retlw	69	;'E'
  2093  0536  3452               	retlw	82	;'R'
  2094  0537  3400               	retlw	0
  2095  0538                     STR_3:	
  2096  0538  3455               	retlw	85	;'U'
  2097  0539  344E               	retlw	78	;'N'
  2098  053A  3449               	retlw	73	;'I'
  2099  053B  3456               	retlw	86	;'V'
  2100  053C  3445               	retlw	69	;'E'
  2101  053D  3452               	retlw	82	;'R'
  2102  053E  3453               	retlw	83	;'S'
  2103  053F  3441               	retlw	65	;'A'
  2104  0540  344C               	retlw	76	;'L'
  2105  0541  3400               	retlw	0
  2106                           
  2107                           ; #config settings
  2108  0000                     
  2109                           	psect	cinit
  2110  01DD                     start_initialization:	
  2111  01DD                     __initialization:		;BIGRAM
  2112                           
  2113                           ; Clear objects allocated to BIGRAM
  2114  01DD  30C4               	movlw	low (0+8900)
  2115  01DE  0084               	movwf	4
  2116  01DF  3022               	movlw	high (0+8900)
  2117  01E0  0085               	movwf	5
  2118  01E1  302C               	movlw	44
  2119  01E2  00FE               	movwf	btemp
  2120  01E3  3001               	movlw	1
  2121  01E4  00FF               	movwf	btemp+1
  2122  01E5  3187  27F4  3181   	fcall	clear_ram0
  2123                           
  2124                           ; Clear objects allocated to COMMON
  2125  01E8  01F7               	clrf	__pbssCOMMON& (0+127)
  2126  01E9  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  2127  01EA  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  2128  01EB  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  2129  01EC  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  2130  01ED  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  2131                           
  2132                           ; Clear objects allocated to BANK0
  2133  01EE  01DB               	clrf	__pbssBANK0& (0+127)
  2134  01EF  01DC               	clrf	(__pbssBANK0+1)& (0+127)
  2135  01F0  01DD               	clrf	(__pbssBANK0+2)& (0+127)
  2136  01F1  01DE               	clrf	(__pbssBANK0+3)& (0+127)
  2137  01F2  01DF               	clrf	(__pbssBANK0+4)& (0+127)
  2138  01F3  01E0               	clrf	(__pbssBANK0+5)& (0+127)
  2139                           
  2140                           ; Clear objects allocated to BANK1
  2141  01F4  30A0               	movlw	low __pbssBANK1
  2142  01F5  0084               	movwf	4
  2143  01F6  3000               	movlw	high __pbssBANK1
  2144  01F7  0085               	movwf	5
  2145  01F8  3030               	movlw	48
  2146  01F9  00FE               	movwf	btemp
  2147  01FA  3000               	movlw	0
  2148  01FB  00FF               	movwf	btemp+1
  2149  01FC  3187  27F4  3181   	fcall	clear_ram0
  2150                           
  2151                           ; Initialize objects allocated to COMMON
  2152  01FF  3180  2003  3181   	fcall	__pidataCOMMON	;fetch initializer
  2153  0202  00FD               	movwf	__pdataCOMMON& (0+127)
  2154                           
  2155                           ; Initialize objects allocated to BANK0
  2156  0203  30FE               	movlw	low __pidataBANK0
  2157  0204  0084               	movwf	4
  2158  0205  3091               	movlw	(high __pidataBANK0)| (0+128)
  2159  0206  0085               	movwf	5
  2160  0207  3061               	movlw	low __pdataBANK0
  2161  0208  0086               	movwf	6
  2162  0209  3000               	movlw	high __pdataBANK0
  2163  020A  0087               	movwf	7
  2164  020B  3000               	movlw	0
  2165  020C  00FF               	movwf	btemp+1
  2166  020D  3006               	movlw	6
  2167  020E  3192  2218  3181   	fcall	init_ram
  2168                           
  2169                           ; Initialize objects allocated to BANK1
  2170  0211  3033               	movlw	low __pidataBANK1
  2171  0212  0084               	movwf	4
  2172  0213  3092               	movlw	(high __pidataBANK1)| (0+128)
  2173  0214  0085               	movwf	5
  2174  0215  30D0               	movlw	low __pdataBANK1
  2175  0216  0086               	movwf	6
  2176  0217  3000               	movlw	high __pdataBANK1
  2177  0218  0087               	movwf	7
  2178  0219  3000               	movlw	0
  2179  021A  00FF               	movwf	btemp+1
  2180  021B  3010               	movlw	16
  2181  021C  3192  2218         	fcall	init_ram
  2182  021E                     end_of_initialization:	
  2183                           ;End of C runtime variable initialization code
  2184                           
  2185  021E                     __end_of__initialization:	
  2186  021E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2187  021F  0020               	movlb	0
  2188  0220  318E  2E0C         	ljmp	_main	;jump to C main() function
  2189                           
  2190                           	psect	bssCOMMON
  2191  0077                     __pbssCOMMON:	
  2192  0077                     _RedingCount:	
  2193  0077                     	ds	1
  2194  0078                     _gBloodNotInsetrted:	
  2195  0078                     	ds	1
  2196  0079                     _gExitMemoryMode:	
  2197  0079                     	ds	1
  2198  007A                     _gOneReadingDisplyed:	
  2199  007A                     	ds	1
  2200  007B                     _gStripInserted:	
  2201  007B                     	ds	1
  2202  007C                     _gglucDataReady:	
  2203  007C                     	ds	1
  2204                           
  2205                           	psect	dataCOMMON
  2206  007D                     __pdataCOMMON:	
  2207  007D                     _gYmmoldecimalchar:	
  2208  007D                     	ds	1
  2209                           
  2210                           	psect	bssBANK0
  2211  005B                     __pbssBANK0:	
  2212  005B                     _EEADRS:	
  2213  005B                     	ds	1
  2214  005C                     _gMemorymode:	
  2215  005C                     	ds	1
  2216  005D                     _gSavedReadingCnt:	
  2217  005D                     	ds	1
  2218  005E                     _gSenseTestStrip:	
  2219  005E                     	ds	1
  2220  005F                     _gSleepMode:	
  2221  005F                     	ds	1
  2222  0060                     _gStripRemoved:	
  2223  0060                     	ds	1
  2224                           
  2225                           	psect	dataBANK0
  2226  0061                     __pdataBANK0:	
  2227  0061                     _Days:	
  2228  0061                     	ds	1
  2229  0062                     _Hours:	
  2230  0062                     	ds	1
  2231  0063                     _Minutes:	
  2232  0063                     	ds	1
  2233  0064                     _Month:	
  2234  0064                     	ds	1
  2235  0065                     _Year:	
  2236  0065                     	ds	1
  2237  0066                     _gYmmolchar:	
  2238  0066                     	ds	1
  2239                           
  2240                           	psect	bssBANK1
  2241  00A0                     __pbssBANK1:	
  2242  00A0                     _gAverageGlucose:	
  2243  00A0                     	ds	4
  2244  00A4                     _gSigmaGlucoseValue:	
  2245  00A4                     	ds	4
  2246  00A8                     _gTemp:	
  2247  00A8                     	ds	3
  2248  00AB                     _gY:	
  2249  00AB                     	ds	3
  2250  00AE                     _gYmmol:	
  2251  00AE                     	ds	3
  2252  00B1                     _gYmmoldecimal:	
  2253  00B1                     	ds	3
  2254  00B4                     _gReadData:	
  2255  00B4                     	ds	2
  2256  00B6                     _gReadTemp:	
  2257  00B6                     	ds	2
  2258  00B8                     _gTempint:	
  2259  00B8                     	ds	2
  2260  00BA                     _gTempint2:	
  2261  00BA                     	ds	2
  2262  00BC                     _gYint2:	
  2263  00BC                     	ds	2
  2264  00BE                     _gcaptured2SValue:	
  2265  00BE                     	ds	2
  2266  00C0                     _gglucoseIndex:	
  2267  00C0                     	ds	2
  2268  00C2                     _Seconds:	
  2269  00C2                     	ds	1
  2270  00C3                     _gDaysRead:	
  2271  00C3                     	ds	1
  2272  00C4                     _gDisplayPreviousReading:	
  2273  00C4                     	ds	1
  2274  00C5                     _gHoursRead:	
  2275  00C5                     	ds	1
  2276  00C6                     _gMinutesRead:	
  2277  00C6                     	ds	1
  2278  00C7                     _gMonthRead:	
  2279  00C7                     	ds	1
  2280  00C8                     _gReadCount:	
  2281  00C8                     	ds	1
  2282  00C9                     _gSetDateTime:	
  2283  00C9                     	ds	1
  2284  00CA                     _gYearRead:	
  2285  00CA                     	ds	1
  2286  00CB                     _gYmmolDecimalRead:	
  2287  00CB                     	ds	1
  2288  00CC                     _gYmmolRead:	
  2289  00CC                     	ds	1
  2290  00CD                     _gXadc:	
  2291  00CD                     	ds	3
  2292                           
  2293                           	psect	dataBANK1
  2294  00D0                     __pdataBANK1:	
  2295  00D0                     _gStripIdleTime:	
  2296  00D0                     	ds	4
  2297  00D4                     _gcountIdleTime:	
  2298  00D4                     	ds	4
  2299  00D8                     _gtimeOutCount:	
  2300  00D8                     	ds	4
  2301  00DC                     _gYint:	
  2302  00DC                     	ds	2
  2303  00DE                     _gcounter:	
  2304  00DE                     	ds	2
  2305                           
  2306                           	psect	clrtext
  2307  07F4                     clear_ram0:	
  2308                           ;	Called with FSR0 containing the base address, and
  2309                           ;	btemp/btemp+1 has the size to clear
  2310                           
  2311  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2312  07F5                     clrloop0:	
  2313  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2314  07F6  3101               	addfsr 0,1
  2315  07F7  3001               	movlw	1
  2316  07F8  02FE               	subwf	126,f
  2317  07F9  3000               	movlw	0
  2318  07FA  3BFF               	subwfb	127,f
  2319  07FB  087F               	movf	127,w
  2320  07FC  047E               	iorwf	126,w
  2321  07FD  1903               	btfsc	3,2
  2322  07FE  3400               	retlw	0	;all done for this memory range, return
  2323  07FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  2324                           
  2325                           	psect	inittext
  2326  1218                     init_ram:	
  2327  1218  00FE               	movwf	126
  2328  1219                     initloop:	
  2329  1219  0012               	moviw fsr0++
  2330  121A  001E               	movwi fsr1++
  2331  121B  3001               	movlw	1
  2332  121C  02FE               	subwf	126,f
  2333  121D  3000               	movlw	0
  2334  121E  3BFF               	subwfb	127,f
  2335  121F  087F               	movf	127,w
  2336  1220  047E               	iorwf	126,w
  2337  1221  1903               	btfsc	3,2
  2338  1222  3400               	retlw	0
  2339  1223  2A19               	goto	initloop
  2340                           
  2341                           	psect	cstackBANK2
  2342  0120                     __pcstackBANK2:	
  2343  0120                     SetTime@tMonth:	
  2344                           
  2345                           ; 1 bytes @ 0x0
  2346  0120                     	ds	1
  2347  0121                     SetTime@tDay:	
  2348                           
  2349                           ; 1 bytes @ 0x1
  2350  0121                     	ds	1
  2351  0122                     SetTime@tYear:	
  2352                           
  2353                           ; 1 bytes @ 0x2
  2354  0122                     	ds	1
  2355  0123                     SetTime@tHour:	
  2356                           
  2357                           ; 1 bytes @ 0x3
  2358  0123                     	ds	1
  2359  0124                     SetTime@tMin:	
  2360                           
  2361                           ; 1 bytes @ 0x4
  2362  0124                     	ds	1
  2363  0125                     SetTime@pre_confirm_count:	
  2364                           
  2365                           ; 1 bytes @ 0x5
  2366  0125                     	ds	1
  2367  0126                     SetTime@set_time_date_loop:	
  2368                           
  2369                           ; 1 bytes @ 0x6
  2370  0126                     	ds	1
  2371  0127                     SetTime@year_2:	
  2372                           
  2373                           ; 1 bytes @ 0x7
  2374  0127                     	ds	1
  2375  0128                     SetTime@month_2:	
  2376                           
  2377                           ; 1 bytes @ 0x8
  2378  0128                     	ds	1
  2379  0129                     SetTime@day_2:	
  2380                           
  2381                           ; 1 bytes @ 0x9
  2382  0129                     	ds	1
  2383  012A                     SetTime@hour_2:	
  2384                           
  2385                           ; 1 bytes @ 0xA
  2386  012A                     	ds	1
  2387  012B                     SetTime@min_2:	
  2388                           
  2389                           ; 1 bytes @ 0xB
  2390  012B                     	ds	1
  2391  012C                     SetTime@year_1:	
  2392                           
  2393                           ; 1 bytes @ 0xC
  2394  012C                     	ds	1
  2395  012D                     SetTime@month_1:	
  2396                           
  2397                           ; 1 bytes @ 0xD
  2398  012D                     	ds	1
  2399  012E                     SetTime@day_1:	
  2400                           
  2401                           ; 1 bytes @ 0xE
  2402  012E                     	ds	1
  2403  012F                     SetTime@hour_1:	
  2404                           
  2405                           ; 1 bytes @ 0xF
  2406  012F                     	ds	1
  2407  0130                     SetTime@min_1:	
  2408                           
  2409                           ; 1 bytes @ 0x10
  2410  0130                     	ds	1
  2411  0131                     SetTime@confirm_count:	
  2412                           
  2413                           ; 1 bytes @ 0x11
  2414  0131                     	ds	1
  2415  0132                     SetTime@sw1_count:	
  2416                           
  2417                           ; 1 bytes @ 0x12
  2418  0132                     	ds	1
  2419                           
  2420                           	psect	cstackBANK1
  2421  00E0                     __pcstackBANK1:	
  2422  00E0                     DisplaySavedGlucoReading@read_mgdl_int:	
  2423                           
  2424                           ; 2 bytes @ 0x0
  2425  00E0                     	ds	2
  2426  00E2                     DisplaySavedGlucoReading@read_mgdl:	
  2427                           
  2428                           ; 3 bytes @ 0x2
  2429  00E2                     	ds	3
  2430  00E5                     ??_main:	
  2431                           
  2432                           ; 1 bytes @ 0x5
  2433  00E5                     	ds	4
  2434                           
  2435                           	psect	cstackCOMMON
  2436  0070                     __pcstackCOMMON:	
  2437  0070                     ?_isdigit:	
  2438  0070                     ?_ConfigureOscillator:	
  2439                           ; 1 bit 
  2440                           
  2441  0070                     ?_InitApp:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_InitTimer1:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_InitADC:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_LCDInit:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_LCDClear:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_SW1_pressed:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_SW3_pressed:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_eeprom_read:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_EnterDeepSleep:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_SenseTestStrip:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_CalcGlucose:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_putch:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_HwInit:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_SetTime:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_Delay_1_Second:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_SaveGlucoReading:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_ReadSavedGlucoReading:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_DisplaySavedGlucoReading:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_main:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_isr:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_LCDCharacter:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ?i1_LCDInit:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?i1_LCDWrite:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     putch@c:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     i1LCDWrite@data:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516                           
  2517                           ; 1 bytes @ 0x0
  2518  0070                     	ds	1
  2519  0071                     ??i1_LCDWrite:	
  2520                           
  2521                           ; 1 bytes @ 0x1
  2522  0071                     	ds	1
  2523  0072                     i1LCDWrite@data_or_command:	
  2524                           
  2525                           ; 1 bytes @ 0x2
  2526  0072                     	ds	1
  2527  0073                     i1LCDWrite@d:	
  2528                           
  2529                           ; 1 bytes @ 0x3
  2530  0073                     	ds	1
  2531  0074                     i1LCDWrite@i:	
  2532                           
  2533                           ; 1 bytes @ 0x4
  2534  0074                     	ds	1
  2535  0075                     ??i1_LCDInit:	
  2536                           
  2537                           ; 1 bytes @ 0x5
  2538  0075                     	ds	2
  2539                           
  2540                           	psect	cstackBANK0
  2541  0020                     __pcstackBANK0:	
  2542  0020                     ??_isr:	
  2543                           
  2544                           ; 1 bytes @ 0x0
  2545  0020                     	ds	9
  2546  0029                     ?___ftge:	
  2547  0029                     ??_ConfigureOscillator:	
  2548                           ; 1 bit 
  2549                           
  2550  0029                     ??_InitApp:	
  2551                           ; 1 bytes @ 0x9
  2552                           
  2553  0029                     ??_InitTimer1:	
  2554                           ; 1 bytes @ 0x9
  2555                           
  2556  0029                     ??_InitADC:	
  2557                           ; 1 bytes @ 0x9
  2558                           
  2559  0029                     ??_SW1_pressed:	
  2560                           ; 1 bytes @ 0x9
  2561                           
  2562  0029                     ??_SW3_pressed:	
  2563                           ; 1 bytes @ 0x9
  2564                           
  2565  0029                     ?_eeprom_write:	
  2566                           ; 1 bytes @ 0x9
  2567                           
  2568  0029                     ??_eeprom_read:	
  2569                           ; 1 bytes @ 0x9
  2570                           
  2571  0029                     ??_EnterDeepSleep:	
  2572                           ; 1 bytes @ 0x9
  2573                           
  2574  0029                     ??_putch:	
  2575                           ; 1 bytes @ 0x9
  2576                           
  2577  0029                     ??_isdigit:	
  2578                           ; 1 bytes @ 0x9
  2579                           
  2580  0029                     ??_Delay_1_Second:	
  2581                           ; 1 bytes @ 0x9
  2582                           
  2583  0029                     ?___bmul:	
  2584                           ; 1 bytes @ 0x9
  2585                           
  2586  0029                     ?___wmul:	
  2587                           ; 1 bytes @ 0x9
  2588                           
  2589  0029                     ?___awdiv:	
  2590                           ; 2 bytes @ 0x9
  2591                           
  2592  0029                     ?___lwdiv:	
  2593                           ; 2 bytes @ 0x9
  2594                           
  2595  0029                     ?___ftpack:	
  2596                           ; 2 bytes @ 0x9
  2597                           
  2598  0029                     ?___fttol:	
  2599                           ; 3 bytes @ 0x9
  2600                           
  2601  0029                     eeprom_write@value:	
  2602                           ; 4 bytes @ 0x9
  2603                           
  2604  0029                     ___bmul@multiplicand:	
  2605                           ; 1 bytes @ 0x9
  2606                           
  2607  0029                     _isdigit$1429:	
  2608                           ; 1 bytes @ 0x9
  2609                           
  2610  0029                     ___wmul@multiplier:	
  2611                           ; 1 bytes @ 0x9
  2612                           
  2613  0029                     ___awdiv@divisor:	
  2614                           ; 2 bytes @ 0x9
  2615                           
  2616  0029                     ___lwdiv@divisor:	
  2617                           ; 2 bytes @ 0x9
  2618                           
  2619  0029                     ___ftpack@arg:	
  2620                           ; 2 bytes @ 0x9
  2621                           
  2622  0029                     ___ftge@ff1:	
  2623                           ; 3 bytes @ 0x9
  2624                           
  2625  0029                     ___fttol@f1:	
  2626                           ; 3 bytes @ 0x9
  2627                           
  2628                           
  2629                           ; 3 bytes @ 0x9
  2630  0029                     	ds	1
  2631  002A                     ??_eeprom_write:	
  2632  002A                     ??___bmul:	
  2633                           ; 1 bytes @ 0xA
  2634                           
  2635  002A                     SW1_pressed@SW1_press:	
  2636                           ; 1 bytes @ 0xA
  2637                           
  2638  002A                     SW3_pressed@SW3_press:	
  2639                           ; 1 bytes @ 0xA
  2640                           
  2641  002A                     isdigit@c:	
  2642                           ; 1 bytes @ 0xA
  2643                           
  2644                           
  2645                           ; 1 bytes @ 0xA
  2646  002A                     	ds	1
  2647  002B                     ___bmul@product:	
  2648  002B                     ___wmul@multiplicand:	
  2649                           ; 1 bytes @ 0xB
  2650                           
  2651  002B                     ___awdiv@dividend:	
  2652                           ; 2 bytes @ 0xB
  2653                           
  2654  002B                     ___lwdiv@dividend:	
  2655                           ; 2 bytes @ 0xB
  2656                           
  2657                           
  2658                           ; 2 bytes @ 0xB
  2659  002B                     	ds	1
  2660  002C                     eeprom_read@addr:	
  2661  002C                     eeprom_write@addr:	
  2662                           ; 1 bytes @ 0xC
  2663                           
  2664  002C                     ___bmul@multiplier:	
  2665                           ; 1 bytes @ 0xC
  2666                           
  2667  002C                     ___ftpack@exp:	
  2668                           ; 1 bytes @ 0xC
  2669                           
  2670  002C                     ___ftge@ff2:	
  2671                           ; 1 bytes @ 0xC
  2672                           
  2673                           
  2674                           ; 3 bytes @ 0xC
  2675  002C                     	ds	1
  2676  002D                     ??_SaveGlucoReading:	
  2677  002D                     ??_ReadSavedGlucoReading:	
  2678                           ; 1 bytes @ 0xD
  2679                           
  2680  002D                     ??___wmul:	
  2681                           ; 1 bytes @ 0xD
  2682                           
  2683  002D                     ??___awdiv:	
  2684                           ; 1 bytes @ 0xD
  2685                           
  2686  002D                     ??___fttol:	
  2687                           ; 1 bytes @ 0xD
  2688                           
  2689  002D                     ??___lwdiv:	
  2690                           ; 1 bytes @ 0xD
  2691                           
  2692  002D                     ___ftpack@sign:	
  2693                           ; 1 bytes @ 0xD
  2694                           
  2695  002D                     ___wmul@product:	
  2696                           ; 1 bytes @ 0xD
  2697                           
  2698                           
  2699                           ; 2 bytes @ 0xD
  2700  002D                     	ds	1
  2701  002E                     ??___ftpack:	
  2702  002E                     ___awdiv@counter:	
  2703                           ; 1 bytes @ 0xE
  2704                           
  2705  002E                     ___lwdiv@counter:	
  2706                           ; 1 bytes @ 0xE
  2707                           
  2708                           
  2709                           ; 1 bytes @ 0xE
  2710  002E                     	ds	1
  2711  002F                     ?_LCDWrite:	
  2712  002F                     ??___ftge:	
  2713                           ; 1 bytes @ 0xF
  2714                           
  2715  002F                     ReadSavedGlucoReading@reading_count:	
  2716                           ; 1 bytes @ 0xF
  2717                           
  2718  002F                     LCDWrite@data:	
  2719                           ; 1 bytes @ 0xF
  2720                           
  2721  002F                     ___awdiv@sign:	
  2722                           ; 1 bytes @ 0xF
  2723                           
  2724  002F                     ___lwdiv@quotient:	
  2725                           ; 1 bytes @ 0xF
  2726                           
  2727                           
  2728                           ; 2 bytes @ 0xF
  2729  002F                     	ds	1
  2730  0030                     ??_LCDWrite:	
  2731  0030                     ___awdiv@quotient:	
  2732                           ; 1 bytes @ 0x10
  2733                           
  2734                           
  2735                           ; 2 bytes @ 0x10
  2736  0030                     	ds	1
  2737  0031                     ?___lwmod:	
  2738  0031                     ?___ftdiv:	
  2739                           ; 2 bytes @ 0x11
  2740                           
  2741  0031                     ?___lbtoft:	
  2742                           ; 3 bytes @ 0x11
  2743                           
  2744  0031                     LCDWrite@data_or_command:	
  2745                           ; 3 bytes @ 0x11
  2746                           
  2747  0031                     ___fttol@sign1:	
  2748                           ; 1 bytes @ 0x11
  2749                           
  2750  0031                     ___lwmod@divisor:	
  2751                           ; 1 bytes @ 0x11
  2752                           
  2753  0031                     ___ftdiv@f2:	
  2754                           ; 2 bytes @ 0x11
  2755                           
  2756                           
  2757                           ; 3 bytes @ 0x11
  2758  0031                     	ds	1
  2759  0032                     ?___awtoft:	
  2760  0032                     LCDWrite@d:	
  2761                           ; 3 bytes @ 0x12
  2762                           
  2763  0032                     ___awtoft@c:	
  2764                           ; 1 bytes @ 0x12
  2765                           
  2766  0032                     ___fttol@lval:	
  2767                           ; 2 bytes @ 0x12
  2768                           
  2769                           
  2770                           ; 4 bytes @ 0x12
  2771  0032                     	ds	1
  2772  0033                     LCDWrite@i:	
  2773  0033                     ___lwmod@dividend:	
  2774                           ; 1 bytes @ 0x13
  2775                           
  2776                           
  2777                           ; 2 bytes @ 0x13
  2778  0033                     	ds	1
  2779  0034                     ??_LCDInit:	
  2780  0034                     ?_gotoXY:	
  2781                           ; 1 bytes @ 0x14
  2782                           
  2783  0034                     ??_LCDCharacter:	
  2784                           ; 1 bytes @ 0x14
  2785                           
  2786  0034                     ??___lbtoft:	
  2787                           ; 1 bytes @ 0x14
  2788                           
  2789  0034                     gotoXY@y:	
  2790                           ; 1 bytes @ 0x14
  2791                           
  2792  0034                     ___ftdiv@f1:	
  2793                           ; 1 bytes @ 0x14
  2794                           
  2795                           
  2796                           ; 3 bytes @ 0x14
  2797  0034                     	ds	1
  2798  0035                     ??_gotoXY:	
  2799  0035                     ??___awtoft:	
  2800                           ; 1 bytes @ 0x15
  2801                           
  2802  0035                     ??___lwmod:	
  2803                           ; 1 bytes @ 0x15
  2804                           
  2805                           
  2806                           ; 1 bytes @ 0x15
  2807  0035                     	ds	1
  2808  0036                     ??_HwInit:	
  2809  0036                     gotoXY@x:	
  2810                           ; 1 bytes @ 0x16
  2811                           
  2812  0036                     ___fttol@exp1:	
  2813                           ; 1 bytes @ 0x16
  2814                           
  2815  0036                     ___lwmod@counter:	
  2816                           ; 1 bytes @ 0x16
  2817                           
  2818                           
  2819                           ; 1 bytes @ 0x16
  2820  0036                     	ds	1
  2821  0037                     ??_LCDClear:	
  2822  0037                     ??___ftdiv:	
  2823                           ; 1 bytes @ 0x17
  2824                           
  2825  0037                     ?_printf:	
  2826                           ; 1 bytes @ 0x17
  2827                           
  2828  0037                     ___awtoft@sign:	
  2829                           ; 2 bytes @ 0x17
  2830                           
  2831  0037                     printf@f:	
  2832                           ; 1 bytes @ 0x17
  2833                           
  2834                           
  2835                           ; 2 bytes @ 0x17
  2836  0037                     	ds	1
  2837  0038                     ___lbtoft@c:	
  2838  0038                     LCDClear@index:	
  2839                           ; 1 bytes @ 0x18
  2840                           
  2841                           
  2842                           ; 2 bytes @ 0x18
  2843  0038                     	ds	1
  2844  0039                     ?___ftneg:	
  2845  0039                     LCDCharacter@character:	
  2846                           ; 3 bytes @ 0x19
  2847                           
  2848  0039                     ___ftneg@f1:	
  2849                           ; 1 bytes @ 0x19
  2850                           
  2851                           
  2852                           ; 3 bytes @ 0x19
  2853  0039                     	ds	1
  2854  003A                     ??_SenseTestStrip:	
  2855  003A                     LCDCharacter@index:	
  2856                           ; 1 bytes @ 0x1A
  2857                           
  2858                           
  2859                           ; 2 bytes @ 0x1A
  2860  003A                     	ds	1
  2861  003B                     ??_printf:	
  2862  003B                     ___ftdiv@cntr:	
  2863                           ; 1 bytes @ 0x1B
  2864                           
  2865                           
  2866                           ; 1 bytes @ 0x1B
  2867  003B                     	ds	1
  2868  003C                     ?_LCDString:	
  2869  003C                     ??___ftneg:	
  2870                           ; 1 bytes @ 0x1C
  2871                           
  2872  003C                     ?___ftadd:	
  2873                           ; 1 bytes @ 0x1C
  2874                           
  2875  003C                     LCDString@characters:	
  2876                           ; 3 bytes @ 0x1C
  2877                           
  2878  003C                     ___ftadd@f1:	
  2879                           ; 2 bytes @ 0x1C
  2880                           
  2881  003C                     ___ftdiv@f3:	
  2882                           ; 3 bytes @ 0x1C
  2883                           
  2884                           
  2885                           ; 3 bytes @ 0x1C
  2886  003C                     	ds	2
  2887  003E                     ??_LCDString:	
  2888  003E                     SenseTestStrip@temp_adc:	
  2889                           ; 1 bytes @ 0x1E
  2890                           
  2891                           
  2892                           ; 2 bytes @ 0x1E
  2893  003E                     	ds	1
  2894  003F                     printf@ap:	
  2895  003F                     ___ftdiv@exp:	
  2896                           ; 1 bytes @ 0x1F
  2897                           
  2898  003F                     ___ftadd@f2:	
  2899                           ; 1 bytes @ 0x1F
  2900                           
  2901                           
  2902                           ; 3 bytes @ 0x1F
  2903  003F                     	ds	1
  2904  0040                     SenseTestStrip@index:	
  2905  0040                     printf@prec:	
  2906                           ; 1 bytes @ 0x20
  2907                           
  2908  0040                     ___ftdiv@sign:	
  2909                           ; 1 bytes @ 0x20
  2910                           
  2911                           
  2912                           ; 1 bytes @ 0x20
  2913  0040                     	ds	1
  2914  0041                     printf@val:	
  2915                           
  2916                           ; 2 bytes @ 0x21
  2917  0041                     	ds	1
  2918  0042                     ??___ftadd:	
  2919                           
  2920                           ; 1 bytes @ 0x22
  2921  0042                     	ds	1
  2922  0043                     printf@flag:	
  2923                           
  2924                           ; 1 bytes @ 0x23
  2925  0043                     	ds	1
  2926  0044                     printf@width:	
  2927                           
  2928                           ; 2 bytes @ 0x24
  2929  0044                     	ds	2
  2930  0046                     printf@c:	
  2931  0046                     ___ftadd@sign:	
  2932                           ; 1 bytes @ 0x26
  2933                           
  2934                           
  2935                           ; 1 bytes @ 0x26
  2936  0046                     	ds	1
  2937  0047                     ??_SetTime:	
  2938  0047                     ___ftadd@exp2:	
  2939                           ; 1 bytes @ 0x27
  2940                           
  2941                           
  2942                           ; 1 bytes @ 0x27
  2943  0047                     	ds	1
  2944  0048                     ___ftadd@exp1:	
  2945                           
  2946                           ; 1 bytes @ 0x28
  2947  0048                     	ds	1
  2948  0049                     ?___ftmul:	
  2949  0049                     ___ftmul@f1:	
  2950                           ; 3 bytes @ 0x29
  2951                           
  2952                           
  2953                           ; 3 bytes @ 0x29
  2954  0049                     	ds	3
  2955  004C                     ___ftmul@f2:	
  2956                           
  2957                           ; 3 bytes @ 0x2C
  2958  004C                     	ds	3
  2959  004F                     ??___ftmul:	
  2960                           
  2961                           ; 1 bytes @ 0x2F
  2962  004F                     	ds	4
  2963  0053                     ___ftmul@exp:	
  2964                           
  2965                           ; 1 bytes @ 0x33
  2966  0053                     	ds	1
  2967  0054                     ___ftmul@f3_as_product:	
  2968                           
  2969                           ; 3 bytes @ 0x34
  2970  0054                     	ds	3
  2971  0057                     ___ftmul@cntr:	
  2972                           
  2973                           ; 1 bytes @ 0x37
  2974  0057                     	ds	1
  2975  0058                     ___ftmul@sign:	
  2976                           
  2977                           ; 1 bytes @ 0x38
  2978  0058                     	ds	1
  2979  0059                     ??_CalcGlucose:	
  2980  0059                     ??_DisplaySavedGlucoReading:	
  2981                           ; 1 bytes @ 0x39
  2982                           
  2983                           
  2984                           ; 1 bytes @ 0x39
  2985  0059                     	ds	2
  2986                           
  2987                           	psect	maintext
  2988  0E0C                     __pmaintext:	
  2989 ;;
  2990 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2991 ;;
  2992 ;; *************** function _main *****************
  2993 ;; Defined at:
  2994 ;;		line 107 in file "glucose_meter_main.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : B1F/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:        4 bytes
  3013 ;; Hardware stack levels required when called:    7
  3014 ;; This function calls:
  3015 ;;		_CalcGlucose
  3016 ;;		_Delay_1_Second
  3017 ;;		_DisplaySavedGlucoReading
  3018 ;;		_EnterDeepSleep
  3019 ;;		_HwInit
  3020 ;;		_LCDClear
  3021 ;;		_LCDInit
  3022 ;;		_LCDString
  3023 ;;		_ReadSavedGlucoReading
  3024 ;;		_SaveGlucoReading
  3025 ;;		_SenseTestStrip
  3026 ;;		_SetTime
  3027 ;;		___ftadd
  3028 ;;		___ftdiv
  3029 ;;		___ftmul
  3030 ;;		___ftneg
  3031 ;;		___fttol
  3032 ;;		___lbtoft
  3033 ;;		_gotoXY
  3034 ;; This function is called by:
  3035 ;;		Startup code after reset
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _main
  3041  0E0C                     _main:	
  3042                           
  3043                           ;glucose_meter_main.c: 109: HwInit();
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3047  0E0C  3192  22DE  318E   	fcall	_HwInit
  3048                           
  3049                           ;glucose_meter_main.c: 110: LCDInit();
  3050  0E0F  3195  2589  318E   	fcall	_LCDInit
  3051                           
  3052                           ;glucose_meter_main.c: 111: LCDClear();
  3053  0E12  3193  2364  318E   	fcall	_LCDClear
  3054                           
  3055                           ;glucose_meter_main.c: 113: LCDString("LearnByMaking");
  3056  0E15  301F               	movlw	low (STR_2| (0+32768))
  3057  0E16  0020               	movlb	0	; select bank0
  3058  0E17  00BC               	movwf	LCDString@characters
  3059  0E18  3085               	movlw	high (STR_2| (0+32768))
  3060  0E19  00BD               	movwf	LCDString@characters+1
  3061  0E1A  3192  2290  318E   	fcall	_LCDString
  3062                           
  3063                           ;glucose_meter_main.c: 118: Delay_1_Second();
  3064  0E1D  3194  24BA  318E   	fcall	_Delay_1_Second
  3065                           
  3066                           ;glucose_meter_main.c: 119: LCDClear();
  3067  0E20  3193  2364  318E   	fcall	_LCDClear
  3068                           
  3069                           ;glucose_meter_main.c: 121: LCDString("UNIVERSAL");
  3070  0E23  3038               	movlw	low (STR_3| (0+32768))
  3071  0E24  0020               	movlb	0	; select bank0
  3072  0E25  00BC               	movwf	LCDString@characters
  3073  0E26  3085               	movlw	high (STR_3| (0+32768))
  3074  0E27  00BD               	movwf	LCDString@characters+1
  3075  0E28  3192  2290  318E   	fcall	_LCDString
  3076                           
  3077                           ;glucose_meter_main.c: 122: gotoXY(0,2);
  3078  0E2B  3002               	movlw	2
  3079  0E2C  0021               	movlb	1	; select bank1
  3080  0E2D  00E5               	movwf	??_main^(0+128)
  3081  0E2E  0865               	movf	??_main^(0+128),w
  3082  0E2F  0020               	movlb	0	; select bank0
  3083  0E30  00B4               	movwf	gotoXY@y
  3084  0E31  3000               	movlw	0
  3085  0E32  3192  227B  318E   	fcall	_gotoXY
  3086                           
  3087                           ;glucose_meter_main.c: 123: LCDString("GLUCOMETER");
  3088  0E35  302D               	movlw	low (STR_4| (0+32768))
  3089  0E36  0020               	movlb	0	; select bank0
  3090  0E37  00BC               	movwf	LCDString@characters
  3091  0E38  3085               	movlw	high (STR_4| (0+32768))
  3092  0E39  00BD               	movwf	LCDString@characters+1
  3093  0E3A  3192  2290  318E   	fcall	_LCDString
  3094                           
  3095                           ;glucose_meter_main.c: 124: Delay_1_Second();
  3096  0E3D  3194  24BA  318E   	fcall	_Delay_1_Second
  3097                           
  3098                           ;glucose_meter_main.c: 125: Delay_1_Second();
  3099  0E40  3194  24BA  318E   	fcall	_Delay_1_Second
  3100  0E43  2ED0               	goto	l5570
  3101  0E44                     l5572:	
  3102                           
  3103                           ;glucose_meter_main.c: 132: {
  3104                           ;glucose_meter_main.c: 133: SetTime();
  3105  0E44  3185  2542  318E   	fcall	_SetTime
  3106                           
  3107                           ;glucose_meter_main.c: 134: gSetDateTime = 0;
  3108  0E47  0021               	movlb	1	; select bank1
  3109  0E48  01C9               	clrf	_gSetDateTime^(0+128)
  3110                           
  3111                           ;glucose_meter_main.c: 135: gSleepMode = 1;
  3112  0E49  0020               	movlb	0	; select bank0
  3113  0E4A  01DF               	clrf	_gSleepMode
  3114  0E4B  0ADF               	incf	_gSleepMode,f
  3115                           
  3116                           ;glucose_meter_main.c: 136: __nop();
  3117  0E4C  0000               	nop
  3118                           
  3119                           ;glucose_meter_main.c: 137: EnterDeepSleep();
  3120  0E4D  3194  2416  318E   	fcall	_EnterDeepSleep
  3121                           
  3122                           ;glucose_meter_main.c: 138: __nop();
  3123  0E50  0000               	nop
  3124                           
  3125                           ;glucose_meter_main.c: 139: __nop();
  3126  0E51  0000               	nop
  3127                           
  3128                           ;glucose_meter_main.c: 140: __nop();
  3129  0E52  0000               	nop
  3130                           
  3131                           ;glucose_meter_main.c: 141: }
  3132  0E53  2ED0               	goto	l5570
  3133  0E54                     l5590:	
  3134                           
  3135                           ;glucose_meter_main.c: 143: {
  3136                           ;glucose_meter_main.c: 144: gExitMemoryMode = 0;
  3137  0E54  01F9               	clrf	_gExitMemoryMode
  3138                           
  3139                           ;glucose_meter_main.c: 145: gtimeOutCount = 60000 ;
  3140  0E55  3000               	movlw	0
  3141  0E56  0021               	movlb	1	; select bank1
  3142  0E57  00DB               	movwf	(_gtimeOutCount+3)^(0+128)
  3143  0E58  3000               	movlw	0
  3144  0E59  00DA               	movwf	(_gtimeOutCount+2)^(0+128)
  3145  0E5A  30EA               	movlw	234
  3146  0E5B  00D9               	movwf	(_gtimeOutCount+1)^(0+128)
  3147  0E5C  3060               	movlw	96
  3148  0E5D  00D8               	movwf	_gtimeOutCount^(0+128)
  3149  0E5E                     l483:	
  3150                           ;glucose_meter_main.c: 146: while(gtimeOutCount!=0)gtimeOutCount--;
  3151                           
  3152  0E5E  085B               	movf	(_gtimeOutCount+3)^(0+128),w
  3153  0E5F  045A               	iorwf	(_gtimeOutCount+2)^(0+128),w
  3154  0E60  0459               	iorwf	(_gtimeOutCount+1)^(0+128),w
  3155  0E61  0458               	iorwf	_gtimeOutCount^(0+128),w
  3156  0E62  1903               	btfsc	3,2
  3157  0E63  2E75               	goto	l5596
  3158  0E64  3001               	movlw	1
  3159  0E65  00E5               	movwf	??_main^(0+128)
  3160  0E66  3000               	movlw	0
  3161  0E67  00E6               	movwf	(??_main^(0+128)+1)
  3162  0E68  3000               	movlw	0
  3163  0E69  00E7               	movwf	(??_main^(0+128)+2)
  3164  0E6A  3000               	movlw	0
  3165  0E6B  00E8               	movwf	(??_main^(0+128)+3)
  3166  0E6C  0865               	movf	??_main^(0+128),w
  3167  0E6D  02D8               	subwf	_gtimeOutCount^(0+128),f
  3168  0E6E  0866               	movf	(??_main+1)^(0+128),w
  3169  0E6F  3BD9               	subwfb	(_gtimeOutCount+1)^(0+128),f
  3170  0E70  0867               	movf	(??_main+2)^(0+128),w
  3171  0E71  3BDA               	subwfb	(_gtimeOutCount+2)^(0+128),f
  3172  0E72  0868               	movf	(??_main+3)^(0+128),w
  3173  0E73  3BDB               	subwfb	(_gtimeOutCount+3)^(0+128),f
  3174  0E74  2E5E               	goto	l483
  3175  0E75                     l5596:	
  3176                           
  3177                           ;glucose_meter_main.c: 147: EnterDeepSleep();
  3178  0E75  3194  2416  318E   	fcall	_EnterDeepSleep
  3179                           
  3180                           ;glucose_meter_main.c: 148: __nop();
  3181  0E78  0000               	nop
  3182                           
  3183                           ;glucose_meter_main.c: 149: __nop();
  3184  0E79  0000               	nop
  3185                           
  3186                           ;glucose_meter_main.c: 150: __nop();
  3187  0E7A  0000               	nop
  3188                           
  3189                           ;glucose_meter_main.c: 151: }
  3190  0E7B  2ED0               	goto	l5570
  3191  0E7C                     l5606:	
  3192                           
  3193                           ;glucose_meter_main.c: 153: {
  3194                           ;glucose_meter_main.c: 154: if ((gSavedReadingCnt==0) && (gOneReadingDisplyed==0))
  3195  0E7C  085D               	movf	_gSavedReadingCnt,w
  3196  0E7D  1D03               	btfss	3,2
  3197  0E7E  2E94               	goto	l5616
  3198  0E7F  087A               	movf	_gOneReadingDisplyed,w
  3199  0E80  1D03               	btfss	3,2
  3200  0E81  2E94               	goto	l5616
  3201                           
  3202                           ;glucose_meter_main.c: 155: {
  3203                           ;glucose_meter_main.c: 157: LCDInit();
  3204  0E82  3195  2589  318E   	fcall	_LCDInit
  3205                           
  3206                           ;glucose_meter_main.c: 158: LCDClear();
  3207  0E85  3193  2364  318E   	fcall	_LCDClear
  3208                           
  3209                           ;glucose_meter_main.c: 160: gotoXY(0,1);
  3210  0E88  0020               	movlb	0	; select bank0
  3211  0E89  01B4               	clrf	gotoXY@y
  3212  0E8A  0AB4               	incf	gotoXY@y,f
  3213  0E8B  3000               	movlw	0
  3214  0E8C  3192  227B  318E   	fcall	_gotoXY
  3215                           
  3216                           ;glucose_meter_main.c: 162: gDisplayPreviousReading = 0;
  3217  0E8F  0021               	movlb	1	; select bank1
  3218  0E90  01C4               	clrf	_gDisplayPreviousReading^(0+128)
  3219                           
  3220                           ;glucose_meter_main.c: 163: gOneReadingDisplyed=1;
  3221  0E91  01FA               	clrf	_gOneReadingDisplyed
  3222  0E92  0AFA               	incf	_gOneReadingDisplyed,f
  3223                           
  3224                           ;glucose_meter_main.c: 164: }
  3225  0E93  2ED0               	goto	l5570
  3226  0E94                     l5616:	
  3227                           
  3228                           ;glucose_meter_main.c: 165: else if (gSavedReadingCnt)
  3229  0E94  0020               	movlb	0	; select bank0
  3230  0E95  085D               	movf	_gSavedReadingCnt,w
  3231  0E96  1903               	btfsc	3,2
  3232  0E97  2ED0               	goto	l5570
  3233                           
  3234                           ;glucose_meter_main.c: 166: {
  3235                           ;glucose_meter_main.c: 167: if(gOneReadingDisplyed == 0)
  3236  0E98  087A               	movf	_gOneReadingDisplyed,w
  3237  0E99  1D03               	btfss	3,2
  3238  0E9A  2EB1               	goto	l5626
  3239                           
  3240                           ;glucose_meter_main.c: 168: {
  3241                           ;glucose_meter_main.c: 170: LCDInit();
  3242  0E9B  3195  2589  318E   	fcall	_LCDInit
  3243                           
  3244                           ;glucose_meter_main.c: 171: ReadSavedGlucoReading(gSavedReadingCnt-1);
  3245  0E9E  0020               	movlb	0	; select bank0
  3246  0E9F  085D               	movf	_gSavedReadingCnt,w
  3247  0EA0  3EFF               	addlw	255
  3248  0EA1  3197  2701  318E   	fcall	_ReadSavedGlucoReading
  3249                           
  3250                           ;glucose_meter_main.c: 172: DisplaySavedGlucoReading();
  3251  0EA4  3196  268C  318E   	fcall	_DisplaySavedGlucoReading
  3252                           
  3253                           ;glucose_meter_main.c: 173: gOneReadingDisplyed=1;
  3254  0EA7  01FA               	clrf	_gOneReadingDisplyed
  3255  0EA8  0AFA               	incf	_gOneReadingDisplyed,f
  3256                           
  3257                           ;glucose_meter_main.c: 174: RedingCount = gSavedReadingCnt-1;
  3258  0EA9  0020               	movlb	0	; select bank0
  3259  0EAA  085D               	movf	_gSavedReadingCnt,w
  3260  0EAB  3EFF               	addlw	255
  3261  0EAC  0021               	movlb	1	; select bank1
  3262  0EAD  00E5               	movwf	??_main^(0+128)
  3263  0EAE  0865               	movf	??_main^(0+128),w
  3264  0EAF  00F7               	movwf	_RedingCount
  3265                           
  3266                           ;glucose_meter_main.c: 175: }
  3267  0EB0  2ED0               	goto	l5570
  3268  0EB1                     l5626:	
  3269                           
  3270                           ;glucose_meter_main.c: 176: else if (gDisplayPreviousReading)
  3271  0EB1  0021               	movlb	1	; select bank1
  3272  0EB2  0844               	movf	_gDisplayPreviousReading^(0+128),w
  3273  0EB3  1903               	btfsc	3,2
  3274  0EB4  2ED0               	goto	l5570
  3275                           
  3276                           ;glucose_meter_main.c: 177: {
  3277                           ;glucose_meter_main.c: 178: if (RedingCount)
  3278  0EB5  0877               	movf	_RedingCount,w
  3279  0EB6  1903               	btfsc	3,2
  3280  0EB7  2EBB               	goto	l5632
  3281                           
  3282                           ;glucose_meter_main.c: 179: RedingCount--;
  3283  0EB8  3001               	movlw	1
  3284  0EB9  02F7               	subwf	_RedingCount,f
  3285  0EBA  2EC2               	goto	l5634
  3286  0EBB                     l5632:	
  3287                           
  3288                           ;glucose_meter_main.c: 180: else
  3289                           ;glucose_meter_main.c: 181: RedingCount = gSavedReadingCnt-1;
  3290  0EBB  0020               	movlb	0	; select bank0
  3291  0EBC  085D               	movf	_gSavedReadingCnt,w
  3292  0EBD  3EFF               	addlw	255
  3293  0EBE  0021               	movlb	1	; select bank1
  3294  0EBF  00E5               	movwf	??_main^(0+128)
  3295  0EC0  0865               	movf	??_main^(0+128),w
  3296  0EC1  00F7               	movwf	_RedingCount
  3297  0EC2                     l5634:	
  3298                           
  3299                           ;glucose_meter_main.c: 183: ReadSavedGlucoReading(RedingCount);
  3300  0EC2  0877               	movf	_RedingCount,w
  3301  0EC3  3197  2701  318E   	fcall	_ReadSavedGlucoReading
  3302                           
  3303                           ;glucose_meter_main.c: 184: DisplaySavedGlucoReading();
  3304  0EC6  3196  268C  318E   	fcall	_DisplaySavedGlucoReading
  3305                           
  3306                           ;glucose_meter_main.c: 185: gDisplayPreviousReading=0;
  3307  0EC9  0021               	movlb	1	; select bank1
  3308  0ECA  01C4               	clrf	_gDisplayPreviousReading^(0+128)
  3309                           
  3310                           ;glucose_meter_main.c: 186: }
  3311                           ;glucose_meter_main.c: 187: }
  3312                           ;glucose_meter_main.c: 188: }
  3313  0ECB  2ED0               	goto	l5570
  3314  0ECC                     l5642:	
  3315                           
  3316                           ;glucose_meter_main.c: 190: {
  3317                           ;glucose_meter_main.c: 191: __nop();
  3318  0ECC  0000               	nop
  3319  0ECD  0063               	sleep	;# 
  3320                           
  3321                           ;glucose_meter_main.c: 193: __nop();
  3322  0ECE  0000               	nop
  3323                           
  3324                           ;glucose_meter_main.c: 194: __nop();
  3325  0ECF  0000               	nop
  3326  0ED0                     l5570:	
  3327                           ;glucose_meter_main.c: 128: while(1)
  3328                           
  3329                           ;glucose_meter_main.c: 195: }
  3330                           
  3331                           
  3332                           ;glucose_meter_main.c: 129: {
  3333                           ;glucose_meter_main.c: 131: if (gSetDateTime == 1)
  3334  0ED0  0021               	movlb	1	; select bank1
  3335  0ED1  0349               	decf	_gSetDateTime^(0+128),w
  3336  0ED2  1903               	btfsc	3,2
  3337  0ED3  2E44               	goto	l5572
  3338                           
  3339                           ;glucose_meter_main.c: 142: else if (gExitMemoryMode == 1)
  3340  0ED4  0379               	decf	_gExitMemoryMode,w
  3341  0ED5  1903               	btfsc	3,2
  3342  0ED6  2E54               	goto	l5590
  3343                           
  3344                           ;glucose_meter_main.c: 152: else if (gMemorymode == 1)
  3345  0ED7  0020               	movlb	0	; select bank0
  3346  0ED8  035C               	decf	_gMemorymode,w
  3347  0ED9  1903               	btfsc	3,2
  3348  0EDA  2E7C               	goto	l5606
  3349                           
  3350                           ;glucose_meter_main.c: 189: else if (gSleepMode)
  3351  0EDB  0020               	movlb	0	; select bank0
  3352  0EDC  085F               	movf	_gSleepMode,w
  3353  0EDD  1D03               	btfss	3,2
  3354  0EDE  2ECC               	goto	l5642
  3355                           
  3356                           ;glucose_meter_main.c: 196: else
  3357                           ;glucose_meter_main.c: 197: {
  3358                           ;glucose_meter_main.c: 198: DACCON1 = 50;
  3359  0EDF  3032               	movlw	50
  3360  0EE0  0022               	movlb	2	; select bank2
  3361  0EE1  0099               	movwf	25	;volatile
  3362                           
  3363                           ;glucose_meter_main.c: 199: SenseTestStrip();
  3364  0EE2  318C  24AE  318E   	fcall	_SenseTestStrip
  3365                           
  3366                           ;glucose_meter_main.c: 200: if(gglucDataReady == 1)
  3367  0EE5  037C               	decf	_gglucDataReady,w
  3368  0EE6  1D03               	btfss	3,2
  3369  0EE7  2FCB               	goto	l5698
  3370                           
  3371                           ;glucose_meter_main.c: 201: {
  3372                           ;glucose_meter_main.c: 202: gglucDataReady = 0;
  3373  0EE8  01FC               	clrf	_gglucDataReady
  3374                           
  3375                           ;glucose_meter_main.c: 204: gAverageGlucose = gSigmaGlucoseValue;
  3376  0EE9  0021               	movlb	1	; select bank1
  3377  0EEA  0827               	movf	(_gSigmaGlucoseValue+3)^(0+128),w
  3378  0EEB  00A3               	movwf	(_gAverageGlucose+3)^(0+128)
  3379  0EEC  0826               	movf	(_gSigmaGlucoseValue+2)^(0+128),w
  3380  0EED  00A2               	movwf	(_gAverageGlucose+2)^(0+128)
  3381  0EEE  0825               	movf	(_gSigmaGlucoseValue+1)^(0+128),w
  3382  0EEF  00A1               	movwf	(_gAverageGlucose+1)^(0+128)
  3383  0EF0  0824               	movf	_gSigmaGlucoseValue^(0+128),w
  3384  0EF1  00A0               	movwf	_gAverageGlucose^(0+128)
  3385                           
  3386                           ;glucose_meter_main.c: 205: gcaptured2SValue = (int)gAverageGlucose;
  3387  0EF2  0821               	movf	(_gAverageGlucose+1)^(0+128),w
  3388  0EF3  00BF               	movwf	(_gcaptured2SValue+1)^(0+128)
  3389  0EF4  0820               	movf	_gAverageGlucose^(0+128),w
  3390  0EF5  00BE               	movwf	_gcaptured2SValue^(0+128)
  3391                           
  3392                           ;glucose_meter_main.c: 207: CalcGlucose();
  3393  0EF6  3188  206D  318E   	fcall	_CalcGlucose
  3394                           
  3395                           ;glucose_meter_main.c: 208: gYint = (int)gY;
  3396  0EF9  0021               	movlb	1	; select bank1
  3397  0EFA  082B               	movf	_gY^(0+128),w
  3398  0EFB  0020               	movlb	0	; select bank0
  3399  0EFC  00A9               	movwf	___fttol@f1
  3400  0EFD  0021               	movlb	1	; select bank1
  3401  0EFE  082C               	movf	(_gY+1)^(0+128),w
  3402  0EFF  0020               	movlb	0	; select bank0
  3403  0F00  00AA               	movwf	___fttol@f1+1
  3404  0F01  0021               	movlb	1	; select bank1
  3405  0F02  082D               	movf	(_gY+2)^(0+128),w
  3406  0F03  0020               	movlb	0	; select bank0
  3407  0F04  00AB               	movwf	___fttol@f1+2
  3408  0F05  3197  2779  318E   	fcall	___fttol
  3409  0F08  0020               	movlb	0	; select bank0
  3410  0F09  082A               	movf	?___fttol+1,w
  3411  0F0A  0021               	movlb	1	; select bank1
  3412  0F0B  00DD               	movwf	(_gYint+1)^(0+128)
  3413  0F0C  0020               	movlb	0	; select bank0
  3414  0F0D  0829               	movf	?___fttol,w
  3415  0F0E  0021               	movlb	1	; select bank1
  3416  0F0F  00DC               	movwf	_gYint^(0+128)
  3417                           
  3418                           ;glucose_meter_main.c: 209: if (gYint<=0) gYint=0;
  3419  0F10  085D               	movf	(_gYint+1)^(0+128),w
  3420  0F11  3A80               	xorlw	128
  3421  0F12  00E5               	movwf	??_main^(0+128)
  3422  0F13  3080               	movlw	128
  3423  0F14  0265               	subwf	??_main^(0+128),w
  3424  0F15  1D03               	skipz
  3425  0F16  2F19               	goto	u6105
  3426  0F17  3001               	movlw	1
  3427  0F18  025C               	subwf	_gYint^(0+128),w
  3428  0F19                     u6105:	
  3429  0F19  1803               	skipnc
  3430  0F1A  2F1E               	goto	l5664
  3431  0F1B  0021               	movlb	1	; select bank1
  3432  0F1C  01DC               	clrf	_gYint^(0+128)
  3433  0F1D  01DD               	clrf	(_gYint+1)^(0+128)
  3434  0F1E                     l5664:	
  3435                           
  3436                           ;glucose_meter_main.c: 210: gYmmol=gY/18;
  3437  0F1E  3000               	movlw	0
  3438  0F1F  0020               	movlb	0	; select bank0
  3439  0F20  00B1               	movwf	___ftdiv@f2
  3440  0F21  3090               	movlw	144
  3441  0F22  00B2               	movwf	___ftdiv@f2+1
  3442  0F23  3041               	movlw	65
  3443  0F24  00B3               	movwf	___ftdiv@f2+2
  3444  0F25  0021               	movlb	1	; select bank1
  3445  0F26  082B               	movf	_gY^(0+128),w
  3446  0F27  0020               	movlb	0	; select bank0
  3447  0F28  00B4               	movwf	___ftdiv@f1
  3448  0F29  0021               	movlb	1	; select bank1
  3449  0F2A  082C               	movf	(_gY+1)^(0+128),w
  3450  0F2B  0020               	movlb	0	; select bank0
  3451  0F2C  00B5               	movwf	___ftdiv@f1+1
  3452  0F2D  0021               	movlb	1	; select bank1
  3453  0F2E  082D               	movf	(_gY+2)^(0+128),w
  3454  0F2F  0020               	movlb	0	; select bank0
  3455  0F30  00B6               	movwf	___ftdiv@f1+2
  3456  0F31  3189  2100  318E   	fcall	___ftdiv
  3457  0F34  0020               	movlb	0	; select bank0
  3458  0F35  0831               	movf	?___ftdiv,w
  3459  0F36  0021               	movlb	1	; select bank1
  3460  0F37  00AE               	movwf	_gYmmol^(0+128)
  3461  0F38  0020               	movlb	0	; select bank0
  3462  0F39  0832               	movf	?___ftdiv+1,w
  3463  0F3A  0021               	movlb	1	; select bank1
  3464  0F3B  00AF               	movwf	(_gYmmol+1)^(0+128)
  3465  0F3C  0020               	movlb	0	; select bank0
  3466  0F3D  0833               	movf	?___ftdiv+2,w
  3467  0F3E  0021               	movlb	1	; select bank1
  3468  0F3F  00B0               	movwf	(_gYmmol+2)^(0+128)
  3469                           
  3470                           ;glucose_meter_main.c: 211: gYmmolchar = (char)gYmmol;
  3471  0F40  082E               	movf	_gYmmol^(0+128),w
  3472  0F41  0020               	movlb	0	; select bank0
  3473  0F42  00A9               	movwf	___fttol@f1
  3474  0F43  0021               	movlb	1	; select bank1
  3475  0F44  082F               	movf	(_gYmmol+1)^(0+128),w
  3476  0F45  0020               	movlb	0	; select bank0
  3477  0F46  00AA               	movwf	___fttol@f1+1
  3478  0F47  0021               	movlb	1	; select bank1
  3479  0F48  0830               	movf	(_gYmmol+2)^(0+128),w
  3480  0F49  0020               	movlb	0	; select bank0
  3481  0F4A  00AB               	movwf	___fttol@f1+2
  3482  0F4B  3197  2779  318E   	fcall	___fttol
  3483  0F4E  0020               	movlb	0	; select bank0
  3484  0F4F  0829               	movf	?___fttol,w
  3485  0F50  0021               	movlb	1	; select bank1
  3486  0F51  00E5               	movwf	??_main^(0+128)
  3487  0F52  0865               	movf	??_main^(0+128),w
  3488  0F53  0020               	movlb	0	; select bank0
  3489  0F54  00E6               	movwf	_gYmmolchar
  3490                           
  3491                           ;glucose_meter_main.c: 212: gYmmoldecimal=(gYmmol - gYmmolchar)*10;
  3492  0F55  3000               	movlw	0
  3493  0F56  00C9               	movwf	___ftmul@f1
  3494  0F57  3020               	movlw	32
  3495  0F58  00CA               	movwf	___ftmul@f1+1
  3496  0F59  3041               	movlw	65
  3497  0F5A  00CB               	movwf	___ftmul@f1+2
  3498  0F5B  0021               	movlb	1	; select bank1
  3499  0F5C  082E               	movf	_gYmmol^(0+128),w
  3500  0F5D  0020               	movlb	0	; select bank0
  3501  0F5E  00BC               	movwf	___ftadd@f1
  3502  0F5F  0021               	movlb	1	; select bank1
  3503  0F60  082F               	movf	(_gYmmol+1)^(0+128),w
  3504  0F61  0020               	movlb	0	; select bank0
  3505  0F62  00BD               	movwf	___ftadd@f1+1
  3506  0F63  0021               	movlb	1	; select bank1
  3507  0F64  0830               	movf	(_gYmmol+2)^(0+128),w
  3508  0F65  0020               	movlb	0	; select bank0
  3509  0F66  00BE               	movwf	___ftadd@f1+2
  3510  0F67  0866               	movf	_gYmmolchar,w
  3511  0F68  3192  22A7  318E   	fcall	___lbtoft
  3512  0F6B  0020               	movlb	0	; select bank0
  3513  0F6C  0831               	movf	?___lbtoft,w
  3514  0F6D  00B9               	movwf	___ftneg@f1
  3515  0F6E  0832               	movf	?___lbtoft+1,w
  3516  0F6F  00BA               	movwf	___ftneg@f1+1
  3517  0F70  0833               	movf	?___lbtoft+2,w
  3518  0F71  00BB               	movwf	___ftneg@f1+2
  3519  0F72  3192  2204  318E   	fcall	___ftneg
  3520  0F75  0020               	movlb	0	; select bank0
  3521  0F76  0839               	movf	?___ftneg,w
  3522  0F77  00BF               	movwf	___ftadd@f2
  3523  0F78  083A               	movf	?___ftneg+1,w
  3524  0F79  00C0               	movwf	___ftadd@f2+1
  3525  0F7A  083B               	movf	?___ftneg+2,w
  3526  0F7B  00C1               	movwf	___ftadd@f2+2
  3527  0F7C  318A  225D  318E   	fcall	___ftadd
  3528  0F7F  0020               	movlb	0	; select bank0
  3529  0F80  083C               	movf	?___ftadd,w
  3530  0F81  00CC               	movwf	___ftmul@f2
  3531  0F82  083D               	movf	?___ftadd+1,w
  3532  0F83  00CD               	movwf	___ftmul@f2+1
  3533  0F84  083E               	movf	?___ftadd+2,w
  3534  0F85  00CE               	movwf	___ftmul@f2+2
  3535  0F86  3189  21A9  318E   	fcall	___ftmul
  3536  0F89  0020               	movlb	0	; select bank0
  3537  0F8A  0849               	movf	?___ftmul,w
  3538  0F8B  0021               	movlb	1	; select bank1
  3539  0F8C  00B1               	movwf	_gYmmoldecimal^(0+128)
  3540  0F8D  0020               	movlb	0	; select bank0
  3541  0F8E  084A               	movf	?___ftmul+1,w
  3542  0F8F  0021               	movlb	1	; select bank1
  3543  0F90  00B2               	movwf	(_gYmmoldecimal+1)^(0+128)
  3544  0F91  0020               	movlb	0	; select bank0
  3545  0F92  084B               	movf	?___ftmul+2,w
  3546  0F93  0021               	movlb	1	; select bank1
  3547  0F94  00B3               	movwf	(_gYmmoldecimal+2)^(0+128)
  3548                           
  3549                           ;glucose_meter_main.c: 213: gYmmoldecimalchar= (char)gYmmoldecimal;
  3550  0F95  0831               	movf	_gYmmoldecimal^(0+128),w
  3551  0F96  0020               	movlb	0	; select bank0
  3552  0F97  00A9               	movwf	___fttol@f1
  3553  0F98  0021               	movlb	1	; select bank1
  3554  0F99  0832               	movf	(_gYmmoldecimal+1)^(0+128),w
  3555  0F9A  0020               	movlb	0	; select bank0
  3556  0F9B  00AA               	movwf	___fttol@f1+1
  3557  0F9C  0021               	movlb	1	; select bank1
  3558  0F9D  0833               	movf	(_gYmmoldecimal+2)^(0+128),w
  3559  0F9E  0020               	movlb	0	; select bank0
  3560  0F9F  00AB               	movwf	___fttol@f1+2
  3561  0FA0  3197  2779  318E   	fcall	___fttol
  3562  0FA3  0020               	movlb	0	; select bank0
  3563  0FA4  0829               	movf	?___fttol,w
  3564  0FA5  0021               	movlb	1	; select bank1
  3565  0FA6  00E5               	movwf	??_main^(0+128)
  3566  0FA7  0865               	movf	??_main^(0+128),w
  3567  0FA8  00FD               	movwf	_gYmmoldecimalchar
  3568                           
  3569                           ;glucose_meter_main.c: 214: if (gYmmolchar <= 0) gYmmolchar=0;
  3570  0FA9  0020               	movlb	0	; select bank0
  3571  0FAA  0866               	movf	_gYmmolchar,w
  3572  0FAB  1903               	btfsc	3,2
  3573  0FAC  01E6               	clrf	_gYmmolchar
  3574                           
  3575                           ;glucose_meter_main.c: 215: if (gYmmoldecimalchar <= 0) gYmmoldecimalchar=0;
  3576  0FAD  087D               	movf	_gYmmoldecimalchar,w
  3577  0FAE  1903               	btfsc	3,2
  3578  0FAF  01FD               	clrf	_gYmmoldecimalchar
  3579                           
  3580                           ;glucose_meter_main.c: 228: LCDClear();
  3581  0FB0  3193  2364  318E   	fcall	_LCDClear
  3582                           
  3583                           ;glucose_meter_main.c: 231: gotoXY(0,1);
  3584  0FB3  0020               	movlb	0	; select bank0
  3585  0FB4  01B4               	clrf	gotoXY@y
  3586  0FB5  0AB4               	incf	gotoXY@y,f
  3587  0FB6  3000               	movlw	0
  3588  0FB7  3192  227B  318E   	fcall	_gotoXY
  3589                           
  3590                           ;glucose_meter_main.c: 236: SaveGlucoReading();
  3591  0FBA  3196  2628  318E   	fcall	_SaveGlucoReading
  3592                           
  3593                           ;glucose_meter_main.c: 238: LATB1 = 0;
  3594  0FBD  0022               	movlb	2	; select bank2
  3595  0FBE  108D               	bcf	13,1	;volatile
  3596                           
  3597                           ;glucose_meter_main.c: 239: { ADCON0 = 0x01 | (0 << 2); };
  3598  0FBF  3001               	movlw	1
  3599  0FC0  0021               	movlb	1	; select bank1
  3600  0FC1  009D               	movwf	29	;volatile
  3601  0FC2                     l503:	
  3602                           ;glucose_meter_main.c: 242: while (!(PORTB & 0x01));
  3603                           
  3604  0FC2  0020               	movlb	0	; select bank0
  3605  0FC3  1C0D               	btfss	13,0	;volatile
  3606  0FC4  2FC2               	goto	l503
  3607                           
  3608                           ;glucose_meter_main.c: 243: EnterDeepSleep();
  3609  0FC5  3194  2416  318E   	fcall	_EnterDeepSleep
  3610                           
  3611                           ;glucose_meter_main.c: 244: __nop();
  3612  0FC8  0000               	nop
  3613                           
  3614                           ;glucose_meter_main.c: 245: __nop();
  3615  0FC9  0000               	nop
  3616                           
  3617                           ;glucose_meter_main.c: 246: __nop();
  3618  0FCA  0000               	nop
  3619  0FCB                     l5698:	
  3620                           
  3621                           ;glucose_meter_main.c: 248: }
  3622                           ;glucose_meter_main.c: 249: if (gBloodNotInsetrted == 1)
  3623  0FCB  0378               	decf	_gBloodNotInsetrted,w
  3624  0FCC  1D03               	btfss	3,2
  3625  0FCD  2ED0               	goto	l5570
  3626                           
  3627                           ;glucose_meter_main.c: 250: {
  3628                           ;glucose_meter_main.c: 251: gBloodNotInsetrted = 0;
  3629  0FCE  01F8               	clrf	_gBloodNotInsetrted
  3630                           
  3631                           ;glucose_meter_main.c: 252: LCDClear();
  3632  0FCF  3193  2364  318E   	fcall	_LCDClear
  3633                           
  3634                           ;glucose_meter_main.c: 254: gotoXY(0,1);
  3635  0FD2  0020               	movlb	0	; select bank0
  3636  0FD3  01B4               	clrf	gotoXY@y
  3637  0FD4  0AB4               	incf	gotoXY@y,f
  3638  0FD5  3000               	movlw	0
  3639  0FD6  3192  227B  318E   	fcall	_gotoXY
  3640                           
  3641                           ;glucose_meter_main.c: 256: gtimeOutCount = 60000;
  3642  0FD9  3000               	movlw	0
  3643  0FDA  0021               	movlb	1	; select bank1
  3644  0FDB  00DB               	movwf	(_gtimeOutCount+3)^(0+128)
  3645  0FDC  3000               	movlw	0
  3646  0FDD  00DA               	movwf	(_gtimeOutCount+2)^(0+128)
  3647  0FDE  30EA               	movlw	234
  3648  0FDF  00D9               	movwf	(_gtimeOutCount+1)^(0+128)
  3649  0FE0  3060               	movlw	96
  3650  0FE1  00D8               	movwf	_gtimeOutCount^(0+128)
  3651  0FE2                     l507:	
  3652                           ;glucose_meter_main.c: 257: while(gtimeOutCount!=0)gtimeOutCount--;
  3653                           
  3654  0FE2  085B               	movf	(_gtimeOutCount+3)^(0+128),w
  3655  0FE3  045A               	iorwf	(_gtimeOutCount+2)^(0+128),w
  3656  0FE4  0459               	iorwf	(_gtimeOutCount+1)^(0+128),w
  3657  0FE5  0458               	iorwf	_gtimeOutCount^(0+128),w
  3658  0FE6  1903               	btfsc	3,2
  3659  0FE7  2FF9               	goto	l5710
  3660  0FE8  3001               	movlw	1
  3661  0FE9  00E5               	movwf	??_main^(0+128)
  3662  0FEA  3000               	movlw	0
  3663  0FEB  00E6               	movwf	(??_main^(0+128)+1)
  3664  0FEC  3000               	movlw	0
  3665  0FED  00E7               	movwf	(??_main^(0+128)+2)
  3666  0FEE  3000               	movlw	0
  3667  0FEF  00E8               	movwf	(??_main^(0+128)+3)
  3668  0FF0  0865               	movf	??_main^(0+128),w
  3669  0FF1  02D8               	subwf	_gtimeOutCount^(0+128),f
  3670  0FF2  0866               	movf	(??_main+1)^(0+128),w
  3671  0FF3  3BD9               	subwfb	(_gtimeOutCount+1)^(0+128),f
  3672  0FF4  0867               	movf	(??_main+2)^(0+128),w
  3673  0FF5  3BDA               	subwfb	(_gtimeOutCount+2)^(0+128),f
  3674  0FF6  0868               	movf	(??_main+3)^(0+128),w
  3675  0FF7  3BDB               	subwfb	(_gtimeOutCount+3)^(0+128),f
  3676  0FF8  2FE2               	goto	l507
  3677  0FF9                     l5710:	
  3678                           
  3679                           ;glucose_meter_main.c: 258: EnterDeepSleep();
  3680  0FF9  3194  2416  318E   	fcall	_EnterDeepSleep
  3681                           
  3682                           ;glucose_meter_main.c: 259: __nop();
  3683  0FFC  0000               	nop
  3684                           
  3685                           ;glucose_meter_main.c: 260: __nop();
  3686  0FFD  0000               	nop
  3687                           
  3688                           ;glucose_meter_main.c: 261: __nop();
  3689  0FFE  0000               	nop
  3690  0FFF  2ED0               	goto	l5570
  3691  1000                     __end_of_main:	
  3692                           
  3693                           	psect	text1
  3694  12A7                     __ptext1:	
  3695 ;; *************** function ___lbtoft *****************
  3696 ;; Defined at:
  3697 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbtoft.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  c               1    wreg     unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  c               1   24[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  3   17[BANK0 ] float 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3711 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;Total ram usage:        8 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    4
  3718 ;; This function calls:
  3719 ;;		___ftpack
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function ___lbtoft
  3727  12A7                     ___lbtoft:	
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  3731                           ;___lbtoft@c stored from wreg
  3732  12A7  0020               	movlb	0	; select bank0
  3733  12A8  00B8               	movwf	___lbtoft@c
  3734  12A9  0838               	movf	___lbtoft@c,w
  3735  12AA  00B4               	movwf	??___lbtoft
  3736  12AB  01B5               	clrf	??___lbtoft+1
  3737  12AC  01B6               	clrf	??___lbtoft+2
  3738  12AD  0834               	movf	??___lbtoft,w
  3739  12AE  00A9               	movwf	___ftpack@arg
  3740  12AF  0835               	movf	??___lbtoft+1,w
  3741  12B0  00AA               	movwf	___ftpack@arg+1
  3742  12B1  0836               	movf	??___lbtoft+2,w
  3743  12B2  00AB               	movwf	___ftpack@arg+2
  3744  12B3  308E               	movlw	142
  3745  12B4  00B7               	movwf	??___lbtoft+3
  3746  12B5  0837               	movf	??___lbtoft+3,w
  3747  12B6  00AC               	movwf	___ftpack@exp
  3748  12B7  01AD               	clrf	___ftpack@sign
  3749  12B8  3188  2008         	fcall	___ftpack
  3750  12BA  0020               	movlb	0	; select bank0
  3751  12BB  0829               	movf	?___ftpack,w
  3752  12BC  00B1               	movwf	?___lbtoft
  3753  12BD  082A               	movf	?___ftpack+1,w
  3754  12BE  00B2               	movwf	?___lbtoft+1
  3755  12BF  082B               	movf	?___ftpack+2,w
  3756  12C0  00B3               	movwf	?___lbtoft+2
  3757  12C1  0008               	return
  3758  12C2                     __end_of___lbtoft:	
  3759                           
  3760                           	psect	text2
  3761  1204                     __ptext2:	
  3762 ;; *************** function ___ftneg *****************
  3763 ;; Defined at:
  3764 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  f1              3   25[BANK0 ] float 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  3   25[BANK0 ] float 
  3771 ;; Registers used:
  3772 ;;		wreg
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3778 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;Total ram usage:        3 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    3
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_main
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           
  3793                           ;psect for function ___ftneg
  3794  1204                     ___ftneg:	
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in ___ftneg: [wreg]
  3798  1204  0020               	movlb	0	; select bank0
  3799  1205  083B               	movf	___ftneg@f1+2,w
  3800  1206  043A               	iorwf	___ftneg@f1+1,w
  3801  1207  0439               	iorwf	___ftneg@f1,w
  3802  1208  1903               	skipnz
  3803  1209  0008               	return
  3804  120A  3080               	movlw	128
  3805  120B  06BB               	xorwf	___ftneg@f1+2,f
  3806  120C  0008               	return
  3807  120D                     __end_of___ftneg:	
  3808                           
  3809                           	psect	text3
  3810  0900                     __ptext3:	
  3811 ;; *************** function ___ftdiv *****************
  3812 ;; Defined at:
  3813 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  f2              3   17[BANK0 ] float 
  3816 ;;  f1              3   20[BANK0 ] float 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  f3              3   28[BANK0 ] float 
  3819 ;;  sign            1   32[BANK0 ] unsigned char 
  3820 ;;  exp             1   31[BANK0 ] unsigned char 
  3821 ;;  cntr            1   27[BANK0 ] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  3   17[BANK0 ] float 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, pclath, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3831 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;Total ram usage:       16 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    4
  3838 ;; This function calls:
  3839 ;;		___ftpack
  3840 ;; This function is called by:
  3841 ;;		_main
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function ___ftdiv
  3847  0900                     ___ftdiv:	
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3851  0900  0020               	movlb	0	; select bank0
  3852  0901  0834               	movf	___ftdiv@f1,w
  3853  0902  00B7               	movwf	??___ftdiv
  3854  0903  0835               	movf	___ftdiv@f1+1,w
  3855  0904  00B8               	movwf	??___ftdiv+1
  3856  0905  0836               	movf	___ftdiv@f1+2,w
  3857  0906  00B9               	movwf	??___ftdiv+2
  3858  0907  1003               	clrc
  3859  0908  0D38               	rlf	??___ftdiv+1,w
  3860  0909  0D39               	rlf	??___ftdiv+2,w
  3861  090A  00BA               	movwf	??___ftdiv+3
  3862  090B  083A               	movf	??___ftdiv+3,w
  3863  090C  00BF               	movwf	___ftdiv@exp
  3864  090D  083F               	movf	___ftdiv@exp,w
  3865  090E  1D03               	btfss	3,2
  3866  090F  2917               	goto	l5506
  3867  0910  3000               	movlw	0
  3868  0911  00B1               	movwf	?___ftdiv
  3869  0912  3000               	movlw	0
  3870  0913  00B2               	movwf	?___ftdiv+1
  3871  0914  3000               	movlw	0
  3872  0915  00B3               	movwf	?___ftdiv+2
  3873  0916  0008               	return
  3874  0917                     l5506:	
  3875  0917  0831               	movf	___ftdiv@f2,w
  3876  0918  00B7               	movwf	??___ftdiv
  3877  0919  0832               	movf	___ftdiv@f2+1,w
  3878  091A  00B8               	movwf	??___ftdiv+1
  3879  091B  0833               	movf	___ftdiv@f2+2,w
  3880  091C  00B9               	movwf	??___ftdiv+2
  3881  091D  1003               	clrc
  3882  091E  0D38               	rlf	??___ftdiv+1,w
  3883  091F  0D39               	rlf	??___ftdiv+2,w
  3884  0920  00BA               	movwf	??___ftdiv+3
  3885  0921  083A               	movf	??___ftdiv+3,w
  3886  0922  00C0               	movwf	___ftdiv@sign
  3887  0923  0840               	movf	___ftdiv@sign,w
  3888  0924  1D03               	btfss	3,2
  3889  0925  292D               	goto	l5512
  3890  0926  3000               	movlw	0
  3891  0927  00B1               	movwf	?___ftdiv
  3892  0928  3000               	movlw	0
  3893  0929  00B2               	movwf	?___ftdiv+1
  3894  092A  3000               	movlw	0
  3895  092B  00B3               	movwf	?___ftdiv+2
  3896  092C  0008               	return
  3897  092D                     l5512:	
  3898  092D  3000               	movlw	0
  3899  092E  00BC               	movwf	___ftdiv@f3
  3900  092F  3000               	movlw	0
  3901  0930  00BD               	movwf	___ftdiv@f3+1
  3902  0931  3000               	movlw	0
  3903  0932  00BE               	movwf	___ftdiv@f3+2
  3904  0933  3089               	movlw	137
  3905  0934  0740               	addwf	___ftdiv@sign,w
  3906  0935  00B7               	movwf	??___ftdiv
  3907  0936  0837               	movf	??___ftdiv,w
  3908  0937  02BF               	subwf	___ftdiv@exp,f
  3909  0938  0834               	movf	___ftdiv@f1,w
  3910  0939  00B7               	movwf	??___ftdiv
  3911  093A  0835               	movf	___ftdiv@f1+1,w
  3912  093B  00B8               	movwf	??___ftdiv+1
  3913  093C  0836               	movf	___ftdiv@f1+2,w
  3914  093D  00B9               	movwf	??___ftdiv+2
  3915  093E  3010               	movlw	16
  3916  093F                     u5915:	
  3917  093F  36B9               	lsrf	??___ftdiv+2,f
  3918  0940  0CB8               	rrf	??___ftdiv+1,f
  3919  0941  0CB7               	rrf	??___ftdiv,f
  3920  0942  0B89               	decfsz	9,f
  3921  0943  293F               	goto	u5915
  3922  0944  0837               	movf	??___ftdiv,w
  3923  0945  00BA               	movwf	??___ftdiv+3
  3924  0946  083A               	movf	??___ftdiv+3,w
  3925  0947  00C0               	movwf	___ftdiv@sign
  3926  0948  0831               	movf	___ftdiv@f2,w
  3927  0949  00B7               	movwf	??___ftdiv
  3928  094A  0832               	movf	___ftdiv@f2+1,w
  3929  094B  00B8               	movwf	??___ftdiv+1
  3930  094C  0833               	movf	___ftdiv@f2+2,w
  3931  094D  00B9               	movwf	??___ftdiv+2
  3932  094E  3010               	movlw	16
  3933  094F                     u5925:	
  3934  094F  36B9               	lsrf	??___ftdiv+2,f
  3935  0950  0CB8               	rrf	??___ftdiv+1,f
  3936  0951  0CB7               	rrf	??___ftdiv,f
  3937  0952  0B89               	decfsz	9,f
  3938  0953  294F               	goto	u5925
  3939  0954  0837               	movf	??___ftdiv,w
  3940  0955  00BA               	movwf	??___ftdiv+3
  3941  0956  083A               	movf	??___ftdiv+3,w
  3942  0957  06C0               	xorwf	___ftdiv@sign,f
  3943  0958  3080               	movlw	128
  3944  0959  00B7               	movwf	??___ftdiv
  3945  095A  0837               	movf	??___ftdiv,w
  3946  095B  05C0               	andwf	___ftdiv@sign,f
  3947  095C  17B5               	bsf	___ftdiv@f1+1,7
  3948  095D  30FF               	movlw	255
  3949  095E  05B4               	andwf	___ftdiv@f1,f
  3950  095F  30FF               	movlw	255
  3951  0960  05B5               	andwf	___ftdiv@f1+1,f
  3952  0961  3000               	movlw	0
  3953  0962  05B6               	andwf	___ftdiv@f1+2,f
  3954  0963  17B2               	bsf	___ftdiv@f2+1,7
  3955  0964  30FF               	movlw	255
  3956  0965  05B1               	andwf	___ftdiv@f2,f
  3957  0966  30FF               	movlw	255
  3958  0967  05B2               	andwf	___ftdiv@f2+1,f
  3959  0968  3000               	movlw	0
  3960  0969  05B3               	andwf	___ftdiv@f2+2,f
  3961  096A  3018               	movlw	24
  3962  096B  00B7               	movwf	??___ftdiv
  3963  096C  0837               	movf	??___ftdiv,w
  3964  096D  00BB               	movwf	___ftdiv@cntr
  3965  096E                     l5526:	
  3966  096E  3001               	movlw	1
  3967  096F                     u5935:	
  3968  096F  35BC               	lslf	___ftdiv@f3,f
  3969  0970  0DBD               	rlf	___ftdiv@f3+1,f
  3970  0971  0DBE               	rlf	___ftdiv@f3+2,f
  3971  0972  0B89               	decfsz	9,f
  3972  0973  296F               	goto	u5935
  3973  0974  0833               	movf	___ftdiv@f2+2,w
  3974  0975  0236               	subwf	___ftdiv@f1+2,w
  3975  0976  1D03               	skipz
  3976  0977  297E               	goto	u5945
  3977  0978  0832               	movf	___ftdiv@f2+1,w
  3978  0979  0235               	subwf	___ftdiv@f1+1,w
  3979  097A  1D03               	skipz
  3980  097B  297E               	goto	u5945
  3981  097C  0831               	movf	___ftdiv@f2,w
  3982  097D  0234               	subwf	___ftdiv@f1,w
  3983  097E                     u5945:	
  3984  097E  1C03               	skipc
  3985  097F  2987               	goto	l5534
  3986  0980  0831               	movf	___ftdiv@f2,w
  3987  0981  02B4               	subwf	___ftdiv@f1,f
  3988  0982  0832               	movf	___ftdiv@f2+1,w
  3989  0983  3BB5               	subwfb	___ftdiv@f1+1,f
  3990  0984  0833               	movf	___ftdiv@f2+2,w
  3991  0985  3BB6               	subwfb	___ftdiv@f1+2,f
  3992  0986  143C               	bsf	___ftdiv@f3,0
  3993  0987                     l5534:	
  3994  0987  3001               	movlw	1
  3995  0988                     u5955:	
  3996  0988  35B4               	lslf	___ftdiv@f1,f
  3997  0989  0DB5               	rlf	___ftdiv@f1+1,f
  3998  098A  0DB6               	rlf	___ftdiv@f1+2,f
  3999  098B  0B89               	decfsz	9,f
  4000  098C  2988               	goto	u5955
  4001  098D  3001               	movlw	1
  4002  098E  02BB               	subwf	___ftdiv@cntr,f
  4003  098F  1D03               	btfss	3,2
  4004  0990  296E               	goto	l5526
  4005  0991  083C               	movf	___ftdiv@f3,w
  4006  0992  00A9               	movwf	___ftpack@arg
  4007  0993  083D               	movf	___ftdiv@f3+1,w
  4008  0994  00AA               	movwf	___ftpack@arg+1
  4009  0995  083E               	movf	___ftdiv@f3+2,w
  4010  0996  00AB               	movwf	___ftpack@arg+2
  4011  0997  083F               	movf	___ftdiv@exp,w
  4012  0998  00B7               	movwf	??___ftdiv
  4013  0999  0837               	movf	??___ftdiv,w
  4014  099A  00AC               	movwf	___ftpack@exp
  4015  099B  0840               	movf	___ftdiv@sign,w
  4016  099C  00B8               	movwf	??___ftdiv+1
  4017  099D  0838               	movf	??___ftdiv+1,w
  4018  099E  00AD               	movwf	___ftpack@sign
  4019  099F  3188  2008         	fcall	___ftpack
  4020  09A1  0020               	movlb	0	; select bank0
  4021  09A2  0829               	movf	?___ftpack,w
  4022  09A3  00B1               	movwf	?___ftdiv
  4023  09A4  082A               	movf	?___ftpack+1,w
  4024  09A5  00B2               	movwf	?___ftdiv+1
  4025  09A6  082B               	movf	?___ftpack+2,w
  4026  09A7  00B3               	movwf	?___ftdiv+2
  4027  09A8  0008               	return
  4028  09A9                     __end_of___ftdiv:	
  4029                           
  4030                           	psect	text4
  4031  0542                     __ptext4:	
  4032 ;; *************** function _SetTime *****************
  4033 ;; Defined at:
  4034 ;;		line 234 in file "user.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  sw1_count       1   18[BANK2 ] unsigned char 
  4039 ;;  confirm_coun    1   17[BANK2 ] unsigned char 
  4040 ;;  min_1           1   16[BANK2 ] unsigned char 
  4041 ;;  hour_1          1   15[BANK2 ] unsigned char 
  4042 ;;  day_1           1   14[BANK2 ] unsigned char 
  4043 ;;  month_1         1   13[BANK2 ] unsigned char 
  4044 ;;  year_1          1   12[BANK2 ] unsigned char 
  4045 ;;  min_2           1   11[BANK2 ] unsigned char 
  4046 ;;  hour_2          1   10[BANK2 ] unsigned char 
  4047 ;;  day_2           1    9[BANK2 ] unsigned char 
  4048 ;;  month_2         1    8[BANK2 ] unsigned char 
  4049 ;;  year_2          1    7[BANK2 ] unsigned char 
  4050 ;;  set_time_dat    1    6[BANK2 ] unsigned char 
  4051 ;;  pre_confirm_    1    5[BANK2 ] unsigned char 
  4052 ;;  tMin            1    4[BANK2 ] unsigned char 
  4053 ;;  tHour           1    3[BANK2 ] unsigned char 
  4054 ;;  tYear           1    2[BANK2 ] unsigned char 
  4055 ;;  tDay            1    1[BANK2 ] unsigned char 
  4056 ;;  tMonth          1    0[BANK2 ] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Totals:         0       3       0      19       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;Total ram usage:       22 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    6
  4073 ;; This function calls:
  4074 ;;		_LCDClear
  4075 ;;		_LCDInit
  4076 ;;		_SW1_pressed
  4077 ;;		_SW3_pressed
  4078 ;;		___bmul
  4079 ;;		_gotoXY
  4080 ;;		_printf
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _SetTime
  4088  0542                     _SetTime:	
  4089                           
  4090                           ;user.c: 236: unsigned char confirm_count = 0,pre_confirm_count=0;
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4094  0542  0022               	movlb	2	; select bank2
  4095  0543  01B1               	clrf	SetTime@confirm_count^(0+256)
  4096  0544  01A5               	clrf	SetTime@pre_confirm_count^(0+256)
  4097                           
  4098                           ;user.c: 237: unsigned char sw1_count = 0;
  4099  0545  01B2               	clrf	SetTime@sw1_count^(0+256)
  4100                           
  4101                           ;user.c: 238: unsigned char set_time_date_loop=1,tMonth=0,tDay=0, tYear=0, tHour=0, tMin
      +                          =0;
  4102  0546  01A6               	clrf	SetTime@set_time_date_loop^(0+256)
  4103  0547  0AA6               	incf	SetTime@set_time_date_loop^(0+256),f
  4104  0548  01A0               	clrf	SetTime@tMonth^(0+256)
  4105  0549  01A1               	clrf	SetTime@tDay^(0+256)
  4106  054A  01A2               	clrf	SetTime@tYear^(0+256)
  4107  054B  01A3               	clrf	SetTime@tHour^(0+256)
  4108  054C  01A4               	clrf	SetTime@tMin^(0+256)
  4109                           
  4110                           ;user.c: 239: unsigned char year_1=0,year_2=0,month_1=0, month_2=0,day_1=0,day_2=0,hour_
      +                          1=0, hour_2=0,min_1=0, min_2=0;
  4111  054D  01AC               	clrf	SetTime@year_1^(0+256)
  4112  054E  01A7               	clrf	SetTime@year_2^(0+256)
  4113  054F  01AD               	clrf	SetTime@month_1^(0+256)
  4114  0550  01A8               	clrf	SetTime@month_2^(0+256)
  4115  0551  01AE               	clrf	SetTime@day_1^(0+256)
  4116  0552  01A9               	clrf	SetTime@day_2^(0+256)
  4117  0553  01AF               	clrf	SetTime@hour_1^(0+256)
  4118  0554  01AA               	clrf	SetTime@hour_2^(0+256)
  4119  0555  01B0               	clrf	SetTime@min_1^(0+256)
  4120  0556  01AB               	clrf	SetTime@min_2^(0+256)
  4121                           
  4122                           ;user.c: 241: INTCONbits.INTF = 0;
  4123  0557  108B               	bcf	11,1	;volatile
  4124                           
  4125                           ;user.c: 242: INTCONbits.INTE = 0;
  4126  0558  120B               	bcf	11,4	;volatile
  4127                           
  4128                           ;user.c: 243: INTCONbits.GIE = 0;
  4129  0559  138B               	bcf	11,7	;volatile
  4130                           
  4131                           ;user.c: 244: INTCONbits.PEIE = 0;
  4132  055A  130B               	bcf	11,6	;volatile
  4133                           
  4134                           ;user.c: 245: PIE1bits.ADIE=0;
  4135  055B  0021               	movlb	1	; select bank1
  4136  055C  1311               	bcf	17,6	;volatile
  4137                           
  4138                           ;user.c: 246: INTCONbits.IOCIF= 0;
  4139  055D  100B               	bcf	11,0	;volatile
  4140                           
  4141                           ;user.c: 247: INTCONbits.IOCIE= 0;
  4142  055E  118B               	bcf	11,3	;volatile
  4143                           
  4144                           ;user.c: 248: PIE1bits.TMR1IE = 0;
  4145  055F  1011               	bcf	17,0	;volatile
  4146                           
  4147                           ;user.c: 250: TRISBbits.TRISB3 = 1;
  4148  0560  158D               	bsf	13,3	;volatile
  4149                           
  4150                           ;user.c: 251: TRISBbits.TRISB4 = 1;
  4151  0561  160D               	bsf	13,4	;volatile
  4152                           
  4153                           ;user.c: 252: ANSELBbits.ANSB3 = 0;
  4154  0562  0023               	movlb	3	; select bank3
  4155  0563  118D               	bcf	13,3	;volatile
  4156                           
  4157                           ;user.c: 253: ANSELBbits.ANSB4 = 0;
  4158  0564  120D               	bcf	13,4	;volatile
  4159                           
  4160                           ;user.c: 254: LCDInit();
  4161  0565  3195  2589  3185   	fcall	_LCDInit
  4162                           
  4163                           ;user.c: 255: LCDClear();
  4164  0568  3193  2364  3185   	fcall	_LCDClear
  4165                           
  4166                           ;user.c: 256: gotoXY(0,0);
  4167  056B  0020               	movlb	0	; select bank0
  4168  056C  01B4               	clrf	gotoXY@y
  4169  056D  3000               	movlw	0
  4170  056E  3192  227B  3185   	fcall	_gotoXY
  4171                           
  4172                           ;user.c: 258: gotoXY(0,1);
  4173  0571  0020               	movlb	0	; select bank0
  4174  0572  01B4               	clrf	gotoXY@y
  4175  0573  0AB4               	incf	gotoXY@y,f
  4176  0574  3000               	movlw	0
  4177  0575  3192  227B  3185   	fcall	_gotoXY
  4178                           
  4179                           ;user.c: 260: __nop();
  4180  0578  0000               	nop
  4181  0579                     l5346:	
  4182                           ;user.c: 262: while(set_time_date_loop)
  4183                           
  4184  0579  0022               	movlb	2	; select bank2
  4185  057A  0826               	movf	SetTime@set_time_date_loop^(0+256),w
  4186  057B  1903               	btfsc	3,2
  4187  057C  2F91               	goto	l148
  4188                           
  4189                           ;user.c: 263: {
  4190                           ;user.c: 265: if (SW1_pressed())
  4191  057D  3192  2255  3185   	fcall	_SW1_pressed
  4192  0580  3A00               	xorlw	0
  4193  0581  1903               	skipnz
  4194  0582  2E07               	goto	l5230
  4195                           
  4196                           ;user.c: 266: {
  4197                           ;user.c: 267: sw1_count++;
  4198  0583  3001               	movlw	1
  4199  0584  0020               	movlb	0	; select bank0
  4200  0585  00C7               	movwf	??_SetTime
  4201  0586  0847               	movf	??_SetTime,w
  4202  0587  0022               	movlb	2	; select bank2
  4203  0588  07B2               	addwf	SetTime@sw1_count^(0+256),f
  4204                           
  4205                           ;user.c: 268: LCDClear();
  4206  0589  3193  2364  3185   	fcall	_LCDClear
  4207                           
  4208                           ;user.c: 269: gotoXY(0,0);
  4209  058C  0020               	movlb	0	; select bank0
  4210  058D  01B4               	clrf	gotoXY@y
  4211  058E  3000               	movlw	0
  4212  058F  3192  227B  3185   	fcall	_gotoXY
  4213                           
  4214                           ;user.c: 270: switch (confirm_count)
  4215  0592  2DED               	goto	l5224
  4216  0593                     l5212:	
  4217                           ;user.c: 275: case 1:
  4218                           
  4219                           ;user.c: 274: break;
  4220                           
  4221                           ;user.c: 271: {
  4222                           ;user.c: 272: case 0:
  4223                           
  4224                           
  4225                           ;user.c: 276: tMonth = (sw1_count *10) + month_1;
  4226  0593  300A               	movlw	10
  4227  0594  0020               	movlb	0	; select bank0
  4228  0595  00C7               	movwf	??_SetTime
  4229  0596  0847               	movf	??_SetTime,w
  4230  0597  00A9               	movwf	___bmul@multiplicand
  4231  0598  0022               	movlb	2	; select bank2
  4232  0599  0832               	movf	SetTime@sw1_count^(0+256),w
  4233  059A  3192  2243  3185   	fcall	___bmul
  4234  059D  0022               	movlb	2	; select bank2
  4235  059E  072D               	addwf	SetTime@month_1^(0+256),w
  4236  059F  0020               	movlb	0	; select bank0
  4237  05A0  00C8               	movwf	??_SetTime+1
  4238  05A1  0848               	movf	??_SetTime+1,w
  4239  05A2  0022               	movlb	2	; select bank2
  4240  05A3  00A0               	movwf	SetTime@tMonth^(0+256)
  4241                           
  4242                           ;user.c: 281: break;
  4243                           
  4244                           ;user.c: 279: case 2:
  4245                           
  4246                           ;user.c: 278: break;
  4247  05A4  2DF8               	goto	l5226
  4248  05A5                     l5214:	
  4249                           ;user.c: 282: case 3:
  4250                           
  4251                           
  4252                           ;user.c: 283: tDay = (sw1_count *10) + day_1;
  4253  05A5  300A               	movlw	10
  4254  05A6  0020               	movlb	0	; select bank0
  4255  05A7  00C7               	movwf	??_SetTime
  4256  05A8  0847               	movf	??_SetTime,w
  4257  05A9  00A9               	movwf	___bmul@multiplicand
  4258  05AA  0022               	movlb	2	; select bank2
  4259  05AB  0832               	movf	SetTime@sw1_count^(0+256),w
  4260  05AC  3192  2243  3185   	fcall	___bmul
  4261  05AF  0022               	movlb	2	; select bank2
  4262  05B0  072E               	addwf	SetTime@day_1^(0+256),w
  4263  05B1  0020               	movlb	0	; select bank0
  4264  05B2  00C8               	movwf	??_SetTime+1
  4265  05B3  0848               	movf	??_SetTime+1,w
  4266  05B4  0022               	movlb	2	; select bank2
  4267  05B5  00A1               	movwf	SetTime@tDay^(0+256)
  4268                           
  4269                           ;user.c: 288: break;
  4270                           
  4271                           ;user.c: 286: case 4:
  4272                           
  4273                           ;user.c: 285: break;
  4274  05B6  2DF8               	goto	l5226
  4275  05B7                     l5216:	
  4276                           ;user.c: 289: case 5:
  4277                           
  4278                           
  4279                           ;user.c: 290: tYear = (sw1_count *10) + year_1;
  4280  05B7  300A               	movlw	10
  4281  05B8  0020               	movlb	0	; select bank0
  4282  05B9  00C7               	movwf	??_SetTime
  4283  05BA  0847               	movf	??_SetTime,w
  4284  05BB  00A9               	movwf	___bmul@multiplicand
  4285  05BC  0022               	movlb	2	; select bank2
  4286  05BD  0832               	movf	SetTime@sw1_count^(0+256),w
  4287  05BE  3192  2243  3185   	fcall	___bmul
  4288  05C1  0022               	movlb	2	; select bank2
  4289  05C2  072C               	addwf	SetTime@year_1^(0+256),w
  4290  05C3  0020               	movlb	0	; select bank0
  4291  05C4  00C8               	movwf	??_SetTime+1
  4292  05C5  0848               	movf	??_SetTime+1,w
  4293  05C6  0022               	movlb	2	; select bank2
  4294  05C7  00A2               	movwf	SetTime@tYear^(0+256)
  4295                           
  4296                           ;user.c: 295: break;
  4297                           
  4298                           ;user.c: 293: case 6:
  4299                           
  4300                           ;user.c: 292: break;
  4301  05C8  2DF8               	goto	l5226
  4302  05C9                     l5218:	
  4303                           ;user.c: 296: case 7:
  4304                           
  4305                           
  4306                           ;user.c: 297: tHour= (sw1_count *10) + hour_1;
  4307  05C9  300A               	movlw	10
  4308  05CA  0020               	movlb	0	; select bank0
  4309  05CB  00C7               	movwf	??_SetTime
  4310  05CC  0847               	movf	??_SetTime,w
  4311  05CD  00A9               	movwf	___bmul@multiplicand
  4312  05CE  0022               	movlb	2	; select bank2
  4313  05CF  0832               	movf	SetTime@sw1_count^(0+256),w
  4314  05D0  3192  2243  3185   	fcall	___bmul
  4315  05D3  0022               	movlb	2	; select bank2
  4316  05D4  072F               	addwf	SetTime@hour_1^(0+256),w
  4317  05D5  0020               	movlb	0	; select bank0
  4318  05D6  00C8               	movwf	??_SetTime+1
  4319  05D7  0848               	movf	??_SetTime+1,w
  4320  05D8  0022               	movlb	2	; select bank2
  4321  05D9  00A3               	movwf	SetTime@tHour^(0+256)
  4322                           
  4323                           ;user.c: 302: break;
  4324                           
  4325                           ;user.c: 300: case 8:
  4326                           
  4327                           ;user.c: 299: break;
  4328  05DA  2DF8               	goto	l5226
  4329  05DB                     l5220:	
  4330                           ;user.c: 303: case 9:
  4331                           
  4332                           
  4333                           ;user.c: 304: tMin = (sw1_count *10) + min_1;
  4334  05DB  300A               	movlw	10
  4335  05DC  0020               	movlb	0	; select bank0
  4336  05DD  00C7               	movwf	??_SetTime
  4337  05DE  0847               	movf	??_SetTime,w
  4338  05DF  00A9               	movwf	___bmul@multiplicand
  4339  05E0  0022               	movlb	2	; select bank2
  4340  05E1  0832               	movf	SetTime@sw1_count^(0+256),w
  4341  05E2  3192  2243  3185   	fcall	___bmul
  4342  05E5  0022               	movlb	2	; select bank2
  4343  05E6  0730               	addwf	SetTime@min_1^(0+256),w
  4344  05E7  0020               	movlb	0	; select bank0
  4345  05E8  00C8               	movwf	??_SetTime+1
  4346  05E9  0848               	movf	??_SetTime+1,w
  4347  05EA  0022               	movlb	2	; select bank2
  4348  05EB  00A4               	movwf	SetTime@tMin^(0+256)
  4349                           
  4350                           ;user.c: 311: }
  4351                           
  4352                           ;user.c: 310: break;
  4353                           
  4354                           ;user.c: 308: default:
  4355                           
  4356                           ;user.c: 307: break;
  4357  05EC  2DF8               	goto	l5226
  4358  05ED                     l5224:	
  4359  05ED  0022               	movlb	2	; select bank2
  4360  05EE  0831               	movf	SetTime@confirm_count^(0+256),w
  4361                           
  4362                           ; Switch size 1, requested type "space"
  4363                           ; Number of cases is 10, Range of values is 0 to 9
  4364                           ; switch strategies available:
  4365                           ; Name         Instructions Cycles
  4366                           ; direct_byte           26     6 (fixed)
  4367                           ; simple_byte           31    16 (average)
  4368                           ; jumptable            260     6 (fixed)
  4369                           ;	Chosen strategy is direct_byte
  4370  05EF  0084               	movwf	4
  4371  05F0  300A               	movlw	10
  4372  05F1  0204               	subwf	4,w
  4373  05F2  1803               	skipnc
  4374  05F3  2DF8               	goto	l5226
  4375  05F4  3190               	movlp	high S5774
  4376  05F5  3504               	lslf	4,w
  4377  05F6  3E00               	addlw	low S5774
  4378  05F7  0082               	movwf	2
  4379  05F8                     l5226:	
  4380                           
  4381                           ;user.c: 312: _delay((unsigned long)((100)*(8000000/4000.0)));
  4382  05F8  3002               	movlw	2
  4383  05F9  0020               	movlb	0	; select bank0
  4384  05FA  00C9               	movwf	??_SetTime+2
  4385  05FB  3004               	movlw	4
  4386  05FC  00C8               	movwf	??_SetTime+1
  4387  05FD  30BA               	movlw	186
  4388  05FE  00C7               	movwf	??_SetTime
  4389  05FF                     u6187:	
  4390  05FF  0BC7               	decfsz	??_SetTime,f
  4391  0600  2DFF               	goto	u6187
  4392  0601  0BC8               	decfsz	??_SetTime+1,f
  4393  0602  2DFF               	goto	u6187
  4394  0603  0BC9               	decfsz	??_SetTime+2,f
  4395  0604  2DFF               	goto	u6187
  4396  0605  0000               	nop
  4397                           
  4398                           ;user.c: 313: __nop();
  4399  0606  0000               	nop
  4400  0607                     l5230:	
  4401                           
  4402                           ;user.c: 315: }
  4403                           ;user.c: 316: if (SW3_pressed())
  4404  0607  3192  2268  3185   	fcall	_SW3_pressed
  4405  060A  3A00               	xorlw	0
  4406  060B  1903               	skipnz
  4407  060C  2E22               	goto	l5238
  4408                           
  4409                           ;user.c: 317: {
  4410                           ;user.c: 318: confirm_count++;
  4411  060D  3001               	movlw	1
  4412  060E  0020               	movlb	0	; select bank0
  4413  060F  00C7               	movwf	??_SetTime
  4414  0610  0847               	movf	??_SetTime,w
  4415  0611  0022               	movlb	2	; select bank2
  4416  0612  07B1               	addwf	SetTime@confirm_count^(0+256),f
  4417                           
  4418                           ;user.c: 319: _delay((unsigned long)((100)*(8000000/4000.0)));
  4419  0613  3002               	movlw	2
  4420  0614  0020               	movlb	0	; select bank0
  4421  0615  00C9               	movwf	??_SetTime+2
  4422  0616  3004               	movlw	4
  4423  0617  00C8               	movwf	??_SetTime+1
  4424  0618  30BA               	movlw	186
  4425  0619  00C7               	movwf	??_SetTime
  4426  061A                     u6197:	
  4427  061A  0BC7               	decfsz	??_SetTime,f
  4428  061B  2E1A               	goto	u6197
  4429  061C  0BC8               	decfsz	??_SetTime+1,f
  4430  061D  2E1A               	goto	u6197
  4431  061E  0BC9               	decfsz	??_SetTime+2,f
  4432  061F  2E1A               	goto	u6197
  4433  0620  0000               	nop
  4434                           
  4435                           ;user.c: 320: __nop();
  4436  0621  0000               	nop
  4437  0622                     l5238:	
  4438                           
  4439                           ;user.c: 322: }
  4440                           ;user.c: 323: if (pre_confirm_count != confirm_count)
  4441  0622  0022               	movlb	2	; select bank2
  4442  0623  0825               	movf	SetTime@pre_confirm_count^(0+256),w
  4443  0624  0631               	xorwf	SetTime@confirm_count^(0+256),w
  4444  0625  1903               	skipnz
  4445  0626  2F7B               	goto	l5336
  4446                           
  4447                           ;user.c: 324: {
  4448                           ;user.c: 325: LCDClear();
  4449  0627  3193  2364  3185   	fcall	_LCDClear
  4450                           
  4451                           ;user.c: 326: gotoXY(0,0);
  4452  062A  0020               	movlb	0	; select bank0
  4453  062B  01B4               	clrf	gotoXY@y
  4454  062C  3000               	movlw	0
  4455  062D  3192  227B  3185   	fcall	_gotoXY
  4456                           
  4457                           ;user.c: 327: switch (confirm_count)
  4458  0630  2EE4               	goto	l5298
  4459  0631                     l5242:	
  4460                           ;user.c: 328: {
  4461                           ;user.c: 329: case 1:
  4462                           
  4463                           
  4464                           ;user.c: 330: month_1 = sw1_count;
  4465  0631  0022               	movlb	2	; select bank2
  4466  0632  0832               	movf	SetTime@sw1_count^(0+256),w
  4467  0633  0020               	movlb	0	; select bank0
  4468  0634  00C7               	movwf	??_SetTime
  4469  0635  0847               	movf	??_SetTime,w
  4470  0636  0022               	movlb	2	; select bank2
  4471  0637  00AD               	movwf	SetTime@month_1^(0+256)
  4472  0638  2EC0               	goto	l5286
  4473  0639                     l5246:	
  4474                           ;user.c: 333: case 2:
  4475                           
  4476                           ;user.c: 332: break;
  4477                           
  4478                           ;user.c: 331: sw1_count = 0;
  4479                           
  4480                           
  4481                           ;user.c: 334: month_2 = sw1_count;
  4482  0639  0832               	movf	SetTime@sw1_count^(0+256),w
  4483  063A  0020               	movlb	0	; select bank0
  4484  063B  00C7               	movwf	??_SetTime
  4485  063C  0847               	movf	??_SetTime,w
  4486  063D  0022               	movlb	2	; select bank2
  4487  063E  00A8               	movwf	SetTime@month_2^(0+256)
  4488                           
  4489                           ;user.c: 335: Month = (month_2 *10) + month_1;
  4490  063F  300A               	movlw	10
  4491  0640  0020               	movlb	0	; select bank0
  4492  0641  00C7               	movwf	??_SetTime
  4493  0642  0847               	movf	??_SetTime,w
  4494  0643  00A9               	movwf	___bmul@multiplicand
  4495  0644  0022               	movlb	2	; select bank2
  4496  0645  0828               	movf	SetTime@month_2^(0+256),w
  4497  0646  3192  2243  3185   	fcall	___bmul
  4498  0649  0022               	movlb	2	; select bank2
  4499  064A  072D               	addwf	SetTime@month_1^(0+256),w
  4500  064B  0020               	movlb	0	; select bank0
  4501  064C  00C8               	movwf	??_SetTime+1
  4502  064D  0848               	movf	??_SetTime+1,w
  4503  064E  00E4               	movwf	_Month
  4504                           
  4505                           ;user.c: 336: printf("..month = %02d", Month);
  4506  064F  3010               	movlw	low (STR_1| (0+32768))
  4507  0650  00B7               	movwf	printf@f
  4508  0651  3085               	movlw	high (STR_1| (0+32768))
  4509  0652  00B8               	movwf	printf@f+1
  4510  0653  0864               	movf	_Month,w
  4511  0654  00C7               	movwf	??_SetTime
  4512  0655  01C8               	clrf	??_SetTime+1
  4513  0656  0847               	movf	??_SetTime,w
  4514  0657  00B9               	movwf	?_printf+2
  4515  0658  0848               	movf	??_SetTime+1,w
  4516  0659  00BA               	movwf	?_printf+3
  4517  065A  318B  2353  3185   	fcall	_printf
  4518  065D  2EB8               	goto	L5
  4519  065E                     l5254:	
  4520                           ;user.c: 339: case 3:
  4521                           
  4522                           ;user.c: 338: break;
  4523                           
  4524                           ;user.c: 337: sw1_count = 0;
  4525                           
  4526                           
  4527                           ;user.c: 340: day_1 = sw1_count;
  4528  065E  0832               	movf	SetTime@sw1_count^(0+256),w
  4529  065F  0020               	movlb	0	; select bank0
  4530  0660  00C7               	movwf	??_SetTime
  4531  0661  0847               	movf	??_SetTime,w
  4532  0662  0022               	movlb	2	; select bank2
  4533  0663  00AE               	movwf	SetTime@day_1^(0+256)
  4534  0664  2EC0               	goto	l5286
  4535  0665                     l5258:	
  4536                           ;user.c: 343: case 4:
  4537                           
  4538                           ;user.c: 342: break;
  4539                           
  4540                           ;user.c: 341: sw1_count = 0;
  4541                           
  4542                           
  4543                           ;user.c: 344: day_2 = sw1_count;
  4544  0665  0832               	movf	SetTime@sw1_count^(0+256),w
  4545  0666  0020               	movlb	0	; select bank0
  4546  0667  00C7               	movwf	??_SetTime
  4547  0668  0847               	movf	??_SetTime,w
  4548  0669  0022               	movlb	2	; select bank2
  4549  066A  00A9               	movwf	SetTime@day_2^(0+256)
  4550                           
  4551                           ;user.c: 345: Days = (day_2 *10) + day_1;
  4552  066B  300A               	movlw	10
  4553  066C  0020               	movlb	0	; select bank0
  4554  066D  00C7               	movwf	??_SetTime
  4555  066E  0847               	movf	??_SetTime,w
  4556  066F  00A9               	movwf	___bmul@multiplicand
  4557  0670  0022               	movlb	2	; select bank2
  4558  0671  0829               	movf	SetTime@day_2^(0+256),w
  4559  0672  3192  2243  3185   	fcall	___bmul
  4560  0675  0022               	movlb	2	; select bank2
  4561  0676  072E               	addwf	SetTime@day_1^(0+256),w
  4562  0677  0020               	movlb	0	; select bank0
  4563  0678  00C8               	movwf	??_SetTime+1
  4564  0679  0848               	movf	??_SetTime+1,w
  4565  067A  00E1               	movwf	_Days
  4566  067B  2EB8               	goto	L5
  4567  067C                     l5264:	
  4568                           ;user.c: 349: case 5:
  4569                           
  4570                           ;user.c: 348: break;
  4571                           
  4572                           ;user.c: 347: sw1_count = 0;
  4573                           
  4574                           
  4575                           ;user.c: 350: year_1 = sw1_count;
  4576  067C  0832               	movf	SetTime@sw1_count^(0+256),w
  4577  067D  0020               	movlb	0	; select bank0
  4578  067E  00C7               	movwf	??_SetTime
  4579  067F  0847               	movf	??_SetTime,w
  4580  0680  0022               	movlb	2	; select bank2
  4581  0681  00AC               	movwf	SetTime@year_1^(0+256)
  4582  0682  2EC0               	goto	l5286
  4583  0683                     l5268:	
  4584                           ;user.c: 353: case 6:
  4585                           
  4586                           ;user.c: 352: break;
  4587                           
  4588                           ;user.c: 351: sw1_count = 0;
  4589                           
  4590                           
  4591                           ;user.c: 354: year_2 = sw1_count;
  4592  0683  0832               	movf	SetTime@sw1_count^(0+256),w
  4593  0684  0020               	movlb	0	; select bank0
  4594  0685  00C7               	movwf	??_SetTime
  4595  0686  0847               	movf	??_SetTime,w
  4596  0687  0022               	movlb	2	; select bank2
  4597  0688  00A7               	movwf	SetTime@year_2^(0+256)
  4598                           
  4599                           ;user.c: 355: Year = (year_2 *10) + year_1;
  4600  0689  300A               	movlw	10
  4601  068A  0020               	movlb	0	; select bank0
  4602  068B  00C7               	movwf	??_SetTime
  4603  068C  0847               	movf	??_SetTime,w
  4604  068D  00A9               	movwf	___bmul@multiplicand
  4605  068E  0022               	movlb	2	; select bank2
  4606  068F  0827               	movf	SetTime@year_2^(0+256),w
  4607  0690  3192  2243  3185   	fcall	___bmul
  4608  0693  0022               	movlb	2	; select bank2
  4609  0694  072C               	addwf	SetTime@year_1^(0+256),w
  4610  0695  0020               	movlb	0	; select bank0
  4611  0696  00C8               	movwf	??_SetTime+1
  4612  0697  0848               	movf	??_SetTime+1,w
  4613  0698  00E5               	movwf	_Year
  4614                           
  4615                           ;user.c: 357: sw1_count = 0;
  4616  0699  0022               	movlb	2	; select bank2
  4617  069A  01B2               	clrf	SetTime@sw1_count^(0+256)
  4618  069B                     l5274:	
  4619                           ;user.c: 358: case 7:
  4620                           
  4621                           
  4622                           ;user.c: 359: hour_1 = sw1_count;
  4623  069B  0832               	movf	SetTime@sw1_count^(0+256),w
  4624  069C  0020               	movlb	0	; select bank0
  4625  069D  00C7               	movwf	??_SetTime
  4626  069E  0847               	movf	??_SetTime,w
  4627  069F  0022               	movlb	2	; select bank2
  4628  06A0  00AF               	movwf	SetTime@hour_1^(0+256)
  4629  06A1  2EC0               	goto	l5286
  4630  06A2                     l5278:	
  4631                           ;user.c: 362: case 8:
  4632                           
  4633                           ;user.c: 361: break;
  4634                           
  4635                           ;user.c: 360: sw1_count = 0;
  4636                           
  4637                           
  4638                           ;user.c: 363: hour_2 = sw1_count;
  4639  06A2  0832               	movf	SetTime@sw1_count^(0+256),w
  4640  06A3  0020               	movlb	0	; select bank0
  4641  06A4  00C7               	movwf	??_SetTime
  4642  06A5  0847               	movf	??_SetTime,w
  4643  06A6  0022               	movlb	2	; select bank2
  4644  06A7  00AA               	movwf	SetTime@hour_2^(0+256)
  4645                           
  4646                           ;user.c: 364: Hours= (hour_2 *10) + hour_1;
  4647  06A8  300A               	movlw	10
  4648  06A9  0020               	movlb	0	; select bank0
  4649  06AA  00C7               	movwf	??_SetTime
  4650  06AB  0847               	movf	??_SetTime,w
  4651  06AC  00A9               	movwf	___bmul@multiplicand
  4652  06AD  0022               	movlb	2	; select bank2
  4653  06AE  082A               	movf	SetTime@hour_2^(0+256),w
  4654  06AF  3192  2243  3185   	fcall	___bmul
  4655  06B2  0022               	movlb	2	; select bank2
  4656  06B3  072F               	addwf	SetTime@hour_1^(0+256),w
  4657  06B4  0020               	movlb	0	; select bank0
  4658  06B5  00C8               	movwf	??_SetTime+1
  4659  06B6  0848               	movf	??_SetTime+1,w
  4660  06B7  00E2               	movwf	_Hours
  4661  06B8                     L5:	
  4662                           
  4663                           ;user.c: 366: sw1_count = 0;
  4664  06B8  0022               	movlb	2	; select bank2
  4665  06B9  2EC0               	goto	l5286
  4666  06BA                     l5284:	
  4667                           ;user.c: 368: case 9:
  4668                           
  4669                           ;user.c: 367: break;
  4670                           
  4671                           
  4672                           ;user.c: 369: min_1 = sw1_count;
  4673  06BA  0832               	movf	SetTime@sw1_count^(0+256),w
  4674  06BB  0020               	movlb	0	; select bank0
  4675  06BC  00C7               	movwf	??_SetTime
  4676  06BD  0847               	movf	??_SetTime,w
  4677  06BE  0022               	movlb	2	; select bank2
  4678  06BF  00B0               	movwf	SetTime@min_1^(0+256)
  4679  06C0                     l5286:	
  4680                           
  4681                           ;user.c: 370: sw1_count = 0;
  4682  06C0  01B2               	clrf	SetTime@sw1_count^(0+256)
  4683                           
  4684                           ;user.c: 371: break;
  4685  06C1  2EF2               	goto	l5300
  4686  06C2                     l5288:	
  4687                           ;user.c: 372: case 10:
  4688                           
  4689                           
  4690                           ;user.c: 373: min_2 = sw1_count;
  4691  06C2  0832               	movf	SetTime@sw1_count^(0+256),w
  4692  06C3  0020               	movlb	0	; select bank0
  4693  06C4  00C7               	movwf	??_SetTime
  4694  06C5  0847               	movf	??_SetTime,w
  4695  06C6  0022               	movlb	2	; select bank2
  4696  06C7  00AB               	movwf	SetTime@min_2^(0+256)
  4697                           
  4698                           ;user.c: 374: Minutes = (min_2 *10) + min_1;
  4699  06C8  300A               	movlw	10
  4700  06C9  0020               	movlb	0	; select bank0
  4701  06CA  00C7               	movwf	??_SetTime
  4702  06CB  0847               	movf	??_SetTime,w
  4703  06CC  00A9               	movwf	___bmul@multiplicand
  4704  06CD  0022               	movlb	2	; select bank2
  4705  06CE  082B               	movf	SetTime@min_2^(0+256),w
  4706  06CF  3192  2243  3185   	fcall	___bmul
  4707  06D2  0022               	movlb	2	; select bank2
  4708  06D3  0730               	addwf	SetTime@min_1^(0+256),w
  4709  06D4  0020               	movlb	0	; select bank0
  4710  06D5  00C8               	movwf	??_SetTime+1
  4711  06D6  0848               	movf	??_SetTime+1,w
  4712  06D7  00E3               	movwf	_Minutes
  4713                           
  4714                           ;user.c: 376: sw1_count = 0;
  4715  06D8  0022               	movlb	2	; select bank2
  4716  06D9  01B2               	clrf	SetTime@sw1_count^(0+256)
  4717                           
  4718                           ;user.c: 377: confirm_count++;
  4719  06DA  3001               	movlw	1
  4720  06DB  0020               	movlb	0	; select bank0
  4721  06DC  00C7               	movwf	??_SetTime
  4722  06DD  0847               	movf	??_SetTime,w
  4723  06DE  0022               	movlb	2	; select bank2
  4724  06DF  07B1               	addwf	SetTime@confirm_count^(0+256),f
  4725                           
  4726                           ;user.c: 378: break;
  4727  06E0  2EF2               	goto	l5300
  4728  06E1                     l5296:	
  4729                           ;user.c: 379: default:
  4730                           
  4731                           
  4732                           ;user.c: 380: sw1_count = 0;
  4733  06E1  01B2               	clrf	SetTime@sw1_count^(0+256)
  4734                           
  4735                           ;user.c: 381: confirm_count = 0;
  4736  06E2  01B1               	clrf	SetTime@confirm_count^(0+256)
  4737                           
  4738                           ;user.c: 383: }
  4739  06E3  2EF2               	goto	l5300
  4740  06E4                     l5298:	
  4741  06E4  0022               	movlb	2	; select bank2
  4742  06E5  0831               	movf	SetTime@confirm_count^(0+256),w
  4743                           
  4744                           ; Switch size 1, requested type "space"
  4745                           ; Number of cases is 10, Range of values is 1 to 10
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; direct_byte           29     9 (fixed)
  4749                           ; simple_byte           31    16 (average)
  4750                           ; jumptable            263     9 (fixed)
  4751                           ;	Chosen strategy is direct_byte
  4752  06E6  3EFF               	addlw	-1
  4753  06E7  1C03               	skipc
  4754  06E8  2EE1               	goto	l5296
  4755  06E9  0084               	movwf	4
  4756  06EA  300A               	movlw	10
  4757  06EB  0204               	subwf	4,w
  4758  06EC  1803               	skipnc
  4759  06ED  2EE1               	goto	l5296
  4760  06EE  3190               	movlp	high S5776
  4761  06EF  3504               	lslf	4,w
  4762  06F0  3E14               	addlw	low S5776
  4763  06F1  0082               	movwf	2
  4764  06F2                     l5300:	
  4765                           
  4766                           ;user.c: 384: pre_confirm_count = confirm_count;
  4767  06F2  0831               	movf	SetTime@confirm_count^(0+256),w
  4768  06F3  0020               	movlb	0	; select bank0
  4769  06F4  00C7               	movwf	??_SetTime
  4770  06F5  0847               	movf	??_SetTime,w
  4771  06F6  0022               	movlb	2	; select bank2
  4772  06F7  00A5               	movwf	SetTime@pre_confirm_count^(0+256)
  4773                           
  4774                           ;user.c: 385: if (confirm_count == 11)
  4775  06F8  300B               	movlw	11
  4776  06F9  0631               	xorwf	SetTime@confirm_count^(0+256),w
  4777  06FA  1D03               	btfss	3,2
  4778  06FB  2F78               	goto	l5332
  4779                           
  4780                           ;user.c: 386: {
  4781                           ;user.c: 387: confirm_count = 0;
  4782  06FC  01B1               	clrf	SetTime@confirm_count^(0+256)
  4783                           
  4784                           ;user.c: 388: LCDClear();
  4785  06FD  3193  2364  3185   	fcall	_LCDClear
  4786                           
  4787                           ;user.c: 389: gotoXY(0,0);
  4788  0700  0020               	movlb	0	; select bank0
  4789  0701  01B4               	clrf	gotoXY@y
  4790  0702  3000               	movlw	0
  4791  0703  3192  227B  3185   	fcall	_gotoXY
  4792                           
  4793                           ;user.c: 391: gotoXY(0,1);
  4794  0706  0020               	movlb	0	; select bank0
  4795  0707  01B4               	clrf	gotoXY@y
  4796  0708  0AB4               	incf	gotoXY@y,f
  4797  0709  3000               	movlw	0
  4798  070A  3192  227B  3185   	fcall	_gotoXY
  4799                           
  4800                           ;user.c: 393: set_time_date_loop = 0;
  4801  070D  0022               	movlb	2	; select bank2
  4802  070E  01A6               	clrf	SetTime@set_time_date_loop^(0+256)
  4803                           
  4804                           ;user.c: 394: _delay((unsigned long)((200)*(8000000/4000.0)));
  4805  070F  3003               	movlw	3
  4806  0710  0020               	movlb	0	; select bank0
  4807  0711  00C9               	movwf	??_SetTime+2
  4808  0712  3008               	movlw	8
  4809  0713  00C8               	movwf	??_SetTime+1
  4810  0714  3078               	movlw	120
  4811  0715  00C7               	movwf	??_SetTime
  4812  0716                     u6207:	
  4813  0716  0BC7               	decfsz	??_SetTime,f
  4814  0717  2F16               	goto	u6207
  4815  0718  0BC8               	decfsz	??_SetTime+1,f
  4816  0719  2F16               	goto	u6207
  4817  071A  0BC9               	decfsz	??_SetTime+2,f
  4818  071B  2F16               	goto	u6207
  4819                           
  4820                           ;user.c: 395: _delay((unsigned long)((200)*(8000000/4000.0)));
  4821  071C  3003               	movlw	3
  4822  071D  0020               	movlb	0	; select bank0
  4823  071E  00C9               	movwf	??_SetTime+2
  4824  071F  3008               	movlw	8
  4825  0720  00C8               	movwf	??_SetTime+1
  4826  0721  3078               	movlw	120
  4827  0722  00C7               	movwf	??_SetTime
  4828  0723                     u6217:	
  4829  0723  0BC7               	decfsz	??_SetTime,f
  4830  0724  2F23               	goto	u6217
  4831  0725  0BC8               	decfsz	??_SetTime+1,f
  4832  0726  2F23               	goto	u6217
  4833  0727  0BC9               	decfsz	??_SetTime+2,f
  4834  0728  2F23               	goto	u6217
  4835                           
  4836                           ;user.c: 396: _delay((unsigned long)((200)*(8000000/4000.0)));
  4837  0729  3003               	movlw	3
  4838  072A  0020               	movlb	0	; select bank0
  4839  072B  00C9               	movwf	??_SetTime+2
  4840  072C  3008               	movlw	8
  4841  072D  00C8               	movwf	??_SetTime+1
  4842  072E  3078               	movlw	120
  4843  072F  00C7               	movwf	??_SetTime
  4844  0730                     u6227:	
  4845  0730  0BC7               	decfsz	??_SetTime,f
  4846  0731  2F30               	goto	u6227
  4847  0732  0BC8               	decfsz	??_SetTime+1,f
  4848  0733  2F30               	goto	u6227
  4849  0734  0BC9               	decfsz	??_SetTime+2,f
  4850  0735  2F30               	goto	u6227
  4851                           
  4852                           ;user.c: 397: _delay((unsigned long)((200)*(8000000/4000.0)));
  4853  0736  3003               	movlw	3
  4854  0737  0020               	movlb	0	; select bank0
  4855  0738  00C9               	movwf	??_SetTime+2
  4856  0739  3008               	movlw	8
  4857  073A  00C8               	movwf	??_SetTime+1
  4858  073B  3078               	movlw	120
  4859  073C  00C7               	movwf	??_SetTime
  4860  073D                     u6237:	
  4861  073D  0BC7               	decfsz	??_SetTime,f
  4862  073E  2F3D               	goto	u6237
  4863  073F  0BC8               	decfsz	??_SetTime+1,f
  4864  0740  2F3D               	goto	u6237
  4865  0741  0BC9               	decfsz	??_SetTime+2,f
  4866  0742  2F3D               	goto	u6237
  4867                           
  4868                           ;user.c: 398: _delay((unsigned long)((200)*(8000000/4000.0)));
  4869  0743  3003               	movlw	3
  4870  0744  0020               	movlb	0	; select bank0
  4871  0745  00C9               	movwf	??_SetTime+2
  4872  0746  3008               	movlw	8
  4873  0747  00C8               	movwf	??_SetTime+1
  4874  0748  3078               	movlw	120
  4875  0749  00C7               	movwf	??_SetTime
  4876  074A                     u6247:	
  4877  074A  0BC7               	decfsz	??_SetTime,f
  4878  074B  2F4A               	goto	u6247
  4879  074C  0BC8               	decfsz	??_SetTime+1,f
  4880  074D  2F4A               	goto	u6247
  4881  074E  0BC9               	decfsz	??_SetTime+2,f
  4882  074F  2F4A               	goto	u6247
  4883                           
  4884                           ;user.c: 399: _delay((unsigned long)((200)*(8000000/4000.0)));
  4885  0750  3003               	movlw	3
  4886  0751  0020               	movlb	0	; select bank0
  4887  0752  00C9               	movwf	??_SetTime+2
  4888  0753  3008               	movlw	8
  4889  0754  00C8               	movwf	??_SetTime+1
  4890  0755  3078               	movlw	120
  4891  0756  00C7               	movwf	??_SetTime
  4892  0757                     u6257:	
  4893  0757  0BC7               	decfsz	??_SetTime,f
  4894  0758  2F57               	goto	u6257
  4895  0759  0BC8               	decfsz	??_SetTime+1,f
  4896  075A  2F57               	goto	u6257
  4897  075B  0BC9               	decfsz	??_SetTime+2,f
  4898  075C  2F57               	goto	u6257
  4899                           
  4900                           ;user.c: 400: _delay((unsigned long)((200)*(8000000/4000.0)));
  4901  075D  3003               	movlw	3
  4902  075E  0020               	movlb	0	; select bank0
  4903  075F  00C9               	movwf	??_SetTime+2
  4904  0760  3008               	movlw	8
  4905  0761  00C8               	movwf	??_SetTime+1
  4906  0762  3078               	movlw	120
  4907  0763  00C7               	movwf	??_SetTime
  4908  0764                     u6267:	
  4909  0764  0BC7               	decfsz	??_SetTime,f
  4910  0765  2F64               	goto	u6267
  4911  0766  0BC8               	decfsz	??_SetTime+1,f
  4912  0767  2F64               	goto	u6267
  4913  0768  0BC9               	decfsz	??_SetTime+2,f
  4914  0769  2F64               	goto	u6267
  4915                           
  4916                           ;user.c: 401: _delay((unsigned long)((200)*(8000000/4000.0)));
  4917  076A  3003               	movlw	3
  4918  076B  0020               	movlb	0	; select bank0
  4919  076C  00C9               	movwf	??_SetTime+2
  4920  076D  3008               	movlw	8
  4921  076E  00C8               	movwf	??_SetTime+1
  4922  076F  3078               	movlw	120
  4923  0770  00C7               	movwf	??_SetTime
  4924  0771                     u6277:	
  4925  0771  0BC7               	decfsz	??_SetTime,f
  4926  0772  2F71               	goto	u6277
  4927  0773  0BC8               	decfsz	??_SetTime+1,f
  4928  0774  2F71               	goto	u6277
  4929  0775  0BC9               	decfsz	??_SetTime+2,f
  4930  0776  2F71               	goto	u6277
  4931                           
  4932                           ;user.c: 403: __nop();
  4933  0777  0000               	nop
  4934  0778                     l5332:	
  4935                           
  4936                           ;user.c: 405: }
  4937                           ;user.c: 406: IOCBFbits.IOCBF3 = 0;
  4938  0778  0027               	movlb	7	; select bank7
  4939  0779  1196               	bcf	22,3	;volatile
  4940                           
  4941                           ;user.c: 407: IOCBFbits.IOCBF4 = 0;
  4942  077A  1216               	bcf	22,4	;volatile
  4943  077B                     l5336:	
  4944                           
  4945                           ;user.c: 408: }
  4946                           ;user.c: 409: gcountIdleTime = 120000;
  4947  077B  3000               	movlw	0
  4948  077C  0021               	movlb	1	; select bank1
  4949  077D  00D7               	movwf	(_gcountIdleTime+3)^(0+128)
  4950  077E  3001               	movlw	1
  4951  077F  00D6               	movwf	(_gcountIdleTime+2)^(0+128)
  4952  0780  30D4               	movlw	212
  4953  0781  00D5               	movwf	(_gcountIdleTime+1)^(0+128)
  4954  0782  30C0               	movlw	192
  4955  0783  00D4               	movwf	_gcountIdleTime^(0+128)
  4956                           
  4957                           ;user.c: 410: gStripIdleTime = 250000;
  4958  0784  3000               	movlw	0
  4959  0785  00D3               	movwf	(_gStripIdleTime+3)^(0+128)
  4960  0786  3003               	movlw	3
  4961  0787  00D2               	movwf	(_gStripIdleTime+2)^(0+128)
  4962  0788  30D0               	movlw	208
  4963  0789  00D1               	movwf	(_gStripIdleTime+1)^(0+128)
  4964  078A  3090               	movlw	144
  4965  078B  00D0               	movwf	_gStripIdleTime^(0+128)
  4966                           
  4967                           ;user.c: 411: gStripInserted = 0;
  4968  078C  01FB               	clrf	_gStripInserted
  4969                           
  4970                           ;user.c: 412: gStripRemoved = 0;
  4971  078D  0020               	movlb	0	; select bank0
  4972  078E  01E0               	clrf	_gStripRemoved
  4973                           
  4974                           ;user.c: 413: gBloodNotInsetrted = 0;
  4975  078F  01F8               	clrf	_gBloodNotInsetrted
  4976  0790  2D79               	goto	l5346
  4977  0791                     l148:	
  4978                           ;user.c: 416: }
  4979                           ;user.c: 417: while(!(PORTB & 0x08));
  4980                           
  4981  0791  0020               	movlb	0	; select bank0
  4982  0792  1D8D               	btfss	13,3	;volatile
  4983  0793  2F91               	goto	l148
  4984  0794                     l151:	
  4985                           ;user.c: 418: while(!(PORTB & 0x10));
  4986                           
  4987  0794  1E0D               	btfss	13,4	;volatile
  4988  0795  2F94               	goto	l151
  4989                           
  4990                           ;user.c: 419: __nop();
  4991  0796  0000               	nop
  4992                           
  4993                           ;user.c: 422: INTCONbits.INTF = 0;
  4994  0797  108B               	bcf	11,1	;volatile
  4995                           
  4996                           ;user.c: 423: INTCONbits.INTE = 1;
  4997  0798  160B               	bsf	11,4	;volatile
  4998                           
  4999                           ;user.c: 424: INTCONbits.GIE = 1;
  5000  0799  178B               	bsf	11,7	;volatile
  5001                           
  5002                           ;user.c: 425: INTCONbits.PEIE = 1;
  5003  079A  170B               	bsf	11,6	;volatile
  5004                           
  5005                           ;user.c: 426: PIE1bits.ADIE=1;
  5006  079B  0021               	movlb	1	; select bank1
  5007  079C  1711               	bsf	17,6	;volatile
  5008                           
  5009                           ;user.c: 427: INTCONbits.IOCIF= 0;
  5010  079D  100B               	bcf	11,0	;volatile
  5011                           
  5012                           ;user.c: 428: INTCONbits.IOCIE= 1;
  5013  079E  158B               	bsf	11,3	;volatile
  5014                           
  5015                           ;user.c: 429: PIE1bits.TMR1IE = 1;
  5016  079F  1411               	bsf	17,0	;volatile
  5017  07A0  0008               	return
  5018  07A1                     __end_of_SetTime:	
  5019                           
  5020                           	psect	swtext1
  5021  1000                     __pswtext1:	
  5022  1000                     S5774:	
  5023  1000  3185  2DF8         	ljmp	l5226
  5024  1002  3185  2D93         	ljmp	l5212
  5025  1004  3185  2DF8         	ljmp	l5226
  5026  1006  3185  2DA5         	ljmp	l5214
  5027  1008  3185  2DF8         	ljmp	l5226
  5028  100A  3185  2DB7         	ljmp	l5216
  5029  100C  3185  2DF8         	ljmp	l5226
  5030  100E  3185  2DC9         	ljmp	l5218
  5031  1010  3185  2DF8         	ljmp	l5226
  5032  1012  3185  2DDB         	ljmp	l5220
  5033                           
  5034                           	psect	swtext2
  5035  1014                     __pswtext2:	
  5036  1014                     S5776:	
  5037  1014  3186  2E31         	ljmp	l5242
  5038  1016  3186  2E39         	ljmp	l5246
  5039  1018  3186  2E5E         	ljmp	l5254
  5040  101A  3186  2E65         	ljmp	l5258
  5041  101C  3186  2E7C         	ljmp	l5264
  5042  101E  3186  2E83         	ljmp	l5268
  5043  1020  3186  2E9B         	ljmp	l5274
  5044  1022  3186  2EA2         	ljmp	l5278
  5045  1024  3186  2EBA         	ljmp	l5284
  5046  1026  3186  2EC2         	ljmp	l5288
  5047                           
  5048                           	psect	text5
  5049  0B53                     __ptext5:	
  5050 ;; *************** function _printf *****************
  5051 ;; Defined at:
  5052 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  f               2   23[BANK0 ] PTR const unsigned char 
  5055 ;;		 -> STR_1(15), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  tmpval          4    0        struct .
  5058 ;;  width           2   36[BANK0 ] int 
  5059 ;;  val             2   33[BANK0 ] unsigned int 
  5060 ;;  cp              2    0        PTR const unsigned char 
  5061 ;;  len             2    0        unsigned int 
  5062 ;;  c               1   38[BANK0 ] char 
  5063 ;;  flag            1   35[BANK0 ] unsigned char 
  5064 ;;  prec            1   32[BANK0 ] char 
  5065 ;;  ap              1   31[BANK0 ] PTR void [1]
  5066 ;;		 -> ?_printf(2), 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  2   23[BANK0 ] int 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;Total ram usage:       16 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    4
  5083 ;; This function calls:
  5084 ;;		___lwdiv
  5085 ;;		___lwmod
  5086 ;;		___wmul
  5087 ;;		_isdigit
  5088 ;;		_putch
  5089 ;; This function is called by:
  5090 ;;		_SetTime
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _printf
  5096  0B53                     _printf:	
  5097                           
  5098                           ;doprnt.c: 466: va_list ap;
  5099                           ;doprnt.c: 499: signed char c;
  5100                           ;doprnt.c: 501: int width;
  5101                           ;doprnt.c: 506: signed char prec;
  5102                           ;doprnt.c: 508: unsigned char flag;
  5103                           ;doprnt.c: 523: union {
  5104                           ;doprnt.c: 524: unsigned long vd;
  5105                           ;doprnt.c: 525: double integ;
  5106                           ;doprnt.c: 526: } tmpval;
  5107                           ;doprnt.c: 528: unsigned int val;
  5108                           ;doprnt.c: 529: unsigned len;
  5109                           ;doprnt.c: 530: const char * cp;
  5110                           ;doprnt.c: 533: *ap = __va_start();
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5114  0B53  3039               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5115  0B54  0020               	movlb	0	; select bank0
  5116  0B55  00BB               	movwf	??_printf
  5117  0B56  083B               	movf	??_printf,w
  5118  0B57  00BF               	movwf	printf@ap
  5119  0B58                     l4850:	
  5120                           ;doprnt.c: 536: while(c = *f++) {
  5121                           
  5122  0B58  0020               	movlb	0	; select bank0
  5123  0B59  0838               	movf	printf@f+1,w
  5124  0B5A  00BC               	movwf	??_printf+1
  5125  0B5B  0837               	movf	printf@f,w
  5126  0B5C  00BB               	movwf	??_printf
  5127  0B5D  0AB7               	incf	printf@f,f
  5128  0B5E  1903               	skipnz
  5129  0B5F  0AB8               	incf	printf@f+1,f
  5130  0B60  083B               	movf	??_printf,w
  5131  0B61  0084               	movwf	4
  5132  0B62  083C               	movf	??_printf+1,w
  5133  0B63  0085               	movwf	5
  5134  0B64  0800               	movf	0,w	;code access
  5135  0B65  00BD               	movwf	??_printf+2
  5136  0B66  083D               	movf	??_printf+2,w
  5137  0B67  00C6               	movwf	printf@c
  5138  0B68  0846               	movf	printf@c,w
  5139  0B69  1903               	btfsc	3,2
  5140  0B6A  0008               	return
  5141                           
  5142                           ;doprnt.c: 538: if(c != '%')
  5143  0B6B  3025               	movlw	37
  5144  0B6C  0646               	xorwf	printf@c,w
  5145  0B6D  1903               	btfsc	3,2
  5146  0B6E  2B74               	goto	l4764
  5147                           
  5148                           ;doprnt.c: 540: {
  5149                           ;doprnt.c: 541: (putch(c) );
  5150  0B6F  0846               	movf	printf@c,w
  5151  0B70  3191  21F9  318B   	fcall	_putch
  5152                           
  5153                           ;doprnt.c: 542: continue;
  5154  0B73  2B58               	goto	l4850
  5155  0B74                     l4764:	
  5156                           
  5157                           ;doprnt.c: 543: }
  5158                           ;doprnt.c: 546: width = 0;
  5159  0B74  0020               	movlb	0	; select bank0
  5160  0B75  01C4               	clrf	printf@width
  5161  0B76  01C5               	clrf	printf@width+1
  5162                           
  5163                           ;doprnt.c: 548: flag = 0;
  5164  0B77  01C3               	clrf	printf@flag
  5165                           
  5166                           ;doprnt.c: 551: switch(*f) {
  5167                           
  5168                           ;doprnt.c: 550: for(;;) {
  5169  0B78  2B7E               	goto	l4770
  5170  0B79                     l660:	
  5171                           ;doprnt.c: 579: case '0':
  5172                           
  5173                           
  5174                           ;doprnt.c: 580: flag |= 0x04;
  5175  0B79  1543               	bsf	printf@flag,2
  5176                           
  5177                           ;doprnt.c: 581: f++;
  5178  0B7A  3001               	movlw	1
  5179  0B7B  07B7               	addwf	printf@f,f
  5180  0B7C  3000               	movlw	0
  5181  0B7D  3DB8               	addwfc	printf@f+1,f
  5182  0B7E                     l4770:	
  5183                           ;doprnt.c: 584: }
  5184                           
  5185                           ;doprnt.c: 582: continue;
  5186                           
  5187  0B7E  0837               	movf	printf@f,w
  5188  0B7F  0084               	movwf	4
  5189  0B80  0838               	movf	printf@f+1,w
  5190  0B81  0085               	movwf	5
  5191  0B82  0800               	movf	0,w	;code access
  5192                           
  5193                           ; Switch size 1, requested type "space"
  5194                           ; Number of cases is 1, Range of values is 48 to 48
  5195                           ; switch strategies available:
  5196                           ; Name         Instructions Cycles
  5197                           ; simple_byte            4     3 (average)
  5198                           ; direct_byte           11     9 (fixed)
  5199                           ; jumptable            263     9 (fixed)
  5200                           ;	Chosen strategy is simple_byte
  5201  0B83  3A30               	xorlw	48	; case 48
  5202  0B84  1903               	skipnz
  5203  0B85  2B79               	goto	l660
  5204  0B86  2B87               	goto	l4772
  5205  0B87                     l4772:	
  5206                           ;doprnt.c: 586: }
  5207                           
  5208                           ;doprnt.c: 585: break;
  5209                           
  5210                           
  5211                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5212  0B87  0837               	movf	printf@f,w
  5213  0B88  0084               	movwf	4
  5214  0B89  0838               	movf	printf@f+1,w
  5215  0B8A  0085               	movwf	5
  5216  0B8B  0800               	movf	0,w	;code access
  5217  0B8C  3192  2224  318B   	fcall	_isdigit
  5218  0B8F  1C03               	btfss	3,0
  5219  0B90  2BC2               	goto	l4786
  5220                           
  5221                           ;doprnt.c: 598: width = 0;
  5222  0B91  0020               	movlb	0	; select bank0
  5223  0B92  01C4               	clrf	printf@width
  5224  0B93  01C5               	clrf	printf@width+1
  5225  0B94                     l4776:	
  5226                           ;doprnt.c: 599: do {
  5227                           
  5228                           
  5229                           ;doprnt.c: 600: width *= 10;
  5230  0B94  300A               	movlw	10
  5231  0B95  0020               	movlb	0	; select bank0
  5232  0B96  00A9               	movwf	___wmul@multiplier
  5233  0B97  3000               	movlw	0
  5234  0B98  00AA               	movwf	___wmul@multiplier+1
  5235  0B99  0845               	movf	printf@width+1,w
  5236  0B9A  00AC               	movwf	___wmul@multiplicand+1
  5237  0B9B  0844               	movf	printf@width,w
  5238  0B9C  00AB               	movwf	___wmul@multiplicand
  5239  0B9D  3192  22C2  318B   	fcall	___wmul
  5240  0BA0  0020               	movlb	0	; select bank0
  5241  0BA1  082A               	movf	?___wmul+1,w
  5242  0BA2  00C5               	movwf	printf@width+1
  5243  0BA3  0829               	movf	?___wmul,w
  5244  0BA4  00C4               	movwf	printf@width
  5245                           
  5246                           ;doprnt.c: 601: width += *f++ - '0';
  5247  0BA5  0837               	movf	printf@f,w
  5248  0BA6  0084               	movwf	4
  5249  0BA7  0838               	movf	printf@f+1,w
  5250  0BA8  0085               	movwf	5
  5251  0BA9  0800               	movf	0,w	;code access
  5252  0BAA  3ED0               	addlw	208
  5253  0BAB  00BB               	movwf	??_printf
  5254  0BAC  30FF               	movlw	255
  5255  0BAD  1803               	skipnc
  5256  0BAE  3000               	movlw	0
  5257  0BAF  00BC               	movwf	??_printf+1
  5258  0BB0  083B               	movf	??_printf,w
  5259  0BB1  07C4               	addwf	printf@width,f
  5260  0BB2  083C               	movf	??_printf+1,w
  5261  0BB3  3DC5               	addwfc	printf@width+1,f
  5262  0BB4  3001               	movlw	1
  5263  0BB5  07B7               	addwf	printf@f,f
  5264  0BB6  3000               	movlw	0
  5265  0BB7  3DB8               	addwfc	printf@f+1,f
  5266                           
  5267                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5268  0BB8  0837               	movf	printf@f,w
  5269  0BB9  0084               	movwf	4
  5270  0BBA  0838               	movf	printf@f+1,w
  5271  0BBB  0085               	movwf	5
  5272  0BBC  0800               	movf	0,w	;code access
  5273  0BBD  3192  2224  318B   	fcall	_isdigit
  5274  0BC0  1803               	btfsc	3,0
  5275  0BC1  2B94               	goto	l4776
  5276  0BC2                     l4786:	
  5277                           ;doprnt.c: 822: }
  5278                           
  5279                           ;doprnt.c: 813: continue;
  5280                           
  5281                           ;doprnt.c: 802: default:
  5282                           
  5283                           ;doprnt.c: 698: case 'i':
  5284                           ;doprnt.c: 699: break;
  5285                           
  5286                           ;doprnt.c: 697: case 'd':
  5287                           
  5288                           ;doprnt.c: 638: goto alldone;
  5289                           
  5290                           ;doprnt.c: 637: case 0:
  5291                           
  5292                           ;doprnt.c: 608: }
  5293                           ;doprnt.c: 635: switch(c = *f++) {
  5294                           
  5295  0BC2  0020               	movlb	0	; select bank0
  5296  0BC3  0838               	movf	printf@f+1,w
  5297  0BC4  00BC               	movwf	??_printf+1
  5298  0BC5  0837               	movf	printf@f,w
  5299  0BC6  00BB               	movwf	??_printf
  5300  0BC7  0AB7               	incf	printf@f,f
  5301  0BC8  1903               	skipnz
  5302  0BC9  0AB8               	incf	printf@f+1,f
  5303  0BCA  083B               	movf	??_printf,w
  5304  0BCB  0084               	movwf	4
  5305  0BCC  083C               	movf	??_printf+1,w
  5306  0BCD  0085               	movwf	5
  5307  0BCE  0800               	movf	0,w	;code access
  5308  0BCF  00C6               	movwf	printf@c
  5309                           
  5310                           ; Switch size 1, requested type "space"
  5311                           ; Number of cases is 3, Range of values is 0 to 105
  5312                           ; switch strategies available:
  5313                           ; Name         Instructions Cycles
  5314                           ; simple_byte           10     6 (average)
  5315                           ; direct_byte          218     6 (fixed)
  5316                           ; jumptable            260     6 (fixed)
  5317                           ;	Chosen strategy is simple_byte
  5318  0BD0  3A00               	xorlw	0	; case 0
  5319  0BD1  1903               	skipnz
  5320  0BD2  2CAD               	goto	l695
  5321  0BD3  3A64               	xorlw	100	; case 100
  5322  0BD4  1903               	skipnz
  5323  0BD5  2BDA               	goto	l4788
  5324  0BD6  3A0D               	xorlw	13	; case 105
  5325  0BD7  1903               	skipnz
  5326  0BD8  2BDA               	goto	l4788
  5327  0BD9  2B58               	goto	l4850
  5328  0BDA                     l4788:	
  5329                           
  5330                           ;doprnt.c: 1253: {
  5331                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5332  0BDA  0020               	movlb	0	; select bank0
  5333  0BDB  083F               	movf	printf@ap,w
  5334  0BDC  0086               	movwf	6
  5335  0BDD  0187               	clrf	7
  5336  0BDE  3F40               	moviw [0]fsr1
  5337  0BDF  00C1               	movwf	printf@val
  5338  0BE0  3F41               	moviw [1]fsr1
  5339  0BE1  00C2               	movwf	printf@val+1
  5340  0BE2  3002               	movlw	2
  5341  0BE3  00BB               	movwf	??_printf
  5342  0BE4  083B               	movf	??_printf,w
  5343  0BE5  07BF               	addwf	printf@ap,f
  5344                           
  5345                           ;doprnt.c: 1261: if((int)val < 0) {
  5346  0BE6  1FC2               	btfss	printf@val+1,7
  5347  0BE7  2BF1               	goto	l4798
  5348                           
  5349                           ;doprnt.c: 1262: flag |= 0x03;
  5350  0BE8  3003               	movlw	3
  5351  0BE9  00BB               	movwf	??_printf
  5352  0BEA  083B               	movf	??_printf,w
  5353  0BEB  04C3               	iorwf	printf@flag,f
  5354                           
  5355                           ;doprnt.c: 1263: val = -val;
  5356  0BEC  09C1               	comf	printf@val,f
  5357  0BED  09C2               	comf	printf@val+1,f
  5358  0BEE  0AC1               	incf	printf@val,f
  5359  0BEF  1903               	skipnz
  5360  0BF0  0AC2               	incf	printf@val+1,f
  5361  0BF1                     l4798:	
  5362                           
  5363                           ;doprnt.c: 1264: }
  5364                           ;doprnt.c: 1266: }
  5365                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5366  0BF1  01C6               	clrf	printf@c
  5367  0BF2  0AC6               	incf	printf@c,f
  5368  0BF3  3005               	movlw	5
  5369  0BF4  0646               	xorwf	printf@c,w
  5370  0BF5  1903               	btfsc	3,2
  5371  0BF6  2C16               	goto	l4810
  5372  0BF7                     l4804:	
  5373                           
  5374                           ;doprnt.c: 1306: if(val < dpowers[c])
  5375  0BF7  0846               	movf	printf@c,w
  5376  0BF8  00BB               	movwf	??_printf
  5377  0BF9  01BC               	clrf	??_printf+1
  5378  0BFA  35BB               	lslf	??_printf,f
  5379  0BFB  0DBC               	rlf	??_printf+1,f
  5380  0BFC  3006               	movlw	low (_dpowers| (0+32768))
  5381  0BFD  073B               	addwf	??_printf,w
  5382  0BFE  0084               	movwf	4
  5383  0BFF  3085               	movlw	high (_dpowers| (0+32768))
  5384  0C00  3D3C               	addwfc	??_printf+1,w
  5385  0C01  0085               	movwf	5
  5386  0C02  3F00               	moviw [0]fsr0
  5387  0C03  00BD               	movwf	??_printf+2
  5388  0C04  3F01               	moviw [1]fsr0
  5389  0C05  00BE               	movwf	??_printf+3
  5390  0C06  083E               	movf	??_printf+3,w
  5391  0C07  0242               	subwf	printf@val+1,w
  5392  0C08  1D03               	skipz
  5393  0C09  2C0C               	goto	u4915
  5394  0C0A  083D               	movf	??_printf+2,w
  5395  0C0B  0241               	subwf	printf@val,w
  5396  0C0C                     u4915:	
  5397  0C0C  1C03               	btfss	3,0
  5398  0C0D  2C16               	goto	l4810
  5399                           
  5400                           ;doprnt.c: 1307: break;
  5401  0C0E  3001               	movlw	1
  5402  0C0F  00BB               	movwf	??_printf
  5403  0C10  083B               	movf	??_printf,w
  5404  0C11  07C6               	addwf	printf@c,f
  5405  0C12  3005               	movlw	5
  5406  0C13  0646               	xorwf	printf@c,w
  5407  0C14  1D03               	btfss	3,2
  5408  0C15  2BF7               	goto	l4804
  5409  0C16                     l4810:	
  5410                           
  5411                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5412  0C16  0844               	movf	printf@width,w
  5413  0C17  0445               	iorwf	printf@width+1,w
  5414  0C18  1903               	btfsc	3,2
  5415  0C19  2C22               	goto	l678
  5416  0C1A  0843               	movf	printf@flag,w
  5417  0C1B  3903               	andlw	3
  5418  0C1C  1903               	btfsc	3,2
  5419  0C1D  2C22               	goto	l678
  5420                           
  5421                           ;doprnt.c: 1346: width--;
  5422  0C1E  30FF               	movlw	255
  5423  0C1F  07C4               	addwf	printf@width,f
  5424  0C20  30FF               	movlw	255
  5425  0C21  3DC5               	addwfc	printf@width+1,f
  5426  0C22                     l678:	
  5427                           
  5428                           ;doprnt.c: 1381: if(width > c)
  5429  0C22  0846               	movf	printf@c,w
  5430  0C23  00BB               	movwf	??_printf
  5431  0C24  01BC               	clrf	??_printf+1
  5432  0C25  1BBB               	btfsc	??_printf,7
  5433  0C26  03BC               	decf	??_printf+1,f
  5434  0C27  083C               	movf	??_printf+1,w
  5435  0C28  3A80               	xorlw	128
  5436  0C29  00BD               	movwf	??_printf+2
  5437  0C2A  0845               	movf	printf@width+1,w
  5438  0C2B  3A80               	xorlw	128
  5439  0C2C  023D               	subwf	??_printf+2,w
  5440  0C2D  1D03               	skipz
  5441  0C2E  2C31               	goto	u4955
  5442  0C2F  0844               	movf	printf@width,w
  5443  0C30  023B               	subwf	??_printf,w
  5444  0C31                     u4955:	
  5445  0C31  1803               	skipnc
  5446  0C32  2C3E               	goto	l4818
  5447                           
  5448                           ;doprnt.c: 1382: width -= c;
  5449  0C33  0020               	movlb	0	; select bank0
  5450  0C34  0846               	movf	printf@c,w
  5451  0C35  00BB               	movwf	??_printf
  5452  0C36  01BC               	clrf	??_printf+1
  5453  0C37  1BBB               	btfsc	??_printf,7
  5454  0C38  03BC               	decf	??_printf+1,f
  5455  0C39  083B               	movf	??_printf,w
  5456  0C3A  02C4               	subwf	printf@width,f
  5457  0C3B  083C               	movf	??_printf+1,w
  5458  0C3C  3BC5               	subwfb	printf@width+1,f
  5459  0C3D  2C41               	goto	l4820
  5460  0C3E                     l4818:	
  5461                           
  5462                           ;doprnt.c: 1383: else
  5463                           ;doprnt.c: 1384: width = 0;
  5464  0C3E  0020               	movlb	0	; select bank0
  5465  0C3F  01C4               	clrf	printf@width
  5466  0C40  01C5               	clrf	printf@width+1
  5467  0C41                     l4820:	
  5468                           
  5469                           ;doprnt.c: 1387: if(flag & 0x04) {
  5470  0C41  1D43               	btfss	printf@flag,2
  5471  0C42  2C5A               	goto	l4832
  5472                           
  5473                           ;doprnt.c: 1392: if(flag & 0x03)
  5474  0C43  0843               	movf	printf@flag,w
  5475  0C44  3903               	andlw	3
  5476  0C45  1903               	btfsc	3,2
  5477  0C46  2C4B               	goto	l4826
  5478                           
  5479                           ;doprnt.c: 1393: (putch('-') );
  5480  0C47  302D               	movlw	45
  5481  0C48  3191  21F9  318B   	fcall	_putch
  5482  0C4B                     l4826:	
  5483                           
  5484                           ;doprnt.c: 1415: if(width)
  5485  0C4B  0020               	movlb	0	; select bank0
  5486  0C4C                     L7:	
  5487  0C4C  0844               	movf	printf@width,w
  5488  0C4D  0445               	iorwf	printf@width+1,w
  5489  0C4E  1903               	btfsc	3,2
  5490  0C4F  2C73               	goto	l4842
  5491                           
  5492                           ;doprnt.c: 1417: (putch('0') );
  5493                           
  5494                           ;doprnt.c: 1416: do
  5495  0C50  3030               	movlw	48
  5496  0C51  3191  21F9  318B   	fcall	_putch
  5497                           
  5498                           ;doprnt.c: 1418: while(--width);
  5499  0C54  30FF               	movlw	255
  5500  0C55  0020               	movlb	0	; select bank0
  5501  0C56  07C4               	addwf	printf@width,f
  5502  0C57  30FF               	movlw	255
  5503  0C58  3DC5               	addwfc	printf@width+1,f
  5504  0C59  2C4C               	goto	L7
  5505  0C5A                     l4832:	
  5506                           ;doprnt.c: 1420: } else
  5507                           
  5508                           
  5509                           ;doprnt.c: 1422: {
  5510                           ;doprnt.c: 1424: if(width
  5511                           ;doprnt.c: 1428: )
  5512  0C5A  0844               	movf	printf@width,w
  5513  0C5B  0445               	iorwf	printf@width+1,w
  5514  0C5C  1903               	btfsc	3,2
  5515  0C5D  2C6B               	goto	l4838
  5516  0C5E                     l4834:	
  5517                           ;doprnt.c: 1429: do
  5518                           
  5519                           
  5520                           ;doprnt.c: 1430: (putch(' ') );
  5521  0C5E  3020               	movlw	32
  5522  0C5F  3191  21F9  318B   	fcall	_putch
  5523                           
  5524                           ;doprnt.c: 1431: while(--width);
  5525  0C62  30FF               	movlw	255
  5526  0C63  0020               	movlb	0	; select bank0
  5527  0C64  07C4               	addwf	printf@width,f
  5528  0C65  30FF               	movlw	255
  5529  0C66  3DC5               	addwfc	printf@width+1,f
  5530  0C67  0844               	movf	printf@width,w
  5531  0C68  0445               	iorwf	printf@width+1,w
  5532  0C69  1D03               	btfss	3,2
  5533  0C6A  2C5E               	goto	l4834
  5534  0C6B                     l4838:	
  5535                           
  5536                           ;doprnt.c: 1438: if(flag & 0x03)
  5537  0C6B  0843               	movf	printf@flag,w
  5538  0C6C  3903               	andlw	3
  5539  0C6D  1903               	btfsc	3,2
  5540  0C6E  2C73               	goto	l4842
  5541                           
  5542                           ;doprnt.c: 1439: (putch('-') );
  5543  0C6F  302D               	movlw	45
  5544  0C70  3191  21F9  318B   	fcall	_putch
  5545  0C73                     l4842:	
  5546                           
  5547                           ;doprnt.c: 1469: }
  5548                           ;doprnt.c: 1472: prec = c;
  5549  0C73  0020               	movlb	0	; select bank0
  5550  0C74  0846               	movf	printf@c,w
  5551  0C75  00BB               	movwf	??_printf
  5552  0C76  083B               	movf	??_printf,w
  5553  0C77  00C0               	movwf	printf@prec
  5554  0C78                     l4848:	
  5555                           ;doprnt.c: 1474: while(prec--) {
  5556                           
  5557  0C78  30FF               	movlw	255
  5558  0C79  0020               	movlb	0	; select bank0
  5559  0C7A  00BB               	movwf	??_printf
  5560  0C7B  083B               	movf	??_printf,w
  5561  0C7C  07C0               	addwf	printf@prec,f
  5562  0C7D  0A40               	incf	printf@prec,w
  5563  0C7E  1903               	btfsc	3,2
  5564  0C7F  2B58               	goto	l4850
  5565                           
  5566                           ;doprnt.c: 1478: {
  5567                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5568  0C80  300A               	movlw	10
  5569  0C81  00B1               	movwf	___lwmod@divisor
  5570  0C82  3000               	movlw	0
  5571  0C83  00B2               	movwf	___lwmod@divisor+1
  5572  0C84  0840               	movf	printf@prec,w
  5573  0C85  00BB               	movwf	??_printf
  5574  0C86  01BC               	clrf	??_printf+1
  5575  0C87  35BB               	lslf	??_printf,f
  5576  0C88  0DBC               	rlf	??_printf+1,f
  5577  0C89  3006               	movlw	low (_dpowers| (0+32768))
  5578  0C8A  073B               	addwf	??_printf,w
  5579  0C8B  0084               	movwf	4
  5580  0C8C  3085               	movlw	high (_dpowers| (0+32768))
  5581  0C8D  3D3C               	addwfc	??_printf+1,w
  5582  0C8E  0085               	movwf	5
  5583  0C8F  3F00               	moviw [0]fsr0
  5584  0C90  00A9               	movwf	___lwdiv@divisor
  5585  0C91  3F01               	moviw [1]fsr0
  5586  0C92  00AA               	movwf	___lwdiv@divisor+1
  5587  0C93  0842               	movf	printf@val+1,w
  5588  0C94  00AC               	movwf	___lwdiv@dividend+1
  5589  0C95  0841               	movf	printf@val,w
  5590  0C96  00AB               	movwf	___lwdiv@dividend
  5591  0C97  3194  2449  318B   	fcall	___lwdiv
  5592  0C9A  0020               	movlb	0	; select bank0
  5593  0C9B  082A               	movf	?___lwdiv+1,w
  5594  0C9C  00B4               	movwf	___lwmod@dividend+1
  5595  0C9D  0829               	movf	?___lwdiv,w
  5596  0C9E  00B3               	movwf	___lwmod@dividend
  5597  0C9F  3193  23BA  318B   	fcall	___lwmod
  5598  0CA2  0020               	movlb	0	; select bank0
  5599  0CA3  0831               	movf	?___lwmod,w
  5600  0CA4  3E30               	addlw	48
  5601  0CA5  00BD               	movwf	??_printf+2
  5602  0CA6  083D               	movf	??_printf+2,w
  5603  0CA7  00C6               	movwf	printf@c
  5604                           
  5605                           ;doprnt.c: 1523: }
  5606                           ;doprnt.c: 1524: (putch(c) );
  5607  0CA8  0846               	movf	printf@c,w
  5608  0CA9  3191  21F9  318B   	fcall	_putch
  5609  0CAC  2C78               	goto	l4848
  5610  0CAD                     l695:	
  5611                           ;doprnt.c: 1540: return 0;
  5612                           ;	Return value of _printf is never used
  5613                           
  5614                           ;doprnt.c: 1525: }
  5615                           ;doprnt.c: 1533: }
  5616                           ;doprnt.c: 1535: alldone:
  5617                           
  5618  0CAD  0008               	return
  5619  0CAE                     __end_of_printf:	
  5620                           
  5621                           	psect	text6
  5622  11F9                     __ptext6:	
  5623 ;; *************** function _putch *****************
  5624 ;; Defined at:
  5625 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\putch.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  c               1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  c               1    0[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    3
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_printf
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           
  5654                           ;psect for function _putch
  5655  11F9                     _putch:	
  5656                           
  5657                           ;incstack = 0
  5658                           ; Regs used in _putch: [wreg]
  5659  11F9  0008               	return
  5660  11FA                     __end_of_putch:	
  5661                           
  5662                           	psect	text7
  5663  1224                     __ptext7:	
  5664 ;; *************** function _isdigit *****************
  5665 ;; Defined at:
  5666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  c               1    wreg     unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  c               1   10[BANK0 ] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;		None               void
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;Total ram usage:        2 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    3
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_printf
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           
  5695                           ;psect for function _isdigit
  5696  1224                     _isdigit:	
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5700                           ;isdigit@c stored from wreg
  5701  1224  0020               	movlb	0	; select bank0
  5702  1225  00AA               	movwf	isdigit@c
  5703  1226  01A9               	clrf	_isdigit$1429
  5704  1227  303A               	movlw	58
  5705  1228  022A               	subwf	isdigit@c,w
  5706  1229  1803               	skipnc
  5707  122A  2A31               	goto	l4504
  5708  122B  3030               	movlw	48
  5709  122C  022A               	subwf	isdigit@c,w
  5710  122D  1C03               	skipc
  5711  122E  2A31               	goto	l4504
  5712  122F  01A9               	clrf	_isdigit$1429
  5713  1230  0AA9               	incf	_isdigit$1429,f
  5714  1231                     l4504:	
  5715  1231  0C29               	rrf	_isdigit$1429,w
  5716  1232  0008               	return
  5717  1233                     __end_of_isdigit:	
  5718                           
  5719                           	psect	text8
  5720  13BA                     __ptext8:	
  5721 ;; *************** function ___lwmod *****************
  5722 ;; Defined at:
  5723 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  divisor         2   17[BANK0 ] unsigned int 
  5726 ;;  dividend        2   19[BANK0 ] unsigned int 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  counter         1   22[BANK0 ] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  2   17[BANK0 ] unsigned int 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;Total ram usage:        6 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    3
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_printf
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function ___lwmod
  5754  13BA                     ___lwmod:	
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5758  13BA  0020               	movlb	0	; select bank0
  5759  13BB  0831               	movf	___lwmod@divisor,w
  5760  13BC  0432               	iorwf	___lwmod@divisor+1,w
  5761  13BD  1903               	btfsc	3,2
  5762  13BE  2BE2               	goto	l4598
  5763  13BF  01B6               	clrf	___lwmod@counter
  5764  13C0  0AB6               	incf	___lwmod@counter,f
  5765  13C1                     l4588:	
  5766  13C1  1BB2               	btfsc	___lwmod@divisor+1,7
  5767  13C2  2BCD               	goto	l4590
  5768  13C3  3001               	movlw	1
  5769  13C4                     u4755:	
  5770  13C4  35B1               	lslf	___lwmod@divisor,f
  5771  13C5  0DB2               	rlf	___lwmod@divisor+1,f
  5772  13C6  0B89               	decfsz	9,f
  5773  13C7  2BC4               	goto	u4755
  5774  13C8  3001               	movlw	1
  5775  13C9  00B5               	movwf	??___lwmod
  5776  13CA  0835               	movf	??___lwmod,w
  5777  13CB  07B6               	addwf	___lwmod@counter,f
  5778  13CC  2BC1               	goto	l4588
  5779  13CD                     l4590:	
  5780  13CD  0832               	movf	___lwmod@divisor+1,w
  5781  13CE  0234               	subwf	___lwmod@dividend+1,w
  5782  13CF  1D03               	skipz
  5783  13D0  2BD3               	goto	u4775
  5784  13D1  0831               	movf	___lwmod@divisor,w
  5785  13D2  0233               	subwf	___lwmod@dividend,w
  5786  13D3                     u4775:	
  5787  13D3  1C03               	skipc
  5788  13D4  2BD9               	goto	l4594
  5789  13D5  0831               	movf	___lwmod@divisor,w
  5790  13D6  02B3               	subwf	___lwmod@dividend,f
  5791  13D7  0832               	movf	___lwmod@divisor+1,w
  5792  13D8  3BB4               	subwfb	___lwmod@dividend+1,f
  5793  13D9                     l4594:	
  5794  13D9  3001               	movlw	1
  5795  13DA                     u4785:	
  5796  13DA  36B2               	lsrf	___lwmod@divisor+1,f
  5797  13DB  0CB1               	rrf	___lwmod@divisor,f
  5798  13DC  0B89               	decfsz	9,f
  5799  13DD  2BDA               	goto	u4785
  5800  13DE  3001               	movlw	1
  5801  13DF  02B6               	subwf	___lwmod@counter,f
  5802  13E0  1D03               	btfss	3,2
  5803  13E1  2BCD               	goto	l4590
  5804  13E2                     l4598:	
  5805  13E2  0834               	movf	___lwmod@dividend+1,w
  5806  13E3  00B2               	movwf	?___lwmod+1
  5807  13E4  0833               	movf	___lwmod@dividend,w
  5808  13E5  00B1               	movwf	?___lwmod
  5809  13E6  0008               	return
  5810  13E7                     __end_of___lwmod:	
  5811                           
  5812                           	psect	text9
  5813  1449                     __ptext9:	
  5814 ;; *************** function ___lwdiv *****************
  5815 ;; Defined at:
  5816 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  divisor         2    9[BANK0 ] unsigned int 
  5819 ;;  dividend        2   11[BANK0 ] unsigned int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  quotient        2   15[BANK0 ] unsigned int 
  5822 ;;  counter         1   14[BANK0 ] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  2    9[BANK0 ] unsigned int 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;Total ram usage:        8 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    3
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_printf
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function ___lwdiv
  5848  1449                     ___lwdiv:	
  5849                           
  5850                           ;incstack = 0
  5851                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5852  1449  0020               	movlb	0	; select bank0
  5853  144A  01AF               	clrf	___lwdiv@quotient
  5854  144B  01B0               	clrf	___lwdiv@quotient+1
  5855  144C  0829               	movf	___lwdiv@divisor,w
  5856  144D  042A               	iorwf	___lwdiv@divisor+1,w
  5857  144E  1903               	btfsc	3,2
  5858  144F  2C79               	goto	l4576
  5859  1450  01AE               	clrf	___lwdiv@counter
  5860  1451  0AAE               	incf	___lwdiv@counter,f
  5861  1452                     l4564:	
  5862  1452  1BAA               	btfsc	___lwdiv@divisor+1,7
  5863  1453  2C5E               	goto	l4566
  5864  1454  3001               	movlw	1
  5865  1455                     u4685:	
  5866  1455  35A9               	lslf	___lwdiv@divisor,f
  5867  1456  0DAA               	rlf	___lwdiv@divisor+1,f
  5868  1457  0B89               	decfsz	9,f
  5869  1458  2C55               	goto	u4685
  5870  1459  3001               	movlw	1
  5871  145A  00AD               	movwf	??___lwdiv
  5872  145B  082D               	movf	??___lwdiv,w
  5873  145C  07AE               	addwf	___lwdiv@counter,f
  5874  145D  2C52               	goto	l4564
  5875  145E                     l4566:	
  5876  145E  3001               	movlw	1
  5877  145F                     u4705:	
  5878  145F  35AF               	lslf	___lwdiv@quotient,f
  5879  1460  0DB0               	rlf	___lwdiv@quotient+1,f
  5880  1461  0B89               	decfsz	9,f
  5881  1462  2C5F               	goto	u4705
  5882  1463  082A               	movf	___lwdiv@divisor+1,w
  5883  1464  022C               	subwf	___lwdiv@dividend+1,w
  5884  1465  1D03               	skipz
  5885  1466  2C69               	goto	u4715
  5886  1467  0829               	movf	___lwdiv@divisor,w
  5887  1468  022B               	subwf	___lwdiv@dividend,w
  5888  1469                     u4715:	
  5889  1469  1C03               	skipc
  5890  146A  2C70               	goto	l4572
  5891  146B  0829               	movf	___lwdiv@divisor,w
  5892  146C  02AB               	subwf	___lwdiv@dividend,f
  5893  146D  082A               	movf	___lwdiv@divisor+1,w
  5894  146E  3BAC               	subwfb	___lwdiv@dividend+1,f
  5895  146F  142F               	bsf	___lwdiv@quotient,0
  5896  1470                     l4572:	
  5897  1470  3001               	movlw	1
  5898  1471                     u4725:	
  5899  1471  36AA               	lsrf	___lwdiv@divisor+1,f
  5900  1472  0CA9               	rrf	___lwdiv@divisor,f
  5901  1473  0B89               	decfsz	9,f
  5902  1474  2C71               	goto	u4725
  5903  1475  3001               	movlw	1
  5904  1476  02AE               	subwf	___lwdiv@counter,f
  5905  1477  1D03               	btfss	3,2
  5906  1478  2C5E               	goto	l4566
  5907  1479                     l4576:	
  5908  1479  0830               	movf	___lwdiv@quotient+1,w
  5909  147A  00AA               	movwf	?___lwdiv+1
  5910  147B  082F               	movf	___lwdiv@quotient,w
  5911  147C  00A9               	movwf	?___lwdiv
  5912  147D  0008               	return
  5913  147E                     __end_of___lwdiv:	
  5914                           
  5915                           	psect	text10
  5916  1243                     __ptext10:	
  5917 ;; *************** function ___bmul *****************
  5918 ;; Defined at:
  5919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  multiplier      1    wreg     unsigned char 
  5922 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  multiplier      1   12[BANK0 ] unsigned char 
  5925 ;;  product         1   11[BANK0 ] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      unsigned char 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5935 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;Total ram usage:        4 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    3
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_SetTime
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function ___bmul
  5951  1243                     ___bmul:	
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5955                           ;___bmul@multiplier stored from wreg
  5956  1243  0020               	movlb	0	; select bank0
  5957  1244  00AC               	movwf	___bmul@multiplier
  5958  1245  01AB               	clrf	___bmul@product
  5959  1246                     l4924:	
  5960  1246  1C2C               	btfss	___bmul@multiplier,0
  5961  1247  2A4C               	goto	l4928
  5962  1248  0829               	movf	___bmul@multiplicand,w
  5963  1249  00AA               	movwf	??___bmul
  5964  124A  082A               	movf	??___bmul,w
  5965  124B  07AB               	addwf	___bmul@product,f
  5966  124C                     l4928:	
  5967  124C  1003               	clrc
  5968  124D  0DA9               	rlf	___bmul@multiplicand,f
  5969  124E  1003               	clrc
  5970  124F  0CAC               	rrf	___bmul@multiplier,f
  5971  1250  082C               	movf	___bmul@multiplier,w
  5972  1251  1D03               	btfss	3,2
  5973  1252  2A46               	goto	l4924
  5974  1253  082B               	movf	___bmul@product,w
  5975  1254  0008               	return
  5976  1255                     __end_of___bmul:	
  5977                           
  5978                           	psect	text11
  5979  1268                     __ptext11:	
  5980 ;; *************** function _SW3_pressed *****************
  5981 ;; Defined at:
  5982 ;;		line 479 in file "user.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  SW3_press       1   10[BANK0 ] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;Total ram usage:        2 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    3
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_SetTime
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _SW3_pressed
  6012  1268                     _SW3_pressed:	
  6013                           
  6014                           ;user.c: 481: unsigned char SW3_press = 1;
  6015                           
  6016                           ;incstack = 0
  6017                           ; Regs used in _SW3_pressed: [wreg+status,2+status,0]
  6018  1268  0020               	movlb	0	; select bank0
  6019  1269  01AA               	clrf	SW3_pressed@SW3_press
  6020  126A  0AAA               	incf	SW3_pressed@SW3_press,f
  6021                           
  6022                           ;user.c: 483: SW3_press = PORTB & 0x08;
  6023  126B  080D               	movf	13,w	;volatile
  6024  126C  3908               	andlw	8
  6025  126D  00A9               	movwf	??_SW3_pressed
  6026  126E  0829               	movf	??_SW3_pressed,w
  6027  126F  00AA               	movwf	SW3_pressed@SW3_press
  6028                           
  6029                           ;user.c: 484: if (SW3_press)
  6030  1270  082A               	movf	SW3_pressed@SW3_press,w
  6031  1271  1903               	btfsc	3,2
  6032  1272  2A75               	goto	l168
  6033                           
  6034                           ;user.c: 485: return 0;
  6035  1273  3000               	movlw	0
  6036  1274  0008               	return
  6037  1275                     l168:	
  6038                           ;user.c: 486: else
  6039                           ;user.c: 487: {
  6040                           ;user.c: 488: while(!(PORTB & 0x08));
  6041                           
  6042  1275  1D8D               	btfss	13,3	;volatile
  6043  1276  2A75               	goto	l168
  6044                           
  6045                           ;user.c: 489: IOCBFbits.IOCBF3 = 0;
  6046  1277  0027               	movlb	7	; select bank7
  6047  1278  1196               	bcf	22,3	;volatile
  6048                           
  6049                           ;user.c: 490: return 1;
  6050  1279  3001               	movlw	1
  6051  127A  0008               	return
  6052  127B                     __end_of_SW3_pressed:	
  6053                           
  6054                           	psect	text12
  6055  1255                     __ptext12:	
  6056 ;; *************** function _SW1_pressed *****************
  6057 ;; Defined at:
  6058 ;;		line 447 in file "user.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  SW1_press       1   10[BANK0 ] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;Total ram usage:        2 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    3
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_SetTime
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _SW1_pressed
  6088  1255                     _SW1_pressed:	
  6089                           
  6090                           ;user.c: 449: unsigned char SW1_press = 1;
  6091                           
  6092                           ;incstack = 0
  6093                           ; Regs used in _SW1_pressed: [wreg+status,2+status,0]
  6094  1255  0020               	movlb	0	; select bank0
  6095  1256  01AA               	clrf	SW1_pressed@SW1_press
  6096  1257  0AAA               	incf	SW1_pressed@SW1_press,f
  6097                           
  6098                           ;user.c: 451: SW1_press = PORTB & 0x10;
  6099  1258  080D               	movf	13,w	;volatile
  6100  1259  3910               	andlw	16
  6101  125A  00A9               	movwf	??_SW1_pressed
  6102  125B  0829               	movf	??_SW1_pressed,w
  6103  125C  00AA               	movwf	SW1_pressed@SW1_press
  6104                           
  6105                           ;user.c: 452: if (SW1_press)
  6106  125D  082A               	movf	SW1_pressed@SW1_press,w
  6107  125E  1903               	btfsc	3,2
  6108  125F  2A62               	goto	l160
  6109                           
  6110                           ;user.c: 453: return 0;
  6111  1260  3000               	movlw	0
  6112  1261  0008               	return
  6113  1262                     l160:	
  6114                           ;user.c: 454: else
  6115                           ;user.c: 455: {
  6116                           ;user.c: 457: while(!(PORTB & 0x10));
  6117                           
  6118  1262  1E0D               	btfss	13,4	;volatile
  6119  1263  2A62               	goto	l160
  6120                           
  6121                           ;user.c: 458: IOCBFbits.IOCBF4 = 0;
  6122  1264  0027               	movlb	7	; select bank7
  6123  1265  1216               	bcf	22,4	;volatile
  6124                           
  6125                           ;user.c: 459: return 1;
  6126  1266  3001               	movlw	1
  6127  1267  0008               	return
  6128  1268                     __end_of_SW1_pressed:	
  6129                           
  6130                           	psect	text13
  6131  0CAE                     __ptext13:	
  6132 ;; *************** function _SenseTestStrip *****************
  6133 ;; Defined at:
  6134 ;;		line 282 in file "glucose_meter_main.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  temp_adc        2   30[BANK0 ] int 
  6139 ;;  index           1   32[BANK0 ] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0, pclath, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;Total ram usage:        7 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    6
  6156 ;; This function calls:
  6157 ;;		_EnterDeepSleep
  6158 ;;		_InitADC
  6159 ;;		_LCDClear
  6160 ;;		_gotoXY
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           
  6167                           ;psect for function _SenseTestStrip
  6168  0CAE                     _SenseTestStrip:	
  6169                           
  6170                           ;glucose_meter_main.c: 284: unsigned char index=0;
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _SenseTestStrip: [wreg+status,2+status,0+pclath+cstack]
  6174  0CAE  0020               	movlb	0	; select bank0
  6175  0CAF  01C0               	clrf	SenseTestStrip@index
  6176                           
  6177                           ;glucose_meter_main.c: 285: int temp_adc=0;
  6178  0CB0  01BE               	clrf	SenseTestStrip@temp_adc
  6179  0CB1  01BF               	clrf	SenseTestStrip@temp_adc+1
  6180                           
  6181                           ;glucose_meter_main.c: 287: gSenseTestStrip = PORTB & 0x01;
  6182  0CB2  080D               	movf	13,w	;volatile
  6183  0CB3  3901               	andlw	1
  6184  0CB4  00BA               	movwf	??_SenseTestStrip
  6185  0CB5  083A               	movf	??_SenseTestStrip,w
  6186  0CB6  00DE               	movwf	_gSenseTestStrip
  6187                           
  6188                           ;glucose_meter_main.c: 289: if((gSenseTestStrip == 0x00 ) & (gStripInserted == 0))
  6189  0CB7  085E               	movf	_gSenseTestStrip,w
  6190  0CB8  1D03               	btfss	3,2
  6191  0CB9  2D81               	goto	l5456
  6192  0CBA  087B               	movf	_gStripInserted,w
  6193  0CBB  1D03               	btfss	3,2
  6194  0CBC  2D81               	goto	l5456
  6195                           
  6196                           ;glucose_meter_main.c: 290: {
  6197                           ;glucose_meter_main.c: 291: InitADC();
  6198  0CBD  3188  2000  318C   	fcall	_InitADC
  6199                           
  6200                           ;glucose_meter_main.c: 292: INTCONbits.PEIE = 1;
  6201  0CC0  170B               	bsf	11,6	;volatile
  6202                           
  6203                           ;glucose_meter_main.c: 293: PIR1bits.ADIF = 0;
  6204  0CC1  0020               	movlb	0	; select bank0
  6205  0CC2  1311               	bcf	17,6	;volatile
  6206                           
  6207                           ;glucose_meter_main.c: 294: PIE1bits.ADIE=0;
  6208  0CC3  0021               	movlb	1	; select bank1
  6209  0CC4  1311               	bcf	17,6	;volatile
  6210                           
  6211                           ;glucose_meter_main.c: 295: { ADCON0 = 0x01 | (0 << 2); };
  6212  0CC5  3001               	movlw	1
  6213  0CC6  009D               	movwf	29	;volatile
  6214                           
  6215                           ;glucose_meter_main.c: 296: for (index=0; index<8; index++)
  6216  0CC7  0020               	movlb	0	; select bank0
  6217  0CC8  01C0               	clrf	SenseTestStrip@index
  6218  0CC9  3008               	movlw	8
  6219  0CCA  0240               	subwf	SenseTestStrip@index,w
  6220  0CCB  1803               	btfsc	3,0
  6221  0CCC  2D03               	goto	l5422
  6222  0CCD                     l5404:	
  6223                           
  6224                           ;glucose_meter_main.c: 297: {
  6225                           ;glucose_meter_main.c: 298: _delay((unsigned long)((200)*(8000000/4000000.0)));
  6226  0CCD  3085               	movlw	133
  6227  0CCE  00BA               	movwf	??_SenseTestStrip
  6228  0CCF                     u6287:	
  6229  0CCF  0BBA               	decfsz	??_SenseTestStrip,f
  6230  0CD0  2CCF               	goto	u6287
  6231                           
  6232                           ;glucose_meter_main.c: 299: { GO_nDONE = 1; while(GO_nDONE); if(ADRESH > 127){ADRESH = 0
      +                          ;ADRESL = 0;}};
  6233  0CD1  0021               	movlb	1	; select bank1
  6234  0CD2  149D               	bsf	29,1	;volatile
  6235  0CD3                     l518:	
  6236  0CD3  189D               	btfsc	29,1	;volatile
  6237  0CD4  2CD3               	goto	l518
  6238  0CD5  3080               	movlw	128
  6239  0CD6  021C               	subwf	28,w	;volatile
  6240  0CD7  1C03               	skipc
  6241  0CD8  2CDB               	goto	l5412
  6242  0CD9  019C               	clrf	28	;volatile
  6243  0CDA  019B               	clrf	27	;volatile
  6244  0CDB                     l5412:	
  6245                           
  6246                           ;glucose_meter_main.c: 300: gReadData = ADRESL;
  6247  0CDB  081B               	movf	27,w	;volatile
  6248  0CDC  0020               	movlb	0	; select bank0
  6249  0CDD  00BA               	movwf	??_SenseTestStrip
  6250  0CDE  01BB               	clrf	??_SenseTestStrip+1
  6251  0CDF  083A               	movf	??_SenseTestStrip,w
  6252  0CE0  0021               	movlb	1	; select bank1
  6253  0CE1  00B4               	movwf	_gReadData^(0+128)
  6254  0CE2  0020               	movlb	0	; select bank0
  6255  0CE3  083B               	movf	??_SenseTestStrip+1,w
  6256  0CE4  0021               	movlb	1	; select bank1
  6257  0CE5  00B5               	movwf	(_gReadData+1)^(0+128)
  6258                           
  6259                           ;glucose_meter_main.c: 301: gReadData += ADRESH << 8;
  6260  0CE6  081C               	movf	28,w	;volatile
  6261  0CE7  0020               	movlb	0	; select bank0
  6262  0CE8  00BA               	movwf	??_SenseTestStrip
  6263  0CE9  01BB               	clrf	??_SenseTestStrip+1
  6264  0CEA  083A               	movf	??_SenseTestStrip,w
  6265  0CEB  00BB               	movwf	??_SenseTestStrip+1
  6266  0CEC  01BA               	clrf	??_SenseTestStrip
  6267  0CED  083A               	movf	??_SenseTestStrip,w
  6268  0CEE  0021               	movlb	1	; select bank1
  6269  0CEF  07B4               	addwf	_gReadData^(0+128),f
  6270  0CF0  0020               	movlb	0	; select bank0
  6271  0CF1  083B               	movf	??_SenseTestStrip+1,w
  6272  0CF2  0021               	movlb	1	; select bank1
  6273  0CF3  3DB5               	addwfc	(_gReadData+1)^(0+128),f
  6274                           
  6275                           ;glucose_meter_main.c: 302: temp_adc += gReadData;
  6276  0CF4  0834               	movf	_gReadData^(0+128),w
  6277  0CF5  0020               	movlb	0	; select bank0
  6278  0CF6  07BE               	addwf	SenseTestStrip@temp_adc,f
  6279  0CF7  0021               	movlb	1	; select bank1
  6280  0CF8  0835               	movf	(_gReadData+1)^(0+128),w
  6281  0CF9  0020               	movlb	0	; select bank0
  6282  0CFA  3DBF               	addwfc	SenseTestStrip@temp_adc+1,f
  6283  0CFB  3001               	movlw	1
  6284  0CFC  00BA               	movwf	??_SenseTestStrip
  6285  0CFD  083A               	movf	??_SenseTestStrip,w
  6286  0CFE  07C0               	addwf	SenseTestStrip@index,f
  6287  0CFF  3008               	movlw	8
  6288  0D00  0240               	subwf	SenseTestStrip@index,w
  6289  0D01  1C03               	skipc
  6290  0D02  2CCD               	goto	l5404
  6291  0D03                     l5422:	
  6292                           
  6293                           ;glucose_meter_main.c: 303: }
  6294                           ;glucose_meter_main.c: 304: temp_adc= temp_adc >>3;
  6295  0D03  083F               	movf	SenseTestStrip@temp_adc+1,w
  6296  0D04  00BB               	movwf	??_SenseTestStrip+1
  6297  0D05  083E               	movf	SenseTestStrip@temp_adc,w
  6298  0D06  00BA               	movwf	??_SenseTestStrip
  6299  0D07  0D3B               	rlf	??_SenseTestStrip+1,w
  6300  0D08  0CBB               	rrf	??_SenseTestStrip+1,f
  6301  0D09  0CBA               	rrf	??_SenseTestStrip,f
  6302  0D0A  0D3B               	rlf	??_SenseTestStrip+1,w
  6303  0D0B  0CBB               	rrf	??_SenseTestStrip+1,f
  6304  0D0C  0CBA               	rrf	??_SenseTestStrip,f
  6305  0D0D  0D3B               	rlf	??_SenseTestStrip+1,w
  6306  0D0E  0CBB               	rrf	??_SenseTestStrip+1,f
  6307  0D0F  0CBA               	rrf	??_SenseTestStrip,f
  6308  0D10  083A               	movf	??_SenseTestStrip,w
  6309  0D11  00BE               	movwf	SenseTestStrip@temp_adc
  6310  0D12  083B               	movf	??_SenseTestStrip+1,w
  6311  0D13  00BF               	movwf	SenseTestStrip@temp_adc+1
  6312                           
  6313                           ;glucose_meter_main.c: 306: if(temp_adc >= 920)
  6314  0D14  083F               	movf	SenseTestStrip@temp_adc+1,w
  6315  0D15  3A80               	xorlw	128
  6316  0D16  00BA               	movwf	??_SenseTestStrip
  6317  0D17  3083               	movlw	131
  6318  0D18  023A               	subwf	??_SenseTestStrip,w
  6319  0D19  1D03               	skipz
  6320  0D1A  2D1D               	goto	u5795
  6321  0D1B  3098               	movlw	152
  6322  0D1C  023E               	subwf	SenseTestStrip@temp_adc,w
  6323  0D1D                     u5795:	
  6324  0D1D  1C03               	skipc
  6325  0D1E  2D5B               	goto	l5438
  6326                           
  6327                           ;glucose_meter_main.c: 307: {
  6328                           ;glucose_meter_main.c: 308: PIR1bits.ADIF = 0;
  6329  0D1F  0020               	movlb	0	; select bank0
  6330  0D20  1311               	bcf	17,6	;volatile
  6331                           
  6332                           ;glucose_meter_main.c: 309: PIE1bits.ADIE=1;
  6333  0D21  0021               	movlb	1	; select bank1
  6334  0D22  1711               	bsf	17,6	;volatile
  6335                           
  6336                           ;glucose_meter_main.c: 310: LCDClear();
  6337  0D23  3193  2364  318C   	fcall	_LCDClear
  6338                           
  6339                           ;glucose_meter_main.c: 312: gotoXY(0,1);
  6340  0D26  0020               	movlb	0	; select bank0
  6341  0D27  01B4               	clrf	gotoXY@y
  6342  0D28  0AB4               	incf	gotoXY@y,f
  6343  0D29  3000               	movlw	0
  6344  0D2A  3192  227B  318C   	fcall	_gotoXY
  6345                           
  6346                           ;glucose_meter_main.c: 314: gtimeOutCount = 60000;
  6347  0D2D  3000               	movlw	0
  6348  0D2E  0021               	movlb	1	; select bank1
  6349  0D2F  00DB               	movwf	(_gtimeOutCount+3)^(0+128)
  6350  0D30  3000               	movlw	0
  6351  0D31  00DA               	movwf	(_gtimeOutCount+2)^(0+128)
  6352  0D32  30EA               	movlw	234
  6353  0D33  00D9               	movwf	(_gtimeOutCount+1)^(0+128)
  6354  0D34  3060               	movlw	96
  6355  0D35  00D8               	movwf	_gtimeOutCount^(0+128)
  6356  0D36                     l523:	
  6357                           ;glucose_meter_main.c: 315: while(gtimeOutCount!=0)gtimeOutCount--;
  6358                           
  6359  0D36  085B               	movf	(_gtimeOutCount+3)^(0+128),w
  6360  0D37  045A               	iorwf	(_gtimeOutCount+2)^(0+128),w
  6361  0D38  0459               	iorwf	(_gtimeOutCount+1)^(0+128),w
  6362  0D39  0458               	iorwf	_gtimeOutCount^(0+128),w
  6363  0D3A  1903               	btfsc	3,2
  6364  0D3B  2D55               	goto	l5432
  6365  0D3C  3001               	movlw	1
  6366  0D3D  0020               	movlb	0	; select bank0
  6367  0D3E  00BA               	movwf	??_SenseTestStrip
  6368  0D3F  3000               	movlw	0
  6369  0D40  00BB               	movwf	??_SenseTestStrip+1
  6370  0D41  3000               	movlw	0
  6371  0D42  00BC               	movwf	??_SenseTestStrip+2
  6372  0D43  3000               	movlw	0
  6373  0D44  00BD               	movwf	??_SenseTestStrip+3
  6374  0D45  083A               	movf	??_SenseTestStrip,w
  6375  0D46  0021               	movlb	1	; select bank1
  6376  0D47  02D8               	subwf	_gtimeOutCount^(0+128),f
  6377  0D48  0020               	movlb	0	; select bank0
  6378  0D49  083B               	movf	??_SenseTestStrip+1,w
  6379  0D4A  0021               	movlb	1	; select bank1
  6380  0D4B  3BD9               	subwfb	(_gtimeOutCount+1)^(0+128),f
  6381  0D4C  0020               	movlb	0	; select bank0
  6382  0D4D  083C               	movf	??_SenseTestStrip+2,w
  6383  0D4E  0021               	movlb	1	; select bank1
  6384  0D4F  3BDA               	subwfb	(_gtimeOutCount+2)^(0+128),f
  6385  0D50  0020               	movlb	0	; select bank0
  6386  0D51  083D               	movf	??_SenseTestStrip+3,w
  6387  0D52  0021               	movlb	1	; select bank1
  6388  0D53  3BDB               	subwfb	(_gtimeOutCount+3)^(0+128),f
  6389  0D54  2D36               	goto	l523
  6390  0D55                     l5432:	
  6391                           
  6392                           ;glucose_meter_main.c: 316: EnterDeepSleep();
  6393  0D55  3194  2416  318C   	fcall	_EnterDeepSleep
  6394                           
  6395                           ;glucose_meter_main.c: 317: __nop();
  6396  0D58  0000               	nop
  6397                           
  6398                           ;glucose_meter_main.c: 318: __nop();
  6399  0D59  0000               	nop
  6400                           
  6401                           ;glucose_meter_main.c: 319: }
  6402  0D5A  2D81               	goto	l5456
  6403  0D5B                     l5438:	
  6404                           
  6405                           ;glucose_meter_main.c: 320: else
  6406                           ;glucose_meter_main.c: 321: {
  6407                           ;glucose_meter_main.c: 322: LCDClear();
  6408  0D5B  3193  2364  318C   	fcall	_LCDClear
  6409                           
  6410                           ;glucose_meter_main.c: 324: gotoXY(0,1);
  6411  0D5E  0020               	movlb	0	; select bank0
  6412  0D5F  01B4               	clrf	gotoXY@y
  6413  0D60  0AB4               	incf	gotoXY@y,f
  6414  0D61  3000               	movlw	0
  6415  0D62  3192  227B  318C   	fcall	_gotoXY
  6416                           
  6417                           ;glucose_meter_main.c: 326: gStripInserted = 1;
  6418  0D65  01FB               	clrf	_gStripInserted
  6419  0D66  0AFB               	incf	_gStripInserted,f
  6420                           
  6421                           ;glucose_meter_main.c: 327: gStripRemoved = 0;
  6422  0D67  0020               	movlb	0	; select bank0
  6423  0D68  01E0               	clrf	_gStripRemoved
  6424                           
  6425                           ;glucose_meter_main.c: 328: gcountIdleTime = 120000;
  6426  0D69  3000               	movlw	0
  6427  0D6A  0021               	movlb	1	; select bank1
  6428  0D6B  00D7               	movwf	(_gcountIdleTime+3)^(0+128)
  6429  0D6C  3001               	movlw	1
  6430  0D6D  00D6               	movwf	(_gcountIdleTime+2)^(0+128)
  6431  0D6E  30D4               	movlw	212
  6432  0D6F  00D5               	movwf	(_gcountIdleTime+1)^(0+128)
  6433  0D70  30C0               	movlw	192
  6434  0D71  00D4               	movwf	_gcountIdleTime^(0+128)
  6435                           
  6436                           ;glucose_meter_main.c: 329: gStripIdleTime = 250000;
  6437  0D72  3000               	movlw	0
  6438  0D73  00D3               	movwf	(_gStripIdleTime+3)^(0+128)
  6439  0D74  3003               	movlw	3
  6440  0D75  00D2               	movwf	(_gStripIdleTime+2)^(0+128)
  6441  0D76  30D0               	movlw	208
  6442  0D77  00D1               	movwf	(_gStripIdleTime+1)^(0+128)
  6443  0D78  3090               	movlw	144
  6444  0D79  00D0               	movwf	_gStripIdleTime^(0+128)
  6445                           
  6446                           ;glucose_meter_main.c: 330: PIR1bits.ADIF = 0;
  6447  0D7A  0020               	movlb	0	; select bank0
  6448  0D7B  1311               	bcf	17,6	;volatile
  6449                           
  6450                           ;glucose_meter_main.c: 331: PIE1bits.ADIE=1;
  6451  0D7C  0021               	movlb	1	; select bank1
  6452  0D7D  1711               	bsf	17,6	;volatile
  6453                           
  6454                           ;glucose_meter_main.c: 332: ADCON0bits.ADGO = 1;
  6455  0D7E  149D               	bsf	29,1	;volatile
  6456                           
  6457                           ;glucose_meter_main.c: 333: LATB5 = 0;
  6458  0D7F  0022               	movlb	2	; select bank2
  6459  0D80  128D               	bcf	13,5	;volatile
  6460  0D81                     l5456:	
  6461                           
  6462                           ;glucose_meter_main.c: 334: }
  6463                           ;glucose_meter_main.c: 335: }
  6464                           ;glucose_meter_main.c: 337: if((gSenseTestStrip == 0x01) & (gStripRemoved == 0))
  6465  0D81  0020               	movlb	0	; select bank0
  6466  0D82  035E               	decf	_gSenseTestStrip,w
  6467  0D83  1D03               	btfss	3,2
  6468  0D84  2D98               	goto	l5468
  6469  0D85  0860               	movf	_gStripRemoved,w
  6470  0D86  1D03               	btfss	3,2
  6471  0D87  2D98               	goto	l5468
  6472                           
  6473                           ;glucose_meter_main.c: 338: {
  6474                           ;glucose_meter_main.c: 339: LCDClear();
  6475  0D88  3193  2364  318C   	fcall	_LCDClear
  6476                           
  6477                           ;glucose_meter_main.c: 341: gotoXY(0,1);
  6478  0D8B  0020               	movlb	0	; select bank0
  6479  0D8C  01B4               	clrf	gotoXY@y
  6480  0D8D  0AB4               	incf	gotoXY@y,f
  6481  0D8E  3000               	movlw	0
  6482  0D8F  3192  227B  318C   	fcall	_gotoXY
  6483                           
  6484                           ;glucose_meter_main.c: 343: gStripRemoved = 1;
  6485  0D92  0020               	movlb	0	; select bank0
  6486  0D93  01E0               	clrf	_gStripRemoved
  6487  0D94  0AE0               	incf	_gStripRemoved,f
  6488                           
  6489                           ;glucose_meter_main.c: 344: gStripInserted = 0;
  6490  0D95  01FB               	clrf	_gStripInserted
  6491                           
  6492                           ;glucose_meter_main.c: 345: LATB5 = 0;
  6493  0D96  0022               	movlb	2	; select bank2
  6494  0D97  128D               	bcf	13,5	;volatile
  6495  0D98                     l5468:	
  6496                           
  6497                           ;glucose_meter_main.c: 346: }
  6498                           ;glucose_meter_main.c: 348: if((gSenseTestStrip == 0x01) & (gStripRemoved == 1))
  6499  0D98  0020               	movlb	0	; select bank0
  6500  0D99  035E               	decf	_gSenseTestStrip,w
  6501  0D9A  1D03               	btfss	3,2
  6502  0D9B  0008               	return
  6503  0D9C  0360               	decf	_gStripRemoved,w
  6504  0D9D  1D03               	btfss	3,2
  6505  0D9E  0008               	return
  6506                           
  6507                           ;glucose_meter_main.c: 349: {
  6508                           ;glucose_meter_main.c: 350: if(gStripIdleTime <= 1)
  6509  0D9F  0021               	movlb	1	; select bank1
  6510  0DA0  0853               	movf	(_gStripIdleTime+3)^(0+128),w
  6511  0DA1  1D03               	btfss	3,2
  6512  0DA2  2DB6               	goto	l5476
  6513  0DA3  0852               	movf	(_gStripIdleTime+2)^(0+128),w
  6514  0DA4  1D03               	btfss	3,2
  6515  0DA5  2DB6               	goto	l5476
  6516  0DA6  0851               	movf	(_gStripIdleTime+1)^(0+128),w
  6517  0DA7  1D03               	btfss	3,2
  6518  0DA8  2DB6               	goto	l5476
  6519  0DA9  3002               	movlw	2
  6520  0DAA  0250               	subwf	_gStripIdleTime^(0+128),w
  6521  0DAB  1803               	btfsc	3,0
  6522  0DAC  2DB6               	goto	l5476
  6523                           
  6524                           ;glucose_meter_main.c: 351: gStripIdleTime = 1;
  6525  0DAD  3000               	movlw	0
  6526  0DAE  00D3               	movwf	(_gStripIdleTime+3)^(0+128)
  6527  0DAF  3000               	movlw	0
  6528  0DB0  00D2               	movwf	(_gStripIdleTime+2)^(0+128)
  6529  0DB1  3000               	movlw	0
  6530  0DB2  00D1               	movwf	(_gStripIdleTime+1)^(0+128)
  6531  0DB3  3001               	movlw	1
  6532  0DB4  00D0               	movwf	_gStripIdleTime^(0+128)
  6533  0DB5  2DCE               	goto	l5478
  6534  0DB6                     l5476:	
  6535                           
  6536                           ;glucose_meter_main.c: 352: else
  6537                           ;glucose_meter_main.c: 353: gStripIdleTime--;
  6538  0DB6  3001               	movlw	1
  6539  0DB7  0020               	movlb	0	; select bank0
  6540  0DB8  00BA               	movwf	??_SenseTestStrip
  6541  0DB9  3000               	movlw	0
  6542  0DBA  00BB               	movwf	??_SenseTestStrip+1
  6543  0DBB  3000               	movlw	0
  6544  0DBC  00BC               	movwf	??_SenseTestStrip+2
  6545  0DBD  3000               	movlw	0
  6546  0DBE  00BD               	movwf	??_SenseTestStrip+3
  6547  0DBF  083A               	movf	??_SenseTestStrip,w
  6548  0DC0  0021               	movlb	1	; select bank1
  6549  0DC1  02D0               	subwf	_gStripIdleTime^(0+128),f
  6550  0DC2  0020               	movlb	0	; select bank0
  6551  0DC3  083B               	movf	??_SenseTestStrip+1,w
  6552  0DC4  0021               	movlb	1	; select bank1
  6553  0DC5  3BD1               	subwfb	(_gStripIdleTime+1)^(0+128),f
  6554  0DC6  0020               	movlb	0	; select bank0
  6555  0DC7  083C               	movf	??_SenseTestStrip+2,w
  6556  0DC8  0021               	movlb	1	; select bank1
  6557  0DC9  3BD2               	subwfb	(_gStripIdleTime+2)^(0+128),f
  6558  0DCA  0020               	movlb	0	; select bank0
  6559  0DCB  083D               	movf	??_SenseTestStrip+3,w
  6560  0DCC  0021               	movlb	1	; select bank1
  6561  0DCD  3BD3               	subwfb	(_gStripIdleTime+3)^(0+128),f
  6562  0DCE                     l5478:	
  6563                           
  6564                           ;glucose_meter_main.c: 355: if(gStripIdleTime == 1)
  6565  0DCE  0350               	decf	_gStripIdleTime^(0+128),w
  6566  0DCF  0451               	iorwf	(_gStripIdleTime+1)^(0+128),w
  6567  0DD0  0452               	iorwf	(_gStripIdleTime+2)^(0+128),w
  6568  0DD1  0453               	iorwf	(_gStripIdleTime+3)^(0+128),w
  6569  0DD2  1D03               	btfss	3,2
  6570  0DD3  0008               	return
  6571                           
  6572                           ;glucose_meter_main.c: 356: {
  6573                           ;glucose_meter_main.c: 357: LCDClear();
  6574  0DD4  3193  2364  318C   	fcall	_LCDClear
  6575                           
  6576                           ;glucose_meter_main.c: 359: gotoXY(0,1);
  6577  0DD7  0020               	movlb	0	; select bank0
  6578  0DD8  01B4               	clrf	gotoXY@y
  6579  0DD9  0AB4               	incf	gotoXY@y,f
  6580  0DDA  3000               	movlw	0
  6581  0DDB  3192  227B  318C   	fcall	_gotoXY
  6582                           
  6583                           ;glucose_meter_main.c: 361: gtimeOutCount = 60000;
  6584  0DDE  3000               	movlw	0
  6585  0DDF  0021               	movlb	1	; select bank1
  6586  0DE0  00DB               	movwf	(_gtimeOutCount+3)^(0+128)
  6587  0DE1  3000               	movlw	0
  6588  0DE2  00DA               	movwf	(_gtimeOutCount+2)^(0+128)
  6589  0DE3  30EA               	movlw	234
  6590  0DE4  00D9               	movwf	(_gtimeOutCount+1)^(0+128)
  6591  0DE5  3060               	movlw	96
  6592  0DE6  00D8               	movwf	_gtimeOutCount^(0+128)
  6593  0DE7                     l532:	
  6594                           ;glucose_meter_main.c: 362: while(gtimeOutCount!=0)gtimeOutCount--;
  6595                           
  6596  0DE7  085B               	movf	(_gtimeOutCount+3)^(0+128),w
  6597  0DE8  045A               	iorwf	(_gtimeOutCount+2)^(0+128),w
  6598  0DE9  0459               	iorwf	(_gtimeOutCount+1)^(0+128),w
  6599  0DEA  0458               	iorwf	_gtimeOutCount^(0+128),w
  6600  0DEB  1903               	btfsc	3,2
  6601  0DEC  2E06               	goto	l5486
  6602  0DED  3001               	movlw	1
  6603  0DEE  0020               	movlb	0	; select bank0
  6604  0DEF  00BA               	movwf	??_SenseTestStrip
  6605  0DF0  3000               	movlw	0
  6606  0DF1  00BB               	movwf	??_SenseTestStrip+1
  6607  0DF2  3000               	movlw	0
  6608  0DF3  00BC               	movwf	??_SenseTestStrip+2
  6609  0DF4  3000               	movlw	0
  6610  0DF5  00BD               	movwf	??_SenseTestStrip+3
  6611  0DF6  083A               	movf	??_SenseTestStrip,w
  6612  0DF7  0021               	movlb	1	; select bank1
  6613  0DF8  02D8               	subwf	_gtimeOutCount^(0+128),f
  6614  0DF9  0020               	movlb	0	; select bank0
  6615  0DFA  083B               	movf	??_SenseTestStrip+1,w
  6616  0DFB  0021               	movlb	1	; select bank1
  6617  0DFC  3BD9               	subwfb	(_gtimeOutCount+1)^(0+128),f
  6618  0DFD  0020               	movlb	0	; select bank0
  6619  0DFE  083C               	movf	??_SenseTestStrip+2,w
  6620  0DFF  0021               	movlb	1	; select bank1
  6621  0E00  3BDA               	subwfb	(_gtimeOutCount+2)^(0+128),f
  6622  0E01  0020               	movlb	0	; select bank0
  6623  0E02  083D               	movf	??_SenseTestStrip+3,w
  6624  0E03  0021               	movlb	1	; select bank1
  6625  0E04  3BDB               	subwfb	(_gtimeOutCount+3)^(0+128),f
  6626  0E05  2DE7               	goto	l532
  6627  0E06                     l5486:	
  6628                           
  6629                           ;glucose_meter_main.c: 363: EnterDeepSleep();
  6630  0E06  3194  2416         	fcall	_EnterDeepSleep
  6631                           
  6632                           ;glucose_meter_main.c: 364: __nop();
  6633  0E08  0000               	nop
  6634                           
  6635                           ;glucose_meter_main.c: 365: __nop();
  6636  0E09  0000               	nop
  6637                           
  6638                           ;glucose_meter_main.c: 366: __nop();
  6639  0E0A  0000               	nop
  6640  0E0B  0008               	return
  6641  0E0C                     __end_of_SenseTestStrip:	
  6642                           
  6643                           	psect	text14
  6644  1416                     __ptext14:	
  6645 ;; *************** function _EnterDeepSleep *****************
  6646 ;; Defined at:
  6647 ;;		line 421 in file "glucose_meter_main.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;Total ram usage:        0 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    3
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_main
  6672 ;;		_SenseTestStrip
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _EnterDeepSleep
  6678  1416                     _EnterDeepSleep:	
  6679                           
  6680                           ;glucose_meter_main.c: 423: gSleepMode = 1;
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in _EnterDeepSleep: [wreg+status,2]
  6684  1416  0020               	movlb	0	; select bank0
  6685  1417  01DF               	clrf	_gSleepMode
  6686  1418  0ADF               	incf	_gSleepMode,f
  6687                           
  6688                           ;glucose_meter_main.c: 424: gStripInserted = 0;
  6689  1419  01FB               	clrf	_gStripInserted
  6690                           
  6691                           ;glucose_meter_main.c: 425: gStripRemoved = 0;
  6692  141A  01E0               	clrf	_gStripRemoved
  6693                           
  6694                           ;glucose_meter_main.c: 426: gBloodNotInsetrted = 0;
  6695  141B  01F8               	clrf	_gBloodNotInsetrted
  6696                           
  6697                           ;glucose_meter_main.c: 427: gSigmaGlucoseValue = 0;
  6698  141C  3000               	movlw	0
  6699  141D  0021               	movlb	1	; select bank1
  6700  141E  00A7               	movwf	(_gSigmaGlucoseValue+3)^(0+128)
  6701  141F  3000               	movlw	0
  6702  1420  00A6               	movwf	(_gSigmaGlucoseValue+2)^(0+128)
  6703  1421  3000               	movlw	0
  6704  1422  00A5               	movwf	(_gSigmaGlucoseValue+1)^(0+128)
  6705  1423  3000               	movlw	0
  6706  1424  00A4               	movwf	_gSigmaGlucoseValue^(0+128)
  6707                           
  6708                           ;glucose_meter_main.c: 428: FVRCONbits.FVREN = 0;
  6709  1425  0022               	movlb	2	; select bank2
  6710  1426  1397               	bcf	23,7	;volatile
  6711                           
  6712                           ;glucose_meter_main.c: 429: LATB1 = 0;
  6713  1427  108D               	bcf	13,1	;volatile
  6714                           
  6715                           ;glucose_meter_main.c: 430: TRISC = 0xFC;
  6716  1428  30FC               	movlw	252
  6717  1429  0021               	movlb	1	; select bank1
  6718  142A  008E               	movwf	14	;volatile
  6719                           
  6720                           ;glucose_meter_main.c: 434: LATBbits.LATB7 = 0;
  6721  142B  0022               	movlb	2	; select bank2
  6722  142C  138D               	bcf	13,7	;volatile
  6723                           
  6724                           ;glucose_meter_main.c: 435: LATBbits.LATB6 = 0;
  6725  142D  130D               	bcf	13,6	;volatile
  6726                           
  6727                           ;glucose_meter_main.c: 436: LATBbits.LATB5 = 0;
  6728  142E  128D               	bcf	13,5	;volatile
  6729                           
  6730                           ;glucose_meter_main.c: 437: LATBbits.LATB1 = 0;
  6731  142F  108D               	bcf	13,1	;volatile
  6732                           
  6733                           ;glucose_meter_main.c: 439: TRISBbits.TRISB7 = 1;
  6734  1430  0021               	movlb	1	; select bank1
  6735  1431  178D               	bsf	13,7	;volatile
  6736                           
  6737                           ;glucose_meter_main.c: 440: TRISBbits.TRISB6 = 1;
  6738  1432  170D               	bsf	13,6	;volatile
  6739                           
  6740                           ;glucose_meter_main.c: 441: TRISBbits.TRISB5 = 1;
  6741  1433  168D               	bsf	13,5	;volatile
  6742                           
  6743                           ;glucose_meter_main.c: 442: TRISBbits.TRISB1 = 1;
  6744  1434  148D               	bsf	13,1	;volatile
  6745                           
  6746                           ;glucose_meter_main.c: 444: LATAbits.LATA7 = 0;
  6747  1435  0022               	movlb	2	; select bank2
  6748  1436  138C               	bcf	12,7	;volatile
  6749                           
  6750                           ;glucose_meter_main.c: 445: LATAbits.LATA6 = 0;
  6751  1437  130C               	bcf	12,6	;volatile
  6752                           
  6753                           ;glucose_meter_main.c: 446: TRISAbits.TRISA7 = 1;
  6754  1438  0021               	movlb	1	; select bank1
  6755  1439  178C               	bsf	12,7	;volatile
  6756                           
  6757                           ;glucose_meter_main.c: 447: TRISAbits.TRISA6 = 1;
  6758  143A  170C               	bsf	12,6	;volatile
  6759                           
  6760                           ;glucose_meter_main.c: 448: TRISAbits.TRISA3 = 1;
  6761  143B  158C               	bsf	12,3	;volatile
  6762                           
  6763                           ;glucose_meter_main.c: 450: OPA1CONbits.OPA1EN = 0;
  6764  143C  002A               	movlb	10	; select bank10
  6765  143D  1391               	bcf	17,7	;volatile
  6766                           
  6767                           ;glucose_meter_main.c: 451: DACCON0bits.DACEN = 0;
  6768  143E  0022               	movlb	2	; select bank2
  6769  143F  1398               	bcf	24,7	;volatile
  6770                           
  6771                           ;glucose_meter_main.c: 452: DACCON0bits.DACOE1= 0;
  6772  1440  1298               	bcf	24,5	;volatile
  6773                           
  6774                           ;glucose_meter_main.c: 453: ADCON0bits.ADON = 0;
  6775  1441  0021               	movlb	1	; select bank1
  6776  1442  101D               	bcf	29,0	;volatile
  6777                           
  6778                           ;glucose_meter_main.c: 454: __nop();
  6779  1443  0000               	nop
  6780  1444  0063               	sleep	;# 
  6781                           
  6782                           ;glucose_meter_main.c: 456: __nop();
  6783  1445  0000               	nop
  6784                           
  6785                           ;glucose_meter_main.c: 457: __nop();
  6786  1446  0000               	nop
  6787                           
  6788                           ;glucose_meter_main.c: 458: __nop();
  6789  1447  0000               	nop
  6790  1448  0008               	return
  6791  1449                     __end_of_EnterDeepSleep:	
  6792                           
  6793                           	psect	text15
  6794  1628                     __ptext15:	
  6795 ;; *************** function _SaveGlucoReading *****************
  6796 ;; Defined at:
  6797 ;;		line 84 in file "EEPROM.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        2 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    4
  6818 ;; This function calls:
  6819 ;;		_eeprom_write
  6820 ;; This function is called by:
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _SaveGlucoReading
  6827  1628                     _SaveGlucoReading:	
  6828                           
  6829                           ;EEPROM.c: 86: if (gSavedReadingCnt == 32)gSavedReadingCnt = 0;
  6830                           
  6831                           ;incstack = 0
  6832                           ; Regs used in _SaveGlucoReading: [wreg+status,2+status,0+pclath+cstack]
  6833  1628  3020               	movlw	32
  6834  1629  0020               	movlb	0	; select bank0
  6835  162A  065D               	xorwf	_gSavedReadingCnt,w
  6836  162B  1903               	btfsc	3,2
  6837  162C  01DD               	clrf	_gSavedReadingCnt
  6838                           
  6839                           ;EEPROM.c: 87: EEADRS = gSavedReadingCnt<<3;
  6840  162D  085D               	movf	_gSavedReadingCnt,w
  6841  162E  00AD               	movwf	??_SaveGlucoReading
  6842  162F  3002               	movlw	2
  6843  1630                     u3625:	
  6844  1630  35AD               	lslf	??_SaveGlucoReading,f
  6845  1631  3EFF               	addlw	-1
  6846  1632  1D03               	skipz
  6847  1633  2E30               	goto	u3625
  6848  1634  352D               	lslf	??_SaveGlucoReading,w
  6849  1635  00AE               	movwf	??_SaveGlucoReading+1
  6850  1636  082E               	movf	??_SaveGlucoReading+1,w
  6851  1637  00DB               	movwf	_EEADRS
  6852                           
  6853                           ;EEPROM.c: 89: eeprom_write(EEADRS, gSavedReadingCnt);
  6854  1638  085D               	movf	_gSavedReadingCnt,w
  6855  1639  00AD               	movwf	??_SaveGlucoReading
  6856  163A  082D               	movf	??_SaveGlucoReading,w
  6857  163B  00A9               	movwf	eeprom_write@value
  6858  163C  085B               	movf	_EEADRS,w
  6859  163D  3193  238E  3196   	fcall	_eeprom_write
  6860                           
  6861                           ;EEPROM.c: 90: eeprom_write(EEADRS+1, gYmmolchar );
  6862  1640  0020               	movlb	0	; select bank0
  6863  1641  0866               	movf	_gYmmolchar,w
  6864  1642  00AD               	movwf	??_SaveGlucoReading
  6865  1643  082D               	movf	??_SaveGlucoReading,w
  6866  1644  00A9               	movwf	eeprom_write@value
  6867  1645  085B               	movf	_EEADRS,w
  6868  1646  3E01               	addlw	1
  6869  1647  3193  238E  3196   	fcall	_eeprom_write
  6870                           
  6871                           ;EEPROM.c: 91: eeprom_write(EEADRS+2, gYmmoldecimalchar);
  6872  164A  087D               	movf	_gYmmoldecimalchar,w
  6873  164B  0020               	movlb	0	; select bank0
  6874  164C  00AD               	movwf	??_SaveGlucoReading
  6875  164D  082D               	movf	??_SaveGlucoReading,w
  6876  164E  00A9               	movwf	eeprom_write@value
  6877  164F  085B               	movf	_EEADRS,w
  6878  1650  3E02               	addlw	2
  6879  1651  3193  238E  3196   	fcall	_eeprom_write
  6880                           
  6881                           ;EEPROM.c: 92: eeprom_write(EEADRS+3, Hours );
  6882  1654  0020               	movlb	0	; select bank0
  6883  1655  0862               	movf	_Hours,w
  6884  1656  00AD               	movwf	??_SaveGlucoReading
  6885  1657  082D               	movf	??_SaveGlucoReading,w
  6886  1658  00A9               	movwf	eeprom_write@value
  6887  1659  085B               	movf	_EEADRS,w
  6888  165A  3E03               	addlw	3
  6889  165B  3193  238E  3196   	fcall	_eeprom_write
  6890                           
  6891                           ;EEPROM.c: 93: eeprom_write(EEADRS+4, Minutes);
  6892  165E  0020               	movlb	0	; select bank0
  6893  165F  0863               	movf	_Minutes,w
  6894  1660  00AD               	movwf	??_SaveGlucoReading
  6895  1661  082D               	movf	??_SaveGlucoReading,w
  6896  1662  00A9               	movwf	eeprom_write@value
  6897  1663  085B               	movf	_EEADRS,w
  6898  1664  3E04               	addlw	4
  6899  1665  3193  238E  3196   	fcall	_eeprom_write
  6900                           
  6901                           ;EEPROM.c: 94: eeprom_write(EEADRS+5, Month);
  6902  1668  0020               	movlb	0	; select bank0
  6903  1669  0864               	movf	_Month,w
  6904  166A  00AD               	movwf	??_SaveGlucoReading
  6905  166B  082D               	movf	??_SaveGlucoReading,w
  6906  166C  00A9               	movwf	eeprom_write@value
  6907  166D  085B               	movf	_EEADRS,w
  6908  166E  3E05               	addlw	5
  6909  166F  3193  238E  3196   	fcall	_eeprom_write
  6910                           
  6911                           ;EEPROM.c: 95: eeprom_write(EEADRS+6, Days);
  6912  1672  0020               	movlb	0	; select bank0
  6913  1673  0861               	movf	_Days,w
  6914  1674  00AD               	movwf	??_SaveGlucoReading
  6915  1675  082D               	movf	??_SaveGlucoReading,w
  6916  1676  00A9               	movwf	eeprom_write@value
  6917  1677  085B               	movf	_EEADRS,w
  6918  1678  3E06               	addlw	6
  6919  1679  3193  238E  3196   	fcall	_eeprom_write
  6920                           
  6921                           ;EEPROM.c: 96: eeprom_write(EEADRS+7, Year);
  6922  167C  0020               	movlb	0	; select bank0
  6923  167D  0865               	movf	_Year,w
  6924  167E  00AD               	movwf	??_SaveGlucoReading
  6925  167F  082D               	movf	??_SaveGlucoReading,w
  6926  1680  00A9               	movwf	eeprom_write@value
  6927  1681  085B               	movf	_EEADRS,w
  6928  1682  3E07               	addlw	7
  6929  1683  3193  238E         	fcall	_eeprom_write
  6930                           
  6931                           ;EEPROM.c: 97: gSavedReadingCnt++;
  6932  1685  3001               	movlw	1
  6933  1686  0020               	movlb	0	; select bank0
  6934  1687  00AD               	movwf	??_SaveGlucoReading
  6935  1688  082D               	movf	??_SaveGlucoReading,w
  6936  1689  07DD               	addwf	_gSavedReadingCnt,f
  6937                           
  6938                           ;EEPROM.c: 98: __nop();
  6939  168A  0000               	nop
  6940  168B  0008               	return
  6941  168C                     __end_of_SaveGlucoReading:	
  6942                           
  6943                           	psect	text16
  6944  138E                     __ptext16:	
  6945 ;; *************** function _eeprom_write *****************
  6946 ;; Defined at:
  6947 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eewrite.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  addr            1    wreg     unsigned char 
  6950 ;;  value           1    9[BANK0 ] unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  addr            1   12[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;Total ram usage:        4 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    3
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_SaveGlucoReading
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           
  6977                           ;psect for function _eeprom_write
  6978  138E                     _eeprom_write:	
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6982                           ;eeprom_write@addr stored from wreg
  6983  138E  0020               	movlb	0	; select bank0
  6984  138F  00AC               	movwf	eeprom_write@addr
  6985  1390                     l730:	
  6986  1390  0023               	movlb	3	; select bank3
  6987  1391  1895               	btfsc	21,1	;volsfr
  6988  1392  2B90               	goto	l730
  6989  1393  0020               	movlb	0	; select bank0
  6990  1394  082C               	movf	eeprom_write@addr,w
  6991  1395  00AA               	movwf	??_eeprom_write
  6992  1396  01AB               	clrf	??_eeprom_write+1
  6993  1397  082A               	movf	??_eeprom_write,w
  6994  1398  0023               	movlb	3	; select bank3
  6995  1399  0091               	movwf	17	;volatile
  6996  139A  0020               	movlb	0	; select bank0
  6997  139B  082B               	movf	??_eeprom_write+1,w
  6998  139C  0023               	movlb	3	; select bank3
  6999  139D  0092               	movwf	18	;volatile
  7000  139E  0020               	movlb	0	; select bank0
  7001  139F  0829               	movf	eeprom_write@value,w
  7002  13A0  0023               	movlb	3	; select bank3
  7003  13A1  0093               	movwf	19	;volatile
  7004  13A2  303F               	movlw	63
  7005  13A3  0020               	movlb	0	; select bank0
  7006  13A4  00AA               	movwf	??_eeprom_write
  7007  13A5  082A               	movf	??_eeprom_write,w
  7008  13A6  0023               	movlb	3	; select bank3
  7009  13A7  0595               	andwf	21,f	;volsfr
  7010  13A8  0020               	movlb	0	; select bank0
  7011  13A9  1003               	bcf	3,0	;volatile
  7012  13AA  1B8B               	btfsc	11,7	;volatile
  7013  13AB  1403               	bsf	3,0	;volatile
  7014  13AC  138B               	bcf	11,7	;volatile
  7015  13AD  0023               	movlb	3	; select bank3
  7016  13AE  1515               	bsf	21,2	;volsfr
  7017  13AF  3055               	movlw	85
  7018  13B0  0096               	movwf	22	;volsfr
  7019  13B1  30AA               	movlw	170
  7020  13B2  0096               	movwf	22	;volsfr
  7021  13B3  1495               	bsf	21,1	;volsfr
  7022  13B4  1115               	bcf	21,2	;volsfr
  7023  13B5  0020               	movlb	0	; select bank0
  7024  13B6  1C03               	btfss	3,0	;volatile
  7025  13B7  0008               	return
  7026  13B8  178B               	bsf	11,7	;volatile
  7027  13B9  0008               	return
  7028  13BA                     __end_of_eeprom_write:	
  7029                           
  7030                           	psect	text17
  7031  1701                     __ptext17:	
  7032 ;; *************** function _ReadSavedGlucoReading *****************
  7033 ;; Defined at:
  7034 ;;		line 117 in file "EEPROM.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  reading_coun    1    wreg     unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  reading_coun    1   15[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0, pclath, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;Total ram usage:        3 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		_eeprom_read
  7057 ;; This function is called by:
  7058 ;;		_main
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function _ReadSavedGlucoReading
  7064  1701                     _ReadSavedGlucoReading:	
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in _ReadSavedGlucoReading: [wreg+status,2+status,0+pclath+cstack]
  7068                           ;ReadSavedGlucoReading@reading_count stored from wreg
  7069  1701  0020               	movlb	0	; select bank0
  7070  1702  00AF               	movwf	ReadSavedGlucoReading@reading_count
  7071                           
  7072                           ;EEPROM.c: 119: EEADRS = reading_count<<3;
  7073  1703  082F               	movf	ReadSavedGlucoReading@reading_count,w
  7074  1704  00AD               	movwf	??_ReadSavedGlucoReading
  7075  1705  3002               	movlw	2
  7076  1706                     u3635:	
  7077  1706  35AD               	lslf	??_ReadSavedGlucoReading,f
  7078  1707  3EFF               	addlw	-1
  7079  1708  1D03               	skipz
  7080  1709  2F06               	goto	u3635
  7081  170A  352D               	lslf	??_ReadSavedGlucoReading,w
  7082  170B  00AE               	movwf	??_ReadSavedGlucoReading+1
  7083  170C  082E               	movf	??_ReadSavedGlucoReading+1,w
  7084  170D  00DB               	movwf	_EEADRS
  7085                           
  7086                           ;EEPROM.c: 120: gReadCount = eeprom_read(EEADRS) ;
  7087  170E  085B               	movf	_EEADRS,w
  7088  170F  3192  22FC  3197   	fcall	_eeprom_read
  7089  1712  0020               	movlb	0	; select bank0
  7090  1713  00AD               	movwf	??_ReadSavedGlucoReading
  7091  1714  082D               	movf	??_ReadSavedGlucoReading,w
  7092  1715  0021               	movlb	1	; select bank1
  7093  1716  00C8               	movwf	_gReadCount^(0+128)
  7094                           
  7095                           ;EEPROM.c: 121: EEADRS++;
  7096  1717  3001               	movlw	1
  7097  1718  0020               	movlb	0	; select bank0
  7098  1719  00AD               	movwf	??_ReadSavedGlucoReading
  7099  171A  082D               	movf	??_ReadSavedGlucoReading,w
  7100  171B  07DB               	addwf	_EEADRS,f
  7101                           
  7102                           ;EEPROM.c: 122: gYmmolRead = eeprom_read(EEADRS) ;
  7103  171C  085B               	movf	_EEADRS,w
  7104  171D  3192  22FC  3197   	fcall	_eeprom_read
  7105  1720  0020               	movlb	0	; select bank0
  7106  1721  00AD               	movwf	??_ReadSavedGlucoReading
  7107  1722  082D               	movf	??_ReadSavedGlucoReading,w
  7108  1723  0021               	movlb	1	; select bank1
  7109  1724  00CC               	movwf	_gYmmolRead^(0+128)
  7110                           
  7111                           ;EEPROM.c: 123: EEADRS++;
  7112  1725  3001               	movlw	1
  7113  1726  0020               	movlb	0	; select bank0
  7114  1727  00AD               	movwf	??_ReadSavedGlucoReading
  7115  1728  082D               	movf	??_ReadSavedGlucoReading,w
  7116  1729  07DB               	addwf	_EEADRS,f
  7117                           
  7118                           ;EEPROM.c: 124: gYmmolDecimalRead = eeprom_read(EEADRS) ;
  7119  172A  085B               	movf	_EEADRS,w
  7120  172B  3192  22FC  3197   	fcall	_eeprom_read
  7121  172E  0020               	movlb	0	; select bank0
  7122  172F  00AD               	movwf	??_ReadSavedGlucoReading
  7123  1730  082D               	movf	??_ReadSavedGlucoReading,w
  7124  1731  0021               	movlb	1	; select bank1
  7125  1732  00CB               	movwf	_gYmmolDecimalRead^(0+128)
  7126                           
  7127                           ;EEPROM.c: 125: EEADRS++;
  7128  1733  3001               	movlw	1
  7129  1734  0020               	movlb	0	; select bank0
  7130  1735  00AD               	movwf	??_ReadSavedGlucoReading
  7131  1736  082D               	movf	??_ReadSavedGlucoReading,w
  7132  1737  07DB               	addwf	_EEADRS,f
  7133                           
  7134                           ;EEPROM.c: 126: gHoursRead = eeprom_read(EEADRS) ;
  7135  1738  085B               	movf	_EEADRS,w
  7136  1739  3192  22FC  3197   	fcall	_eeprom_read
  7137  173C  0020               	movlb	0	; select bank0
  7138  173D  00AD               	movwf	??_ReadSavedGlucoReading
  7139  173E  082D               	movf	??_ReadSavedGlucoReading,w
  7140  173F  0021               	movlb	1	; select bank1
  7141  1740  00C5               	movwf	_gHoursRead^(0+128)
  7142                           
  7143                           ;EEPROM.c: 127: EEADRS++;
  7144  1741  3001               	movlw	1
  7145  1742  0020               	movlb	0	; select bank0
  7146  1743  00AD               	movwf	??_ReadSavedGlucoReading
  7147  1744  082D               	movf	??_ReadSavedGlucoReading,w
  7148  1745  07DB               	addwf	_EEADRS,f
  7149                           
  7150                           ;EEPROM.c: 128: gMinutesRead = eeprom_read(EEADRS) ;
  7151  1746  085B               	movf	_EEADRS,w
  7152  1747  3192  22FC  3197   	fcall	_eeprom_read
  7153  174A  0020               	movlb	0	; select bank0
  7154  174B  00AD               	movwf	??_ReadSavedGlucoReading
  7155  174C  082D               	movf	??_ReadSavedGlucoReading,w
  7156  174D  0021               	movlb	1	; select bank1
  7157  174E  00C6               	movwf	_gMinutesRead^(0+128)
  7158                           
  7159                           ;EEPROM.c: 129: EEADRS++;
  7160  174F  3001               	movlw	1
  7161  1750  0020               	movlb	0	; select bank0
  7162  1751  00AD               	movwf	??_ReadSavedGlucoReading
  7163  1752  082D               	movf	??_ReadSavedGlucoReading,w
  7164  1753  07DB               	addwf	_EEADRS,f
  7165                           
  7166                           ;EEPROM.c: 130: gMonthRead = eeprom_read(EEADRS) ;
  7167  1754  085B               	movf	_EEADRS,w
  7168  1755  3192  22FC  3197   	fcall	_eeprom_read
  7169  1758  0020               	movlb	0	; select bank0
  7170  1759  00AD               	movwf	??_ReadSavedGlucoReading
  7171  175A  082D               	movf	??_ReadSavedGlucoReading,w
  7172  175B  0021               	movlb	1	; select bank1
  7173  175C  00C7               	movwf	_gMonthRead^(0+128)
  7174                           
  7175                           ;EEPROM.c: 131: EEADRS++;
  7176  175D  3001               	movlw	1
  7177  175E  0020               	movlb	0	; select bank0
  7178  175F  00AD               	movwf	??_ReadSavedGlucoReading
  7179  1760  082D               	movf	??_ReadSavedGlucoReading,w
  7180  1761  07DB               	addwf	_EEADRS,f
  7181                           
  7182                           ;EEPROM.c: 132: gDaysRead = eeprom_read(EEADRS) ;
  7183  1762  085B               	movf	_EEADRS,w
  7184  1763  3192  22FC  3197   	fcall	_eeprom_read
  7185  1766  0020               	movlb	0	; select bank0
  7186  1767  00AD               	movwf	??_ReadSavedGlucoReading
  7187  1768  082D               	movf	??_ReadSavedGlucoReading,w
  7188  1769  0021               	movlb	1	; select bank1
  7189  176A  00C3               	movwf	_gDaysRead^(0+128)
  7190                           
  7191                           ;EEPROM.c: 133: EEADRS++;
  7192  176B  3001               	movlw	1
  7193  176C  0020               	movlb	0	; select bank0
  7194  176D  00AD               	movwf	??_ReadSavedGlucoReading
  7195  176E  082D               	movf	??_ReadSavedGlucoReading,w
  7196  176F  07DB               	addwf	_EEADRS,f
  7197                           
  7198                           ;EEPROM.c: 134: gYearRead = eeprom_read(EEADRS) ;
  7199  1770  085B               	movf	_EEADRS,w
  7200  1771  3192  22FC         	fcall	_eeprom_read
  7201  1773  0020               	movlb	0	; select bank0
  7202  1774  00AD               	movwf	??_ReadSavedGlucoReading
  7203  1775  082D               	movf	??_ReadSavedGlucoReading,w
  7204  1776  0021               	movlb	1	; select bank1
  7205  1777  00CA               	movwf	_gYearRead^(0+128)
  7206  1778  0008               	return
  7207  1779                     __end_of_ReadSavedGlucoReading:	
  7208                           
  7209                           	psect	text18
  7210  12FC                     __ptext18:	
  7211 ;; *************** function _eeprom_read *****************
  7212 ;; Defined at:
  7213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  addr            1    wreg     unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  addr            1   12[BANK0 ] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1    wreg      unsigned char 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;Total ram usage:        4 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    3
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_ReadSavedGlucoReading
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function _eeprom_read
  7243  12FC                     _eeprom_read:	
  7244                           
  7245                           ;incstack = 0
  7246                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  7247                           ;eeprom_read@addr stored from wreg
  7248  12FC  0020               	movlb	0	; select bank0
  7249  12FD  00AC               	movwf	eeprom_read@addr
  7250  12FE  2B00               	goto	l708
  7251  12FF                     u2861:	
  7252  12FF  0020               	movlb	0	; select bank0
  7253  1300                     l708:	
  7254  1300  0064               	clrwdt	;# 
  7255  1301  0023               	movlb	3	; select bank3
  7256  1302  1895               	btfsc	21,1	;volsfr
  7257  1303  2AFF               	goto	u2861
  7258  1304  0020               	movlb	0	; select bank0
  7259  1305  082C               	movf	eeprom_read@addr,w
  7260  1306  00A9               	movwf	??_eeprom_read
  7261  1307  01AA               	clrf	??_eeprom_read+1
  7262  1308  0829               	movf	??_eeprom_read,w
  7263  1309  0023               	movlb	3	; select bank3
  7264  130A  0091               	movwf	17	;volatile
  7265  130B  0020               	movlb	0	; select bank0
  7266  130C  082A               	movf	??_eeprom_read+1,w
  7267  130D  0023               	movlb	3	; select bank3
  7268  130E  0092               	movwf	18	;volatile
  7269  130F  303F               	movlw	63
  7270  1310  0020               	movlb	0	; select bank0
  7271  1311  00AB               	movwf	??_eeprom_read+2
  7272  1312  082B               	movf	??_eeprom_read+2,w
  7273  1313  0023               	movlb	3	; select bank3
  7274  1314  0595               	andwf	21,f	;volsfr
  7275  1315  1415               	bsf	21,0	;volsfr
  7276  1316  1003               	clrc
  7277  1317  1815               	btfsc	21,0	;volsfr
  7278  1318  1403               	setc
  7279  1319  3000               	movlw	0
  7280  131A  3D09               	addwfc	9,w
  7281  131B  0813               	movf	19,w	;volatile
  7282  131C  0008               	return
  7283  131D                     __end_of_eeprom_read:	
  7284                           
  7285                           	psect	text19
  7286  1290                     __ptext19:	
  7287 ;; *************** function _LCDString *****************
  7288 ;; Defined at:
  7289 ;;		line 219 in file "Nokia5110/Nokia.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  characters      2   28[BANK0 ] PTR unsigned char 
  7292 ;;		 -> STR_4(11), STR_3(10), STR_2(14), 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      void 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        3 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    5
  7311 ;; This function calls:
  7312 ;;		_LCDCharacter
  7313 ;; This function is called by:
  7314 ;;		_main
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           
  7319                           ;psect for function _LCDString
  7320  1290                     _LCDString:	
  7321  1290                     l5378:	
  7322                           ;Nokia.c: 220: while (*characters)
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _LCDString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7326                           
  7327  1290  0020               	movlb	0	; select bank0
  7328  1291  083C               	movf	LCDString@characters,w
  7329  1292  0084               	movwf	4
  7330  1293  083D               	movf	LCDString@characters+1,w
  7331  1294  0085               	movwf	5
  7332  1295  0012               	moviw fsr0++
  7333  1296  1903               	btfsc	3,2
  7334  1297  0008               	return
  7335                           
  7336                           ;Nokia.c: 221: LCDCharacter(*characters++);
  7337  1298  0020               	movlb	0	; select bank0
  7338  1299  083C               	movf	LCDString@characters,w
  7339  129A  0084               	movwf	4
  7340  129B  083D               	movf	LCDString@characters+1,w
  7341  129C  0085               	movwf	5
  7342  129D  0800               	movf	0,w	;code access
  7343  129E  3187  27A1  3192   	fcall	_LCDCharacter
  7344  12A1  3001               	movlw	1
  7345  12A2  0020               	movlb	0	; select bank0
  7346  12A3  07BC               	addwf	LCDString@characters,f
  7347  12A4  3000               	movlw	0
  7348  12A5  3DBD               	addwfc	LCDString@characters+1,f
  7349  12A6  2A90               	goto	l5378
  7350  12A7                     __end_of_LCDString:	
  7351                           
  7352                           	psect	text20
  7353  07A1                     __ptext20:	
  7354 ;; *************** function _LCDCharacter *****************
  7355 ;; Defined at:
  7356 ;;		line 202 in file "Nokia5110/Nokia.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  character       1    wreg     unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  character       1   25[BANK0 ] unsigned char 
  7361 ;;  index           2   26[BANK0 ] int 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;Total ram usage:        8 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    4
  7378 ;; This function calls:
  7379 ;;		_LCDWrite
  7380 ;;		___wmul
  7381 ;; This function is called by:
  7382 ;;		_LCDString
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           
  7387                           ;psect for function _LCDCharacter
  7388  07A1                     _LCDCharacter:	
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in _LCDCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7392                           ;LCDCharacter@character stored from wreg
  7393  07A1  0020               	movlb	0	; select bank0
  7394  07A2  00B9               	movwf	LCDCharacter@character
  7395                           
  7396                           ;Nokia.c: 203: LCDWrite(1, 0x00);
  7397  07A3  01AF               	clrf	LCDWrite@data
  7398  07A4  3001               	movlw	1
  7399  07A5  3193  23E7  3187   	fcall	_LCDWrite
  7400                           
  7401                           ;Nokia.c: 205: for (int index = 0 ; index < 5 ; index++)
  7402  07A8  0020               	movlb	0	; select bank0
  7403  07A9  01BA               	clrf	LCDCharacter@index
  7404  07AA  01BB               	clrf	LCDCharacter@index+1
  7405  07AB  083B               	movf	LCDCharacter@index+1,w
  7406  07AC  3A80               	xorlw	128
  7407  07AD  00B4               	movwf	??_LCDCharacter
  7408  07AE  3080               	movlw	128
  7409  07AF  0234               	subwf	??_LCDCharacter,w
  7410  07B0  1D03               	skipz
  7411  07B1  2FB4               	goto	u5055
  7412  07B2  3005               	movlw	5
  7413  07B3  023A               	subwf	LCDCharacter@index,w
  7414  07B4                     u5055:	
  7415  07B4  1803               	btfsc	3,0
  7416  07B5  2FEE               	goto	l4920
  7417  07B6                     l4914:	
  7418                           
  7419                           ;Nokia.c: 206: LCDWrite(1, ASCII[character - 0x20][index]);
  7420  07B6  0020               	movlb	0	; select bank0
  7421  07B7  0839               	movf	LCDCharacter@character,w
  7422  07B8  3EE0               	addlw	224
  7423  07B9  00A9               	movwf	___wmul@multiplier
  7424  07BA  30FF               	movlw	255
  7425  07BB  1803               	skipnc
  7426  07BC  3000               	movlw	0
  7427  07BD  00AA               	movwf	___wmul@multiplier+1
  7428  07BE  3005               	movlw	5
  7429  07BF  00AB               	movwf	___wmul@multiplicand
  7430  07C0  3000               	movlw	0
  7431  07C1  00AC               	movwf	___wmul@multiplicand+1
  7432  07C2  3192  22C2  3187   	fcall	___wmul
  7433  07C5  3022               	movlw	low (_ASCII| (0+32768))
  7434  07C6  0020               	movlb	0	; select bank0
  7435  07C7  00B4               	movwf	??_LCDCharacter
  7436  07C8  3082               	movlw	high (_ASCII| (0+32768))
  7437  07C9  00B5               	movwf	??_LCDCharacter+1
  7438  07CA  0829               	movf	?___wmul,w
  7439  07CB  0734               	addwf	??_LCDCharacter,w
  7440  07CC  00B6               	movwf	??_LCDCharacter+2
  7441  07CD  082A               	movf	?___wmul+1,w
  7442  07CE  3D35               	addwfc	??_LCDCharacter+1,w
  7443  07CF  00B7               	movwf	??_LCDCharacter+3
  7444  07D0  0836               	movf	??_LCDCharacter+2,w
  7445  07D1  073A               	addwf	LCDCharacter@index,w
  7446  07D2  0084               	movwf	4
  7447  07D3  0837               	movf	??_LCDCharacter+3,w
  7448  07D4  3D3B               	addwfc	LCDCharacter@index+1,w
  7449  07D5  0085               	movwf	5
  7450  07D6  0800               	movf	0,w	;code access
  7451  07D7  00B8               	movwf	??_LCDCharacter+4
  7452  07D8  0838               	movf	??_LCDCharacter+4,w
  7453  07D9  00AF               	movwf	LCDWrite@data
  7454  07DA  3001               	movlw	1
  7455  07DB  3193  23E7  3187   	fcall	_LCDWrite
  7456  07DE  3001               	movlw	1
  7457  07DF  0020               	movlb	0	; select bank0
  7458  07E0  07BA               	addwf	LCDCharacter@index,f
  7459  07E1  3000               	movlw	0
  7460  07E2  3DBB               	addwfc	LCDCharacter@index+1,f
  7461  07E3  083B               	movf	LCDCharacter@index+1,w
  7462  07E4  3A80               	xorlw	128
  7463  07E5  00B4               	movwf	??_LCDCharacter
  7464  07E6  3080               	movlw	128
  7465  07E7  0234               	subwf	??_LCDCharacter,w
  7466  07E8  1D03               	skipz
  7467  07E9  2FEC               	goto	u5065
  7468  07EA  3005               	movlw	5
  7469  07EB  023A               	subwf	LCDCharacter@index,w
  7470  07EC                     u5065:	
  7471  07EC  1C03               	skipc
  7472  07ED  2FB6               	goto	l4914
  7473  07EE                     l4920:	
  7474                           
  7475                           ;Nokia.c: 209: LCDWrite(1, 0x00);
  7476  07EE  0020               	movlb	0	; select bank0
  7477  07EF  01AF               	clrf	LCDWrite@data
  7478  07F0  3001               	movlw	1
  7479  07F1  3193  23E7         	fcall	_LCDWrite
  7480  07F3  0008               	return
  7481  07F4                     __end_of_LCDCharacter:	
  7482                           
  7483                           	psect	text21
  7484  12C2                     __ptext21:	
  7485 ;; *************** function ___wmul *****************
  7486 ;; Defined at:
  7487 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  multiplier      2    9[BANK0 ] unsigned int 
  7490 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  product         2   13[BANK0 ] unsigned int 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  2    9[BANK0 ] unsigned int 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;Total ram usage:        6 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    3
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_LCDCharacter
  7513 ;;		_printf
  7514 ;;		_LCDBigNum
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function ___wmul
  7520  12C2                     ___wmul:	
  7521                           
  7522                           ;incstack = 0
  7523                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7524  12C2  0020               	movlb	0	; select bank0
  7525  12C3  01AD               	clrf	___wmul@product
  7526  12C4  01AE               	clrf	___wmul@product+1
  7527  12C5                     l4510:	
  7528  12C5  1C29               	btfss	___wmul@multiplier,0
  7529  12C6  2ACB               	goto	l820
  7530  12C7  082B               	movf	___wmul@multiplicand,w
  7531  12C8  07AD               	addwf	___wmul@product,f
  7532  12C9  082C               	movf	___wmul@multiplicand+1,w
  7533  12CA  3DAE               	addwfc	___wmul@product+1,f
  7534  12CB                     l820:	
  7535  12CB  3001               	movlw	1
  7536  12CC                     u4525:	
  7537  12CC  35AB               	lslf	___wmul@multiplicand,f
  7538  12CD  0DAC               	rlf	___wmul@multiplicand+1,f
  7539  12CE  0B89               	decfsz	9,f
  7540  12CF  2ACC               	goto	u4525
  7541  12D0  3001               	movlw	1
  7542  12D1                     u4535:	
  7543  12D1  36AA               	lsrf	___wmul@multiplier+1,f
  7544  12D2  0CA9               	rrf	___wmul@multiplier,f
  7545  12D3  0B89               	decfsz	9,f
  7546  12D4  2AD1               	goto	u4535
  7547  12D5  0829               	movf	___wmul@multiplier,w
  7548  12D6  042A               	iorwf	___wmul@multiplier+1,w
  7549  12D7  1D03               	btfss	3,2
  7550  12D8  2AC5               	goto	l4510
  7551  12D9  082E               	movf	___wmul@product+1,w
  7552  12DA  00AA               	movwf	?___wmul+1
  7553  12DB  082D               	movf	___wmul@product,w
  7554  12DC  00A9               	movwf	?___wmul
  7555  12DD  0008               	return
  7556  12DE                     __end_of___wmul:	
  7557                           
  7558                           	psect	text22
  7559  12DE                     __ptext22:	
  7560 ;; *************** function _HwInit *****************
  7561 ;; Defined at:
  7562 ;;		line 75 in file "user.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;		None
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;		None
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, pclath, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;Total ram usage:        0 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    5
  7583 ;; This function calls:
  7584 ;;		_ConfigureOscillator
  7585 ;;		_InitADC
  7586 ;;		_InitApp
  7587 ;;		_InitTimer1
  7588 ;;		_LCDInit
  7589 ;; This function is called by:
  7590 ;;		_main
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _HwInit
  7596  12DE                     _HwInit:	
  7597                           
  7598                           ;user.c: 78: ConfigureOscillator();
  7599                           
  7600                           ;incstack = 0
  7601                           ; Regs used in _HwInit: [wreg+status,2+status,0+pclath+cstack]
  7602  12DE  3191  21FA  3192   	fcall	_ConfigureOscillator
  7603                           
  7604                           ;user.c: 81: InitApp();
  7605  12E1  3195  2542  3192   	fcall	_InitApp
  7606                           
  7607                           ;user.c: 82: InitTimer1();
  7608  12E4  3192  220D  3192   	fcall	_InitTimer1
  7609                           
  7610                           ;user.c: 83: InitADC();
  7611  12E7  3188  2000  3192   	fcall	_InitADC
  7612                           
  7613                           ;user.c: 84: LCDInit();
  7614  12EA  3195  2589         	fcall	_LCDInit
  7615                           
  7616                           ;user.c: 85: gStripIdleTime = 250000;
  7617  12EC  3000               	movlw	0
  7618  12ED  0021               	movlb	1	; select bank1
  7619  12EE  00D3               	movwf	(_gStripIdleTime+3)^(0+128)
  7620  12EF  3003               	movlw	3
  7621  12F0  00D2               	movwf	(_gStripIdleTime+2)^(0+128)
  7622  12F1  30D0               	movlw	208
  7623  12F2  00D1               	movwf	(_gStripIdleTime+1)^(0+128)
  7624  12F3  3090               	movlw	144
  7625  12F4  00D0               	movwf	_gStripIdleTime^(0+128)
  7626                           
  7627                           ;user.c: 86: LATB1 = 1;
  7628  12F5  0022               	movlb	2	; select bank2
  7629  12F6  148D               	bsf	13,1	;volatile
  7630                           
  7631                           ;user.c: 88: LATAbits.LATA3 = 0;
  7632  12F7  118C               	bcf	12,3	;volatile
  7633                           
  7634                           ;user.c: 89: gSavedReadingCnt=0;
  7635  12F8  0020               	movlb	0	; select bank0
  7636  12F9  01DD               	clrf	_gSavedReadingCnt
  7637                           
  7638                           ;user.c: 90: gBloodNotInsetrted=0;
  7639  12FA  01F8               	clrf	_gBloodNotInsetrted
  7640  12FB  0008               	return
  7641  12FC                     __end_of_HwInit:	
  7642                           
  7643                           	psect	text23
  7644  1589                     __ptext23:	
  7645 ;; *************** function _LCDInit *****************
  7646 ;; Defined at:
  7647 ;;		line 234 in file "Nokia5110/Nokia.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;		None
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        2 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    4
  7668 ;; This function calls:
  7669 ;;		_LCDWrite
  7670 ;; This function is called by:
  7671 ;;		_HwInit
  7672 ;;		_SetTime
  7673 ;;		_main
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function _LCDInit
  7679  1589                     _LCDInit:	
  7680                           
  7681                           ;Nokia.c: 236: TRISCbits.TRISC3=0;
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  7685  1589  0021               	movlb	1	; select bank1
  7686  158A  118E               	bcf	14,3	;volatile
  7687                           
  7688                           ;Nokia.c: 237: TRISCbits.TRISC4=0;
  7689  158B  120E               	bcf	14,4	;volatile
  7690                           
  7691                           ;Nokia.c: 238: TRISCbits.TRISC5=0;
  7692  158C  128E               	bcf	14,5	;volatile
  7693                           
  7694                           ;Nokia.c: 239: TRISCbits.TRISC6=0;
  7695  158D  130E               	bcf	14,6	;volatile
  7696                           
  7697                           ;Nokia.c: 240: TRISCbits.TRISC7=0;
  7698  158E  138E               	bcf	14,7	;volatile
  7699                           
  7700                           ;Nokia.c: 242: LATCbits.LATC4=0;
  7701  158F  0022               	movlb	2	; select bank2
  7702  1590  120E               	bcf	14,4	;volatile
  7703                           
  7704                           ;Nokia.c: 243: LATCbits.LATC5=0;
  7705  1591  128E               	bcf	14,5	;volatile
  7706                           
  7707                           ;Nokia.c: 244: LATCbits.LATC3=0;
  7708  1592  118E               	bcf	14,3	;volatile
  7709                           
  7710                           ;Nokia.c: 247: LATCbits.LATC7=0;
  7711  1593  138E               	bcf	14,7	;volatile
  7712                           
  7713                           ;Nokia.c: 248: _delay((unsigned long)((10)*(800000/4000.0)));
  7714  1594  3003               	movlw	3
  7715  1595  0020               	movlb	0	; select bank0
  7716  1596  00B5               	movwf	??_LCDInit+1
  7717  1597  3097               	movlw	151
  7718  1598  00B4               	movwf	??_LCDInit
  7719  1599                     u6297:	
  7720  1599  0BB4               	decfsz	??_LCDInit,f
  7721  159A  2D99               	goto	u6297
  7722  159B  0BB5               	decfsz	??_LCDInit+1,f
  7723  159C  2D99               	goto	u6297
  7724  159D  3200               	nop2
  7725                           
  7726                           ;Nokia.c: 249: LATCbits.LATC7=1;
  7727  159E  0022               	movlb	2	; select bank2
  7728  159F  178E               	bsf	14,7	;volatile
  7729                           
  7730                           ;Nokia.c: 251: LCDWrite(0, 0x21);
  7731  15A0  3021               	movlw	33
  7732  15A1  0020               	movlb	0	; select bank0
  7733  15A2  00B4               	movwf	??_LCDInit
  7734  15A3  0834               	movf	??_LCDInit,w
  7735  15A4  00AF               	movwf	LCDWrite@data
  7736  15A5  3000               	movlw	0
  7737  15A6  3193  23E7  3195   	fcall	_LCDWrite
  7738                           
  7739                           ;Nokia.c: 252: LCDWrite(0, 0xBB);
  7740  15A9  30BB               	movlw	187
  7741  15AA  0020               	movlb	0	; select bank0
  7742  15AB  00B4               	movwf	??_LCDInit
  7743  15AC  0834               	movf	??_LCDInit,w
  7744  15AD  00AF               	movwf	LCDWrite@data
  7745  15AE  3000               	movlw	0
  7746  15AF  3193  23E7  3195   	fcall	_LCDWrite
  7747                           
  7748                           ;Nokia.c: 253: LCDWrite(0, 0x04);
  7749  15B2  3004               	movlw	4
  7750  15B3  0020               	movlb	0	; select bank0
  7751  15B4  00B4               	movwf	??_LCDInit
  7752  15B5  0834               	movf	??_LCDInit,w
  7753  15B6  00AF               	movwf	LCDWrite@data
  7754  15B7  3000               	movlw	0
  7755  15B8  3193  23E7  3195   	fcall	_LCDWrite
  7756                           
  7757                           ;Nokia.c: 254: LCDWrite(0, 0x14);
  7758  15BB  3014               	movlw	20
  7759  15BC  0020               	movlb	0	; select bank0
  7760  15BD  00B4               	movwf	??_LCDInit
  7761  15BE  0834               	movf	??_LCDInit,w
  7762  15BF  00AF               	movwf	LCDWrite@data
  7763  15C0  3000               	movlw	0
  7764  15C1  3193  23E7  3195   	fcall	_LCDWrite
  7765                           
  7766                           ;Nokia.c: 256: LCDWrite(0, 0x20);
  7767  15C4  3020               	movlw	32
  7768  15C5  0020               	movlb	0	; select bank0
  7769  15C6  00B4               	movwf	??_LCDInit
  7770  15C7  0834               	movf	??_LCDInit,w
  7771  15C8  00AF               	movwf	LCDWrite@data
  7772  15C9  3000               	movlw	0
  7773  15CA  3193  23E7  3195   	fcall	_LCDWrite
  7774                           
  7775                           ;Nokia.c: 257: LCDWrite(0, 0x0C);
  7776  15CD  300C               	movlw	12
  7777  15CE  0020               	movlb	0	; select bank0
  7778  15CF  00B4               	movwf	??_LCDInit
  7779  15D0  0834               	movf	??_LCDInit,w
  7780  15D1  00AF               	movwf	LCDWrite@data
  7781  15D2  3000               	movlw	0
  7782  15D3  3193  23E7         	fcall	_LCDWrite
  7783  15D5  0008               	return
  7784  15D6                     __end_of_LCDInit:	
  7785                           
  7786                           	psect	text24
  7787  120D                     __ptext24:	
  7788 ;; *************** function _InitTimer1 *****************
  7789 ;; Defined at:
  7790 ;;		line 510 in file "user.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    3
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_HwInit
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function _InitTimer1
  7820  120D                     _InitTimer1:	
  7821                           
  7822                           ;user.c: 512: T1CONbits.TMR1CS = 0b10;
  7823                           
  7824                           ;incstack = 0
  7825                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  7826  120D  0020               	movlb	0	; select bank0
  7827  120E  0818               	movf	24,w	;volatile
  7828  120F  393F               	andlw	-193
  7829  1210  3880               	iorlw	128
  7830  1211  0098               	movwf	24	;volatile
  7831                           
  7832                           ;user.c: 513: T1CONbits.T1OSCEN =1;
  7833  1212  1598               	bsf	24,3	;volatile
  7834                           
  7835                           ;user.c: 514: T1CONbits.TMR1ON = 1;
  7836  1213  1418               	bsf	24,0	;volatile
  7837                           
  7838                           ;user.c: 515: T1CONbits.nT1SYNC = 1;
  7839  1214  1518               	bsf	24,2	;volatile
  7840                           
  7841                           ;user.c: 516: PIE1bits.TMR1IE = 1;
  7842  1215  0021               	movlb	1	; select bank1
  7843  1216  1411               	bsf	17,0	;volatile
  7844  1217  0008               	return
  7845  1218                     __end_of_InitTimer1:	
  7846                           
  7847                           	psect	text25
  7848  1542                     __ptext25:	
  7849 ;; *************** function _InitApp *****************
  7850 ;; Defined at:
  7851 ;;		line 108 in file "user.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    3
  7872 ;; This function calls:
  7873 ;;		Nothing
  7874 ;; This function is called by:
  7875 ;;		_HwInit
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _InitApp
  7881  1542                     _InitApp:	
  7882                           
  7883                           ;user.c: 112: FVRCONbits.FVREN = 1;
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  7887  1542  0022               	movlb	2	; select bank2
  7888  1543  1797               	bsf	23,7	;volatile
  7889                           
  7890                           ;user.c: 113: FVRCONbits.CDAFVR = 0b10;
  7891  1544  0817               	movf	23,w	;volatile
  7892  1545  39F3               	andlw	-13
  7893  1546  3808               	iorlw	8
  7894  1547  0097               	movwf	23	;volatile
  7895                           
  7896                           ;user.c: 114: FVRCONbits.ADFVR = 0b10;
  7897  1548  0817               	movf	23,w	;volatile
  7898  1549  39FC               	andlw	-4
  7899  154A  3802               	iorlw	2
  7900  154B  0097               	movwf	23	;volatile
  7901                           
  7902                           ;user.c: 117: ANSELA = 0x3F;
  7903  154C  303F               	movlw	63
  7904  154D  0023               	movlb	3	; select bank3
  7905  154E  008C               	movwf	12	;volatile
  7906                           
  7907                           ;user.c: 118: TRISA = 0x3F;
  7908  154F  303F               	movlw	63
  7909  1550  0021               	movlb	1	; select bank1
  7910  1551  008C               	movwf	12	;volatile
  7911                           
  7912                           ;user.c: 119: ANSELAbits.ANSA3 = 0;
  7913  1552  0023               	movlb	3	; select bank3
  7914  1553  118C               	bcf	12,3	;volatile
  7915                           
  7916                           ;user.c: 120: TRISAbits.TRISA3 = 0;
  7917  1554  0021               	movlb	1	; select bank1
  7918  1555  118C               	bcf	12,3	;volatile
  7919                           
  7920                           ;user.c: 123: TRISB = 0;
  7921  1556  018D               	clrf	13	;volatile
  7922                           
  7923                           ;user.c: 124: ANSELB = 0;
  7924  1557  0023               	movlb	3	; select bank3
  7925  1558  018D               	clrf	13	;volatile
  7926                           
  7927                           ;user.c: 125: TRISBbits.TRISB0 = 1;
  7928  1559  0021               	movlb	1	; select bank1
  7929  155A  140D               	bsf	13,0	;volatile
  7930                           
  7931                           ;user.c: 126: TRISBbits.TRISB5 = 1;
  7932  155B  168D               	bsf	13,5	;volatile
  7933                           
  7934                           ;user.c: 127: LATB1 = 0;
  7935  155C  0022               	movlb	2	; select bank2
  7936  155D  108D               	bcf	13,1	;volatile
  7937                           
  7938                           ;user.c: 128: TRISBbits.TRISB2 = 1;
  7939  155E  0021               	movlb	1	; select bank1
  7940  155F  150D               	bsf	13,2	;volatile
  7941                           
  7942                           ;user.c: 129: ANSELBbits.ANSB2 = 1;
  7943  1560  0023               	movlb	3	; select bank3
  7944  1561  150D               	bsf	13,2	;volatile
  7945                           
  7946                           ;user.c: 130: TRISBbits.TRISB3 = 1;
  7947  1562  0021               	movlb	1	; select bank1
  7948  1563  158D               	bsf	13,3	;volatile
  7949                           
  7950                           ;user.c: 131: TRISBbits.TRISB4 = 1;
  7951  1564  160D               	bsf	13,4	;volatile
  7952                           
  7953                           ;user.c: 132: IOCBNbits.IOCBN4 = 1;
  7954  1565  0027               	movlb	7	; select bank7
  7955  1566  1615               	bsf	21,4	;volatile
  7956                           
  7957                           ;user.c: 133: IOCBFbits.IOCBF4 = 0;
  7958  1567  1216               	bcf	22,4	;volatile
  7959                           
  7960                           ;user.c: 134: IOCBNbits.IOCBN3 = 1;
  7961  1568  1595               	bsf	21,3	;volatile
  7962                           
  7963                           ;user.c: 135: IOCBFbits.IOCBF3 = 0;
  7964  1569  1196               	bcf	22,3	;volatile
  7965                           
  7966                           ;user.c: 136: LATB5 = 0;
  7967  156A  0022               	movlb	2	; select bank2
  7968  156B  128D               	bcf	13,5	;volatile
  7969                           
  7970                           ;user.c: 139: TRISC = 0;
  7971  156C  0021               	movlb	1	; select bank1
  7972  156D  018E               	clrf	14	;volatile
  7973                           
  7974                           ;user.c: 143: OPA1CONbits.OPA1EN = 1;
  7975  156E  002A               	movlb	10	; select bank10
  7976  156F  1791               	bsf	17,7	;volatile
  7977                           
  7978                           ;user.c: 144: OPA1CONbits.OPA1SP = 0;
  7979  1570  1311               	bcf	17,6	;volatile
  7980                           
  7981                           ;user.c: 145: OPA1CONbits.OPA1PCH0 = 0b1;
  7982  1571  1411               	bsf	17,0	;volatile
  7983                           
  7984                           ;user.c: 146: OPA1CONbits.OPA1PCH1 = 0b1;
  7985  1572  1491               	bsf	17,1	;volatile
  7986                           
  7987                           ;user.c: 149: DACCON0bits.DACEN = 1;
  7988  1573  0022               	movlb	2	; select bank2
  7989  1574  1798               	bsf	24,7	;volatile
  7990                           
  7991                           ;user.c: 150: DACCON0bits.DACOE1= 1;
  7992  1575  1698               	bsf	24,5	;volatile
  7993                           
  7994                           ;user.c: 151: DACCON0bits.DACNSS = 0;
  7995  1576  1018               	bcf	24,0	;volatile
  7996                           
  7997                           ;user.c: 152: DACCON0bits.DACPSS= 0b10;
  7998  1577  0818               	movf	24,w	;volatile
  7999  1578  39F3               	andlw	-13
  8000  1579  3808               	iorlw	8
  8001  157A  0098               	movwf	24	;volatile
  8002                           
  8003                           ;user.c: 154: OPTION_REGbits.INTEDG = 0;
  8004  157B  0021               	movlb	1	; select bank1
  8005  157C  1315               	bcf	21,6	;volatile
  8006                           
  8007                           ;user.c: 155: OPTION_REGbits.PS = 0b111;
  8008  157D  3007               	movlw	7
  8009  157E  0495               	iorwf	21,f	;volatile
  8010                           
  8011                           ;user.c: 158: INTCONbits.INTF = 0;
  8012  157F  108B               	bcf	11,1	;volatile
  8013                           
  8014                           ;user.c: 159: INTCONbits.INTE = 1;
  8015  1580  160B               	bsf	11,4	;volatile
  8016                           
  8017                           ;user.c: 160: INTCONbits.GIE = 1;
  8018  1581  178B               	bsf	11,7	;volatile
  8019                           
  8020                           ;user.c: 161: INTCONbits.PEIE = 1;
  8021  1582  170B               	bsf	11,6	;volatile
  8022                           
  8023                           ;user.c: 162: PIE1bits.ADIE=1;
  8024  1583  1711               	bsf	17,6	;volatile
  8025                           
  8026                           ;user.c: 163: INTCONbits.IOCIF= 0;
  8027  1584  100B               	bcf	11,0	;volatile
  8028                           
  8029                           ;user.c: 164: INTCONbits.IOCIE= 1;
  8030  1585  158B               	bsf	11,3	;volatile
  8031                           
  8032                           ;user.c: 167: VREGCONbits.VREGPM= 1;
  8033  1586  0023               	movlb	3	; select bank3
  8034  1587  1497               	bsf	23,1	;volatile
  8035  1588  0008               	return
  8036  1589                     __end_of_InitApp:	
  8037                           
  8038                           	psect	text26
  8039  0800                     __ptext26:	
  8040 ;; *************** function _InitADC *****************
  8041 ;; Defined at:
  8042 ;;		line 212 in file "user.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    3
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_HwInit
  8067 ;;		_SenseTestStrip
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           
  8072                           ;psect for function _InitADC
  8073  0800                     _InitADC:	
  8074                           
  8075                           ;user.c: 214: ADCON0 = 0x01;
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in _InitADC: [wreg]
  8079  0800  3001               	movlw	1
  8080  0801  0021               	movlb	1	; select bank1
  8081  0802  009D               	movwf	29	;volatile
  8082                           
  8083                           ;user.c: 215: ADCON1 = 0xA3;
  8084  0803  30A3               	movlw	163
  8085  0804  009E               	movwf	30	;volatile
  8086                           
  8087                           ;user.c: 216: ADCON2 = 0x0F;
  8088  0805  300F               	movlw	15
  8089  0806  009F               	movwf	31	;volatile
  8090  0807  0008               	return
  8091  0808                     __end_of_InitADC:	
  8092                           
  8093                           	psect	text27
  8094  11FA                     __ptext27:	
  8095 ;; *************** function _ConfigureOscillator *****************
  8096 ;; Defined at:
  8097 ;;		line 186 in file "user.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      void 
  8104 ;; Registers used:
  8105 ;;		wreg
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;Total ram usage:        0 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    3
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_HwInit
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           
  8126                           ;psect for function _ConfigureOscillator
  8127  11FA                     _ConfigureOscillator:	
  8128                           
  8129                           ;user.c: 193: OSCCON = 0x68;
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _ConfigureOscillator: [wreg]
  8133  11FA  3068               	movlw	104
  8134  11FB  0021               	movlb	1	; select bank1
  8135  11FC  0099               	movwf	25	;volatile
  8136  11FD  0008               	return
  8137  11FE                     __end_of_ConfigureOscillator:	
  8138                           
  8139                           	psect	text28
  8140  168C                     __ptext28:	
  8141 ;; *************** function _DisplaySavedGlucoReading *****************
  8142 ;; Defined at:
  8143 ;;		line 153 in file "EEPROM.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;		None
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  read_mgdl       3    2[BANK1 ] float 
  8148 ;;  read_mgdl_in    2    0[BANK1 ] int 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0, pclath, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;Total ram usage:        7 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    6
  8165 ;; This function calls:
  8166 ;;		_LCDClear
  8167 ;;		___awdiv
  8168 ;;		___awtoft
  8169 ;;		___ftmul
  8170 ;;		___fttol
  8171 ;;		_gotoXY
  8172 ;; This function is called by:
  8173 ;;		_main
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           
  8178                           ;psect for function _DisplaySavedGlucoReading
  8179  168C                     _DisplaySavedGlucoReading:	
  8180                           
  8181                           ;EEPROM.c: 155: float read_mgdl=0;
  8182                           
  8183                           ;incstack = 0
  8184                           ; Regs used in _DisplaySavedGlucoReading: [wreg+status,2+status,0+pclath+cstack]
  8185  168C  3000               	movlw	0
  8186  168D  0021               	movlb	1	; select bank1
  8187  168E  00E2               	movwf	DisplaySavedGlucoReading@read_mgdl^(0+128)
  8188  168F  3000               	movlw	0
  8189  1690  00E3               	movwf	(DisplaySavedGlucoReading@read_mgdl+1)^(0+128)
  8190  1691  3000               	movlw	0
  8191  1692  00E4               	movwf	(DisplaySavedGlucoReading@read_mgdl+2)^(0+128)
  8192                           
  8193                           ;EEPROM.c: 156: int read_mgdl_int = 0;
  8194  1693  01E0               	clrf	DisplaySavedGlucoReading@read_mgdl_int^(0+128)
  8195  1694  01E1               	clrf	(DisplaySavedGlucoReading@read_mgdl_int+1)^(0+128)
  8196                           
  8197                           ;EEPROM.c: 158: read_mgdl = gYmmolRead + (gYmmolDecimalRead/10);
  8198  1695  300A               	movlw	10
  8199  1696  0020               	movlb	0	; select bank0
  8200  1697  00A9               	movwf	___awdiv@divisor
  8201  1698  3000               	movlw	0
  8202  1699  00AA               	movwf	___awdiv@divisor+1
  8203  169A  0021               	movlb	1	; select bank1
  8204  169B  084B               	movf	_gYmmolDecimalRead^(0+128),w
  8205  169C  0020               	movlb	0	; select bank0
  8206  169D  00D9               	movwf	??_DisplaySavedGlucoReading
  8207  169E  01DA               	clrf	??_DisplaySavedGlucoReading+1
  8208  169F  0859               	movf	??_DisplaySavedGlucoReading,w
  8209  16A0  00AB               	movwf	___awdiv@dividend
  8210  16A1  085A               	movf	??_DisplaySavedGlucoReading+1,w
  8211  16A2  00AC               	movwf	___awdiv@dividend+1
  8212  16A3  3195  25D6  3196   	fcall	___awdiv
  8213  16A6  0021               	movlb	1	; select bank1
  8214  16A7  084C               	movf	_gYmmolRead^(0+128),w
  8215  16A8  0020               	movlb	0	; select bank0
  8216  16A9  0729               	addwf	?___awdiv,w
  8217  16AA  00B2               	movwf	___awtoft@c
  8218  16AB  082A               	movf	?___awdiv+1,w
  8219  16AC  1803               	skipnc
  8220  16AD  0A2A               	incf	?___awdiv+1,w
  8221  16AE  00B3               	movwf	___awtoft@c+1
  8222  16AF  3193  231D  3196   	fcall	___awtoft
  8223  16B2  0020               	movlb	0	; select bank0
  8224  16B3  0832               	movf	?___awtoft,w
  8225  16B4  0021               	movlb	1	; select bank1
  8226  16B5  00E2               	movwf	DisplaySavedGlucoReading@read_mgdl^(0+128)
  8227  16B6  0020               	movlb	0	; select bank0
  8228  16B7  0833               	movf	?___awtoft+1,w
  8229  16B8  0021               	movlb	1	; select bank1
  8230  16B9  00E3               	movwf	(DisplaySavedGlucoReading@read_mgdl+1)^(0+128)
  8231  16BA  0020               	movlb	0	; select bank0
  8232  16BB  0834               	movf	?___awtoft+2,w
  8233  16BC  0021               	movlb	1	; select bank1
  8234  16BD  00E4               	movwf	(DisplaySavedGlucoReading@read_mgdl+2)^(0+128)
  8235                           
  8236                           ;EEPROM.c: 159: read_mgdl = read_mgdl*18;
  8237  16BE  3000               	movlw	0
  8238  16BF  0020               	movlb	0	; select bank0
  8239  16C0  00C9               	movwf	___ftmul@f1
  8240  16C1  3090               	movlw	144
  8241  16C2  00CA               	movwf	___ftmul@f1+1
  8242  16C3  3041               	movlw	65
  8243  16C4  00CB               	movwf	___ftmul@f1+2
  8244  16C5  0021               	movlb	1	; select bank1
  8245  16C6  0862               	movf	DisplaySavedGlucoReading@read_mgdl^(0+128),w
  8246  16C7  0020               	movlb	0	; select bank0
  8247  16C8  00CC               	movwf	___ftmul@f2
  8248  16C9  0021               	movlb	1	; select bank1
  8249  16CA  0863               	movf	(DisplaySavedGlucoReading@read_mgdl+1)^(0+128),w
  8250  16CB  0020               	movlb	0	; select bank0
  8251  16CC  00CD               	movwf	___ftmul@f2+1
  8252  16CD  0021               	movlb	1	; select bank1
  8253  16CE  0864               	movf	(DisplaySavedGlucoReading@read_mgdl+2)^(0+128),w
  8254  16CF  0020               	movlb	0	; select bank0
  8255  16D0  00CE               	movwf	___ftmul@f2+2
  8256  16D1  3189  21A9  3196   	fcall	___ftmul
  8257  16D4  0020               	movlb	0	; select bank0
  8258  16D5  0849               	movf	?___ftmul,w
  8259  16D6  0021               	movlb	1	; select bank1
  8260  16D7  00E2               	movwf	DisplaySavedGlucoReading@read_mgdl^(0+128)
  8261  16D8  0020               	movlb	0	; select bank0
  8262  16D9  084A               	movf	?___ftmul+1,w
  8263  16DA  0021               	movlb	1	; select bank1
  8264  16DB  00E3               	movwf	(DisplaySavedGlucoReading@read_mgdl+1)^(0+128)
  8265  16DC  0020               	movlb	0	; select bank0
  8266  16DD  084B               	movf	?___ftmul+2,w
  8267  16DE  0021               	movlb	1	; select bank1
  8268  16DF  00E4               	movwf	(DisplaySavedGlucoReading@read_mgdl+2)^(0+128)
  8269                           
  8270                           ;EEPROM.c: 160: read_mgdl_int = (int)read_mgdl;
  8271  16E0  0862               	movf	DisplaySavedGlucoReading@read_mgdl^(0+128),w
  8272  16E1  0020               	movlb	0	; select bank0
  8273  16E2  00A9               	movwf	___fttol@f1
  8274  16E3  0021               	movlb	1	; select bank1
  8275  16E4  0863               	movf	(DisplaySavedGlucoReading@read_mgdl+1)^(0+128),w
  8276  16E5  0020               	movlb	0	; select bank0
  8277  16E6  00AA               	movwf	___fttol@f1+1
  8278  16E7  0021               	movlb	1	; select bank1
  8279  16E8  0864               	movf	(DisplaySavedGlucoReading@read_mgdl+2)^(0+128),w
  8280  16E9  0020               	movlb	0	; select bank0
  8281  16EA  00AB               	movwf	___fttol@f1+2
  8282  16EB  3197  2779  3196   	fcall	___fttol
  8283  16EE  0020               	movlb	0	; select bank0
  8284  16EF  082A               	movf	?___fttol+1,w
  8285  16F0  0021               	movlb	1	; select bank1
  8286  16F1  00E1               	movwf	(DisplaySavedGlucoReading@read_mgdl_int+1)^(0+128)
  8287  16F2  0020               	movlb	0	; select bank0
  8288  16F3  0829               	movf	?___fttol,w
  8289  16F4  0021               	movlb	1	; select bank1
  8290  16F5  00E0               	movwf	DisplaySavedGlucoReading@read_mgdl_int^(0+128)
  8291                           
  8292                           ;EEPROM.c: 162: LCDClear();
  8293  16F6  3193  2364  3196   	fcall	_LCDClear
  8294                           
  8295                           ;EEPROM.c: 164: gotoXY(0,1);
  8296  16F9  0020               	movlb	0	; select bank0
  8297  16FA  01B4               	clrf	gotoXY@y
  8298  16FB  0AB4               	incf	gotoXY@y,f
  8299  16FC  3000               	movlw	0
  8300  16FD  3192  227B         	fcall	_gotoXY
  8301                           
  8302                           ;EEPROM.c: 166: __nop();
  8303  16FF  0000               	nop
  8304  1700  0008               	return
  8305  1701                     __end_of_DisplaySavedGlucoReading:	
  8306                           
  8307                           	psect	text29
  8308  1779                     __ptext29:	
  8309 ;; *************** function ___fttol *****************
  8310 ;; Defined at:
  8311 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  f1              3    9[BANK0 ] float 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  lval            4   18[BANK0 ] unsigned long 
  8316 ;;  exp1            1   22[BANK0 ] unsigned char 
  8317 ;;  sign1           1   17[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  4    9[BANK0 ] long 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;Total ram usage:       14 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:    3
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_DisplaySavedGlucoReading
  8338 ;;		_main
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           
  8343                           ;psect for function ___fttol
  8344  1779                     ___fttol:	
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8348  1779  0020               	movlb	0	; select bank0
  8349  177A  0829               	movf	___fttol@f1,w
  8350  177B  00AD               	movwf	??___fttol
  8351  177C  082A               	movf	___fttol@f1+1,w
  8352  177D  00AE               	movwf	??___fttol+1
  8353  177E  082B               	movf	___fttol@f1+2,w
  8354  177F  00AF               	movwf	??___fttol+2
  8355  1780  1003               	clrc
  8356  1781  0D2E               	rlf	??___fttol+1,w
  8357  1782  0D2F               	rlf	??___fttol+2,w
  8358  1783  00B0               	movwf	??___fttol+3
  8359  1784  0830               	movf	??___fttol+3,w
  8360  1785  00B6               	movwf	___fttol@exp1
  8361  1786  0836               	movf	___fttol@exp1,w
  8362  1787  1D03               	btfss	3,2
  8363  1788  2F92               	goto	l5118
  8364  1789  3000               	movlw	0
  8365  178A  00AC               	movwf	?___fttol+3
  8366  178B  3000               	movlw	0
  8367  178C  00AB               	movwf	?___fttol+2
  8368  178D  3000               	movlw	0
  8369  178E  00AA               	movwf	?___fttol+1
  8370  178F  3000               	movlw	0
  8371  1790  00A9               	movwf	?___fttol
  8372  1791  0008               	return
  8373  1792                     l5118:	
  8374  1792  0829               	movf	___fttol@f1,w
  8375  1793  00AD               	movwf	??___fttol
  8376  1794  082A               	movf	___fttol@f1+1,w
  8377  1795  00AE               	movwf	??___fttol+1
  8378  1796  082B               	movf	___fttol@f1+2,w
  8379  1797  00AF               	movwf	??___fttol+2
  8380  1798  3017               	movlw	23
  8381  1799                     u5565:	
  8382  1799  36AF               	lsrf	??___fttol+2,f
  8383  179A  0CAE               	rrf	??___fttol+1,f
  8384  179B  0CAD               	rrf	??___fttol,f
  8385  179C  0B89               	decfsz	9,f
  8386  179D  2F99               	goto	u5565
  8387  179E  082D               	movf	??___fttol,w
  8388  179F  00B0               	movwf	??___fttol+3
  8389  17A0  0830               	movf	??___fttol+3,w
  8390  17A1  00B1               	movwf	___fttol@sign1
  8391  17A2  17AA               	bsf	___fttol@f1+1,7
  8392  17A3  30FF               	movlw	255
  8393  17A4  05A9               	andwf	___fttol@f1,f
  8394  17A5  30FF               	movlw	255
  8395  17A6  05AA               	andwf	___fttol@f1+1,f
  8396  17A7  3000               	movlw	0
  8397  17A8  05AB               	andwf	___fttol@f1+2,f
  8398  17A9  0829               	movf	___fttol@f1,w
  8399  17AA  00B2               	movwf	___fttol@lval
  8400  17AB  082A               	movf	___fttol@f1+1,w
  8401  17AC  00B3               	movwf	___fttol@lval+1
  8402  17AD  082B               	movf	___fttol@f1+2,w
  8403  17AE  00B4               	movwf	___fttol@lval+2
  8404  17AF  01B5               	clrf	___fttol@lval+3
  8405  17B0  308E               	movlw	142
  8406  17B1  02B6               	subwf	___fttol@exp1,f
  8407  17B2  1FB6               	btfss	___fttol@exp1,7
  8408  17B3  2FD0               	goto	l5138
  8409  17B4  0836               	movf	___fttol@exp1,w
  8410  17B5  3A80               	xorlw	128
  8411  17B6  3E8F               	addlw	143
  8412  17B7  1803               	skipnc
  8413  17B8  2FC2               	goto	l5136
  8414  17B9  3000               	movlw	0
  8415  17BA  00AC               	movwf	?___fttol+3
  8416  17BB  3000               	movlw	0
  8417  17BC  00AB               	movwf	?___fttol+2
  8418  17BD  3000               	movlw	0
  8419  17BE  00AA               	movwf	?___fttol+1
  8420  17BF  3000               	movlw	0
  8421  17C0  00A9               	movwf	?___fttol
  8422  17C1  0008               	return
  8423  17C2                     l5136:	
  8424  17C2  3001               	movlw	1
  8425  17C3                     u5595:	
  8426  17C3  36B5               	lsrf	___fttol@lval+3,f
  8427  17C4  0CB4               	rrf	___fttol@lval+2,f
  8428  17C5  0CB3               	rrf	___fttol@lval+1,f
  8429  17C6  0CB2               	rrf	___fttol@lval,f
  8430  17C7  0B89               	decfsz	9,f
  8431  17C8  2FC3               	goto	u5595
  8432  17C9  3001               	movlw	1
  8433  17CA  00AD               	movwf	??___fttol
  8434  17CB  082D               	movf	??___fttol,w
  8435  17CC  07B6               	addwf	___fttol@exp1,f
  8436  17CD  1903               	btfsc	3,2
  8437  17CE  2FE9               	goto	l5146
  8438  17CF  2FC2               	goto	l5136
  8439  17D0                     l5138:	
  8440  17D0  3018               	movlw	24
  8441  17D1  0236               	subwf	___fttol@exp1,w
  8442  17D2  1C03               	skipc
  8443  17D3  2FE6               	goto	l1072
  8444  17D4  3000               	movlw	0
  8445  17D5  00AC               	movwf	?___fttol+3
  8446  17D6  3000               	movlw	0
  8447  17D7  00AB               	movwf	?___fttol+2
  8448  17D8  3000               	movlw	0
  8449  17D9  00AA               	movwf	?___fttol+1
  8450  17DA  3000               	movlw	0
  8451  17DB  00A9               	movwf	?___fttol
  8452  17DC  0008               	return
  8453  17DD                     l5144:	
  8454  17DD  3001               	movlw	1
  8455  17DE                     u5625:	
  8456  17DE  35B2               	lslf	___fttol@lval,f
  8457  17DF  0DB3               	rlf	___fttol@lval+1,f
  8458  17E0  0DB4               	rlf	___fttol@lval+2,f
  8459  17E1  0DB5               	rlf	___fttol@lval+3,f
  8460  17E2  0B89               	decfsz	9,f
  8461  17E3  2FDE               	goto	u5625
  8462  17E4  3001               	movlw	1
  8463  17E5  02B6               	subwf	___fttol@exp1,f
  8464  17E6                     l1072:	
  8465  17E6  0836               	movf	___fttol@exp1,w
  8466  17E7  1D03               	btfss	3,2
  8467  17E8  2FDD               	goto	l5144
  8468  17E9                     l5146:	
  8469  17E9  0831               	movf	___fttol@sign1,w
  8470  17EA  1903               	btfsc	3,2
  8471  17EB  2FF7               	goto	l5150
  8472  17EC  09B2               	comf	___fttol@lval,f
  8473  17ED  09B3               	comf	___fttol@lval+1,f
  8474  17EE  09B4               	comf	___fttol@lval+2,f
  8475  17EF  09B5               	comf	___fttol@lval+3,f
  8476  17F0  0AB2               	incf	___fttol@lval,f
  8477  17F1  1903               	skipnz
  8478  17F2  0AB3               	incf	___fttol@lval+1,f
  8479  17F3  1903               	skipnz
  8480  17F4  0AB4               	incf	___fttol@lval+2,f
  8481  17F5  1903               	skipnz
  8482  17F6  0AB5               	incf	___fttol@lval+3,f
  8483  17F7                     l5150:	
  8484  17F7  0835               	movf	___fttol@lval+3,w
  8485  17F8  00AC               	movwf	?___fttol+3
  8486  17F9  0834               	movf	___fttol@lval+2,w
  8487  17FA  00AB               	movwf	?___fttol+2
  8488  17FB  0833               	movf	___fttol@lval+1,w
  8489  17FC  00AA               	movwf	?___fttol+1
  8490  17FD  0832               	movf	___fttol@lval,w
  8491  17FE  00A9               	movwf	?___fttol
  8492  17FF  0008               	return
  8493  1800                     __end_of___fttol:	
  8494                           
  8495                           	psect	text30
  8496  15D6                     __ptext30:	
  8497 ;; *************** function ___awdiv *****************
  8498 ;; Defined at:
  8499 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  divisor         2    9[BANK0 ] int 
  8502 ;;  dividend        2   11[BANK0 ] int 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  quotient        2   16[BANK0 ] int 
  8505 ;;  sign            1   15[BANK0 ] unsigned char 
  8506 ;;  counter         1   14[BANK0 ] unsigned char 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  2    9[BANK0 ] int 
  8509 ;; Registers used:
  8510 ;;		wreg, status,2, status,0
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;Total ram usage:        9 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:    3
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_DisplaySavedGlucoReading
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function ___awdiv
  8532  15D6                     ___awdiv:	
  8533                           
  8534                           ;incstack = 0
  8535                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8536  15D6  0020               	movlb	0	; select bank0
  8537  15D7  01AF               	clrf	___awdiv@sign
  8538  15D8  1FAA               	btfss	___awdiv@divisor+1,7
  8539  15D9  2DE1               	goto	l4944
  8540  15DA  09A9               	comf	___awdiv@divisor,f
  8541  15DB  09AA               	comf	___awdiv@divisor+1,f
  8542  15DC  0AA9               	incf	___awdiv@divisor,f
  8543  15DD  1903               	skipnz
  8544  15DE  0AAA               	incf	___awdiv@divisor+1,f
  8545  15DF  01AF               	clrf	___awdiv@sign
  8546  15E0  0AAF               	incf	___awdiv@sign,f
  8547  15E1                     l4944:	
  8548  15E1  1FAC               	btfss	___awdiv@dividend+1,7
  8549  15E2  2DEC               	goto	l4950
  8550  15E3  09AB               	comf	___awdiv@dividend,f
  8551  15E4  09AC               	comf	___awdiv@dividend+1,f
  8552  15E5  0AAB               	incf	___awdiv@dividend,f
  8553  15E6  1903               	skipnz
  8554  15E7  0AAC               	incf	___awdiv@dividend+1,f
  8555  15E8  3001               	movlw	1
  8556  15E9  00AD               	movwf	??___awdiv
  8557  15EA  082D               	movf	??___awdiv,w
  8558  15EB  06AF               	xorwf	___awdiv@sign,f
  8559  15EC                     l4950:	
  8560  15EC  01B0               	clrf	___awdiv@quotient
  8561  15ED  01B1               	clrf	___awdiv@quotient+1
  8562  15EE  0829               	movf	___awdiv@divisor,w
  8563  15EF  042A               	iorwf	___awdiv@divisor+1,w
  8564  15F0  1903               	btfsc	3,2
  8565  15F1  2E1B               	goto	l4972
  8566  15F2  01AE               	clrf	___awdiv@counter
  8567  15F3  0AAE               	incf	___awdiv@counter,f
  8568  15F4                     l4960:	
  8569  15F4  1BAA               	btfsc	___awdiv@divisor+1,7
  8570  15F5  2E00               	goto	l4962
  8571  15F6  3001               	movlw	1
  8572  15F7                     u5125:	
  8573  15F7  35A9               	lslf	___awdiv@divisor,f
  8574  15F8  0DAA               	rlf	___awdiv@divisor+1,f
  8575  15F9  0B89               	decfsz	9,f
  8576  15FA  2DF7               	goto	u5125
  8577  15FB  3001               	movlw	1
  8578  15FC  00AD               	movwf	??___awdiv
  8579  15FD  082D               	movf	??___awdiv,w
  8580  15FE  07AE               	addwf	___awdiv@counter,f
  8581  15FF  2DF4               	goto	l4960
  8582  1600                     l4962:	
  8583  1600  3001               	movlw	1
  8584  1601                     u5145:	
  8585  1601  35B0               	lslf	___awdiv@quotient,f
  8586  1602  0DB1               	rlf	___awdiv@quotient+1,f
  8587  1603  0B89               	decfsz	9,f
  8588  1604  2E01               	goto	u5145
  8589  1605  082A               	movf	___awdiv@divisor+1,w
  8590  1606  022C               	subwf	___awdiv@dividend+1,w
  8591  1607  1D03               	skipz
  8592  1608  2E0B               	goto	u5155
  8593  1609  0829               	movf	___awdiv@divisor,w
  8594  160A  022B               	subwf	___awdiv@dividend,w
  8595  160B                     u5155:	
  8596  160B  1C03               	skipc
  8597  160C  2E12               	goto	l4968
  8598  160D  0829               	movf	___awdiv@divisor,w
  8599  160E  02AB               	subwf	___awdiv@dividend,f
  8600  160F  082A               	movf	___awdiv@divisor+1,w
  8601  1610  3BAC               	subwfb	___awdiv@dividend+1,f
  8602  1611  1430               	bsf	___awdiv@quotient,0
  8603  1612                     l4968:	
  8604  1612  3001               	movlw	1
  8605  1613                     u5165:	
  8606  1613  36AA               	lsrf	___awdiv@divisor+1,f
  8607  1614  0CA9               	rrf	___awdiv@divisor,f
  8608  1615  0B89               	decfsz	9,f
  8609  1616  2E13               	goto	u5165
  8610  1617  3001               	movlw	1
  8611  1618  02AE               	subwf	___awdiv@counter,f
  8612  1619  1D03               	btfss	3,2
  8613  161A  2E00               	goto	l4962
  8614  161B                     l4972:	
  8615  161B  082F               	movf	___awdiv@sign,w
  8616  161C  1903               	btfsc	3,2
  8617  161D  2E23               	goto	l4976
  8618  161E  09B0               	comf	___awdiv@quotient,f
  8619  161F  09B1               	comf	___awdiv@quotient+1,f
  8620  1620  0AB0               	incf	___awdiv@quotient,f
  8621  1621  1903               	skipnz
  8622  1622  0AB1               	incf	___awdiv@quotient+1,f
  8623  1623                     l4976:	
  8624  1623  0831               	movf	___awdiv@quotient+1,w
  8625  1624  00AA               	movwf	?___awdiv+1
  8626  1625  0830               	movf	___awdiv@quotient,w
  8627  1626  00A9               	movwf	?___awdiv
  8628  1627  0008               	return
  8629  1628                     __end_of___awdiv:	
  8630                           
  8631                           	psect	text31
  8632  1364                     __ptext31:	
  8633 ;; *************** function _LCDClear *****************
  8634 ;; Defined at:
  8635 ;;		line 226 in file "Nokia5110/Nokia.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  index           2   24[BANK0 ] int 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        3 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    5
  8656 ;; This function calls:
  8657 ;;		_LCDWrite
  8658 ;;		_gotoXY
  8659 ;; This function is called by:
  8660 ;;		_SetTime
  8661 ;;		_DisplaySavedGlucoReading
  8662 ;;		_main
  8663 ;;		_SenseTestStrip
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _LCDClear
  8669  1364                     _LCDClear:	
  8670                           
  8671                           ;Nokia.c: 227: for (int index = 0 ; index < (84 * (48 / 8)) ; index++){
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  8675  1364  0020               	movlb	0	; select bank0
  8676  1365  01B8               	clrf	LCDClear@index
  8677  1366  01B9               	clrf	LCDClear@index+1
  8678  1367  0839               	movf	LCDClear@index+1,w
  8679  1368  3A80               	xorlw	128
  8680  1369  00B7               	movwf	??_LCDClear
  8681  136A  3081               	movlw	129
  8682  136B  0237               	subwf	??_LCDClear,w
  8683  136C  1D03               	skipz
  8684  136D  2B70               	goto	u4805
  8685  136E  30F8               	movlw	248
  8686  136F  0238               	subwf	LCDClear@index,w
  8687  1370                     u4805:	
  8688  1370  1803               	btfsc	3,0
  8689  1371  2B88               	goto	l4724
  8690  1372                     l4718:	
  8691                           
  8692                           ;Nokia.c: 228: LCDWrite(1, 0x00);
  8693  1372  0020               	movlb	0	; select bank0
  8694  1373  01AF               	clrf	LCDWrite@data
  8695  1374  3001               	movlw	1
  8696  1375  3193  23E7  3193   	fcall	_LCDWrite
  8697  1378  3001               	movlw	1
  8698  1379  0020               	movlb	0	; select bank0
  8699  137A  07B8               	addwf	LCDClear@index,f
  8700  137B  3000               	movlw	0
  8701  137C  3DB9               	addwfc	LCDClear@index+1,f
  8702  137D  0839               	movf	LCDClear@index+1,w
  8703  137E  3A80               	xorlw	128
  8704  137F  00B7               	movwf	??_LCDClear
  8705  1380  3081               	movlw	129
  8706  1381  0237               	subwf	??_LCDClear,w
  8707  1382  1D03               	skipz
  8708  1383  2B86               	goto	u4815
  8709  1384  30F8               	movlw	248
  8710  1385  0238               	subwf	LCDClear@index,w
  8711  1386                     u4815:	
  8712  1386  1C03               	skipc
  8713  1387  2B72               	goto	l4718
  8714  1388                     l4724:	
  8715                           
  8716                           ;Nokia.c: 229: }
  8717                           ;Nokia.c: 230: gotoXY(0, 0);
  8718  1388  0020               	movlb	0	; select bank0
  8719  1389  01B4               	clrf	gotoXY@y
  8720  138A  3000               	movlw	0
  8721  138B  3192  227B         	fcall	_gotoXY
  8722  138D  0008               	return
  8723  138E                     __end_of_LCDClear:	
  8724                           
  8725                           	psect	text32
  8726  127B                     __ptext32:	
  8727 ;; *************** function _gotoXY *****************
  8728 ;; Defined at:
  8729 ;;		line 190 in file "Nokia5110/Nokia.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  x               1    wreg     unsigned char 
  8732 ;;  y               1   20[BANK0 ] unsigned char 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  x               1   22[BANK0 ] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0, pclath, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8744 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;Total ram usage:        3 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    4
  8751 ;; This function calls:
  8752 ;;		_LCDWrite
  8753 ;; This function is called by:
  8754 ;;		_SetTime
  8755 ;;		_DisplaySavedGlucoReading
  8756 ;;		_main
  8757 ;;		_SenseTestStrip
  8758 ;;		_LCDClear
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           
  8763                           ;psect for function _gotoXY
  8764  127B                     _gotoXY:	
  8765                           
  8766                           ;incstack = 0
  8767                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  8768                           ;gotoXY@x stored from wreg
  8769  127B  0020               	movlb	0	; select bank0
  8770  127C  00B6               	movwf	gotoXY@x
  8771                           
  8772                           ;Nokia.c: 191: LCDWrite(0, 0x80 | x);
  8773  127D  0836               	movf	gotoXY@x,w
  8774  127E  3880               	iorlw	128
  8775  127F  00B5               	movwf	??_gotoXY
  8776  1280  0835               	movf	??_gotoXY,w
  8777  1281  00AF               	movwf	LCDWrite@data
  8778  1282  3000               	movlw	0
  8779  1283  3193  23E7  3192   	fcall	_LCDWrite
  8780                           
  8781                           ;Nokia.c: 192: LCDWrite(0, 0x40 | y);
  8782  1286  0020               	movlb	0	; select bank0
  8783  1287  0834               	movf	gotoXY@y,w
  8784  1288  3840               	iorlw	64
  8785  1289  00B5               	movwf	??_gotoXY
  8786  128A  0835               	movf	??_gotoXY,w
  8787  128B  00AF               	movwf	LCDWrite@data
  8788  128C  3000               	movlw	0
  8789  128D  3193  23E7         	fcall	_LCDWrite
  8790  128F  0008               	return
  8791  1290                     __end_of_gotoXY:	
  8792                           
  8793                           	psect	text33
  8794  13E7                     __ptext33:	
  8795 ;; *************** function _LCDWrite *****************
  8796 ;; Defined at:
  8797 ;;		line 263 in file "Nokia5110/Nokia.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  data_or_comm    1    wreg     unsigned char 
  8800 ;;  data            1   15[BANK0 ] unsigned char 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  data_or_comm    1   17[BANK0 ] unsigned char 
  8803 ;;  i               1   19[BANK0 ] unsigned char 
  8804 ;;  d               1   18[BANK0 ] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;Total ram usage:        5 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    3
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_gotoXY
  8825 ;;		_LCDCharacter
  8826 ;;		_LCDClear
  8827 ;;		_LCDInit
  8828 ;;		_LCDBigNum
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _LCDWrite
  8834  13E7                     _LCDWrite:	
  8835                           
  8836                           ;incstack = 0
  8837                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  8838                           ;LCDWrite@data_or_command stored from wreg
  8839  13E7  0020               	movlb	0	; select bank0
  8840  13E8  00B1               	movwf	LCDWrite@data_or_command
  8841                           
  8842                           ;Nokia.c: 264: char i,d;
  8843                           ;Nokia.c: 265: d=data;
  8844  13E9  082F               	movf	LCDWrite@data,w
  8845  13EA  00B0               	movwf	??_LCDWrite
  8846  13EB  0830               	movf	??_LCDWrite,w
  8847  13EC  00B2               	movwf	LCDWrite@d
  8848                           
  8849                           ;Nokia.c: 266: if(data_or_command==0)LATCbits.LATC3=0;
  8850  13ED  0831               	movf	LCDWrite@data_or_command,w
  8851  13EE  1D03               	btfss	3,2
  8852  13EF  2BF3               	goto	l634
  8853  13F0  0022               	movlb	2	; select bank2
  8854  13F1  118E               	bcf	14,3	;volatile
  8855  13F2  2BF5               	goto	l635
  8856  13F3                     l634:	
  8857                           
  8858                           ;Nokia.c: 267: else LATCbits.LATC3=1;
  8859  13F3  0022               	movlb	2	; select bank2
  8860  13F4  158E               	bsf	14,3	;volatile
  8861  13F5                     l635:	
  8862                           
  8863                           ;Nokia.c: 270: LATCbits.LATC6=0;
  8864  13F5  130E               	bcf	14,6	;volatile
  8865                           
  8866                           ;Nokia.c: 272: for(i=0;i<8;i++) {
  8867  13F6  0020               	movlb	0	; select bank0
  8868  13F7  01B3               	clrf	LCDWrite@i
  8869  13F8  3008               	movlw	8
  8870  13F9  0233               	subwf	LCDWrite@i,w
  8871  13FA  1803               	btfsc	3,0
  8872  13FB  2C13               	goto	l637
  8873  13FC                     l636:	
  8874                           
  8875                           ;Nokia.c: 273: LATCbits.LATC4=0;
  8876  13FC  0022               	movlb	2	; select bank2
  8877  13FD  120E               	bcf	14,4	;volatile
  8878                           
  8879                           ;Nokia.c: 274: if(d&0x80)LATCbits.LATC4=1;
  8880  13FE  0020               	movlb	0	; select bank0
  8881  13FF  1FB2               	btfss	LCDWrite@d,7
  8882  1400  2C03               	goto	l638
  8883  1401  0022               	movlb	2	; select bank2
  8884  1402  160E               	bsf	14,4	;volatile
  8885  1403                     l638:	
  8886                           
  8887                           ;Nokia.c: 275: LATCbits.LATC5=1;
  8888  1403  0022               	movlb	2	; select bank2
  8889  1404  168E               	bsf	14,5	;volatile
  8890                           
  8891                           ;Nokia.c: 276: d<<=1;
  8892  1405  1003               	clrc
  8893  1406  0020               	movlb	0	; select bank0
  8894  1407  0DB2               	rlf	LCDWrite@d,f
  8895                           
  8896                           ;Nokia.c: 277: LATCbits.LATC5=0;
  8897  1408  0022               	movlb	2	; select bank2
  8898  1409  128E               	bcf	14,5	;volatile
  8899  140A  3001               	movlw	1
  8900  140B  0020               	movlb	0	; select bank0
  8901  140C  00B0               	movwf	??_LCDWrite
  8902  140D  0830               	movf	??_LCDWrite,w
  8903  140E  07B3               	addwf	LCDWrite@i,f
  8904  140F  3008               	movlw	8
  8905  1410  0233               	subwf	LCDWrite@i,w
  8906  1411  1C03               	skipc
  8907  1412  2BFC               	goto	l636
  8908  1413                     l637:	
  8909                           
  8910                           ;Nokia.c: 278: }
  8911                           ;Nokia.c: 279: LATCbits.LATC6=1;
  8912  1413  0022               	movlb	2	; select bank2
  8913  1414  170E               	bsf	14,6	;volatile
  8914  1415  0008               	return
  8915  1416                     __end_of_LCDWrite:	
  8916                           
  8917                           	psect	text34
  8918  14BA                     __ptext34:	
  8919 ;; *************** function _Delay_1_Second *****************
  8920 ;; Defined at:
  8921 ;;		line 534 in file "user.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;		None
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;Total ram usage:        3 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    3
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_main
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function _Delay_1_Second
  8951  14BA                     _Delay_1_Second:	
  8952                           
  8953                           ;user.c: 536: _delay((unsigned long)((200)*(8000000/4000.0)));
  8954                           
  8955                           ;incstack = 0
  8956                           ; Regs used in _Delay_1_Second: [wreg]
  8957  14BA  3003               	movlw	3
  8958  14BB  0020               	movlb	0	; select bank0
  8959  14BC  00AB               	movwf	??_Delay_1_Second+2
  8960  14BD  3008               	movlw	8
  8961  14BE  00AA               	movwf	??_Delay_1_Second+1
  8962  14BF  3078               	movlw	120
  8963  14C0  00A9               	movwf	??_Delay_1_Second
  8964  14C1                     u6307:	
  8965  14C1  0BA9               	decfsz	??_Delay_1_Second,f
  8966  14C2  2CC1               	goto	u6307
  8967  14C3  0BAA               	decfsz	??_Delay_1_Second+1,f
  8968  14C4  2CC1               	goto	u6307
  8969  14C5  0BAB               	decfsz	??_Delay_1_Second+2,f
  8970  14C6  2CC1               	goto	u6307
  8971                           
  8972                           ;user.c: 537: _delay((unsigned long)((200)*(8000000/4000.0)));
  8973  14C7  3003               	movlw	3
  8974  14C8  0020               	movlb	0	; select bank0
  8975  14C9  00AB               	movwf	??_Delay_1_Second+2
  8976  14CA  3008               	movlw	8
  8977  14CB  00AA               	movwf	??_Delay_1_Second+1
  8978  14CC  3078               	movlw	120
  8979  14CD  00A9               	movwf	??_Delay_1_Second
  8980  14CE                     u6317:	
  8981  14CE  0BA9               	decfsz	??_Delay_1_Second,f
  8982  14CF  2CCE               	goto	u6317
  8983  14D0  0BAA               	decfsz	??_Delay_1_Second+1,f
  8984  14D1  2CCE               	goto	u6317
  8985  14D2  0BAB               	decfsz	??_Delay_1_Second+2,f
  8986  14D3  2CCE               	goto	u6317
  8987                           
  8988                           ;user.c: 538: _delay((unsigned long)((200)*(8000000/4000.0)));
  8989  14D4  3003               	movlw	3
  8990  14D5  0020               	movlb	0	; select bank0
  8991  14D6  00AB               	movwf	??_Delay_1_Second+2
  8992  14D7  3008               	movlw	8
  8993  14D8  00AA               	movwf	??_Delay_1_Second+1
  8994  14D9  3078               	movlw	120
  8995  14DA  00A9               	movwf	??_Delay_1_Second
  8996  14DB                     u6327:	
  8997  14DB  0BA9               	decfsz	??_Delay_1_Second,f
  8998  14DC  2CDB               	goto	u6327
  8999  14DD  0BAA               	decfsz	??_Delay_1_Second+1,f
  9000  14DE  2CDB               	goto	u6327
  9001  14DF  0BAB               	decfsz	??_Delay_1_Second+2,f
  9002  14E0  2CDB               	goto	u6327
  9003                           
  9004                           ;user.c: 539: _delay((unsigned long)((200)*(8000000/4000.0)));
  9005  14E1  3003               	movlw	3
  9006  14E2  0020               	movlb	0	; select bank0
  9007  14E3  00AB               	movwf	??_Delay_1_Second+2
  9008  14E4  3008               	movlw	8
  9009  14E5  00AA               	movwf	??_Delay_1_Second+1
  9010  14E6  3078               	movlw	120
  9011  14E7  00A9               	movwf	??_Delay_1_Second
  9012  14E8                     u6337:	
  9013  14E8  0BA9               	decfsz	??_Delay_1_Second,f
  9014  14E9  2CE8               	goto	u6337
  9015  14EA  0BAA               	decfsz	??_Delay_1_Second+1,f
  9016  14EB  2CE8               	goto	u6337
  9017  14EC  0BAB               	decfsz	??_Delay_1_Second+2,f
  9018  14ED  2CE8               	goto	u6337
  9019                           
  9020                           ;user.c: 540: _delay((unsigned long)((200)*(8000000/4000.0)));
  9021  14EE  3003               	movlw	3
  9022  14EF  0020               	movlb	0	; select bank0
  9023  14F0  00AB               	movwf	??_Delay_1_Second+2
  9024  14F1  3008               	movlw	8
  9025  14F2  00AA               	movwf	??_Delay_1_Second+1
  9026  14F3  3078               	movlw	120
  9027  14F4  00A9               	movwf	??_Delay_1_Second
  9028  14F5                     u6347:	
  9029  14F5  0BA9               	decfsz	??_Delay_1_Second,f
  9030  14F6  2CF5               	goto	u6347
  9031  14F7  0BAA               	decfsz	??_Delay_1_Second+1,f
  9032  14F8  2CF5               	goto	u6347
  9033  14F9  0BAB               	decfsz	??_Delay_1_Second+2,f
  9034  14FA  2CF5               	goto	u6347
  9035  14FB  0008               	return
  9036  14FC                     __end_of_Delay_1_Second:	
  9037                           
  9038                           	psect	text35
  9039  086D                     __ptext35:	
  9040 ;; *************** function _CalcGlucose *****************
  9041 ;; Defined at:
  9042 ;;		line 385 in file "glucose_meter_main.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0, pclath, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    5
  9063 ;; This function calls:
  9064 ;;		___awtoft
  9065 ;;		___ftadd
  9066 ;;		___ftge
  9067 ;;		___ftmul
  9068 ;; This function is called by:
  9069 ;;		_main
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           
  9074                           ;psect for function _CalcGlucose
  9075  086D                     _CalcGlucose:	
  9076                           
  9077                           ;glucose_meter_main.c: 391: gXadc = (float) gcaptured2SValue;
  9078                           
  9079                           ;incstack = 0
  9080                           ; Regs used in _CalcGlucose: [wreg+status,2+status,0+pclath+cstack]
  9081  086D  0021               	movlb	1	; select bank1
  9082  086E  083F               	movf	(_gcaptured2SValue+1)^(0+128),w
  9083  086F  0020               	movlb	0	; select bank0
  9084  0870  00B3               	movwf	___awtoft@c+1
  9085  0871  0021               	movlb	1	; select bank1
  9086  0872  083E               	movf	_gcaptured2SValue^(0+128),w
  9087  0873  0020               	movlb	0	; select bank0
  9088  0874  00B2               	movwf	___awtoft@c
  9089  0875  3193  231D  3188   	fcall	___awtoft
  9090  0878  0020               	movlb	0	; select bank0
  9091  0879  0832               	movf	?___awtoft,w
  9092  087A  0021               	movlb	1	; select bank1
  9093  087B  00CD               	movwf	_gXadc^(0+128)
  9094  087C  0020               	movlb	0	; select bank0
  9095  087D  0833               	movf	?___awtoft+1,w
  9096  087E  0021               	movlb	1	; select bank1
  9097  087F  00CE               	movwf	(_gXadc+1)^(0+128)
  9098  0880  0020               	movlb	0	; select bank0
  9099  0881  0834               	movf	?___awtoft+2,w
  9100  0882  0021               	movlb	1	; select bank1
  9101  0883  00CF               	movwf	(_gXadc+2)^(0+128)
  9102                           
  9103                           ;glucose_meter_main.c: 393: if (gXadc <=1400)
  9104  0884  3000               	movlw	0
  9105  0885  0020               	movlb	0	; select bank0
  9106  0886  00A9               	movwf	___ftge@ff1
  9107  0887  30AF               	movlw	175
  9108  0888  00AA               	movwf	___ftge@ff1+1
  9109  0889  3044               	movlw	68
  9110  088A  00AB               	movwf	___ftge@ff1+2
  9111  088B  0021               	movlb	1	; select bank1
  9112  088C  084D               	movf	_gXadc^(0+128),w
  9113  088D  0020               	movlb	0	; select bank0
  9114  088E  00AC               	movwf	___ftge@ff2
  9115  088F  0021               	movlb	1	; select bank1
  9116  0890  084E               	movf	(_gXadc+1)^(0+128),w
  9117  0891  0020               	movlb	0	; select bank0
  9118  0892  00AD               	movwf	___ftge@ff2+1
  9119  0893  0021               	movlb	1	; select bank1
  9120  0894  084F               	movf	(_gXadc+2)^(0+128),w
  9121  0895  0020               	movlb	0	; select bank0
  9122  0896  00AE               	movwf	___ftge@ff2+2
  9123  0897  3194  247E  3188   	fcall	___ftge
  9124  089A  1C03               	btfss	3,0
  9125  089B  28CE               	goto	l5498
  9126                           
  9127                           ;glucose_meter_main.c: 394: {
  9128                           ;glucose_meter_main.c: 395: gY = (0.362 * gXadc) + -368;
  9129  089C  3000               	movlw	0
  9130  089D  0020               	movlb	0	; select bank0
  9131  089E  00BC               	movwf	___ftadd@f1
  9132  089F  30B8               	movlw	184
  9133  08A0  00BD               	movwf	___ftadd@f1+1
  9134  08A1  30C3               	movlw	195
  9135  08A2  00BE               	movwf	___ftadd@f1+2
  9136  08A3  3058               	movlw	88
  9137  08A4  00C9               	movwf	___ftmul@f1
  9138  08A5  30B9               	movlw	185
  9139  08A6  00CA               	movwf	___ftmul@f1+1
  9140  08A7  303E               	movlw	62
  9141  08A8  00CB               	movwf	___ftmul@f1+2
  9142  08A9  0021               	movlb	1	; select bank1
  9143  08AA  084D               	movf	_gXadc^(0+128),w
  9144  08AB  0020               	movlb	0	; select bank0
  9145  08AC  00CC               	movwf	___ftmul@f2
  9146  08AD  0021               	movlb	1	; select bank1
  9147  08AE  084E               	movf	(_gXadc+1)^(0+128),w
  9148  08AF  0020               	movlb	0	; select bank0
  9149  08B0  00CD               	movwf	___ftmul@f2+1
  9150  08B1  0021               	movlb	1	; select bank1
  9151  08B2  084F               	movf	(_gXadc+2)^(0+128),w
  9152  08B3  0020               	movlb	0	; select bank0
  9153  08B4  00CE               	movwf	___ftmul@f2+2
  9154  08B5  3189  21A9  3188   	fcall	___ftmul
  9155  08B8  0020               	movlb	0	; select bank0
  9156  08B9  0849               	movf	?___ftmul,w
  9157  08BA  00BF               	movwf	___ftadd@f2
  9158  08BB  084A               	movf	?___ftmul+1,w
  9159  08BC  00C0               	movwf	___ftadd@f2+1
  9160  08BD  084B               	movf	?___ftmul+2,w
  9161  08BE  00C1               	movwf	___ftadd@f2+2
  9162  08BF  318A  225D         	fcall	___ftadd
  9163  08C1  0020               	movlb	0	; select bank0
  9164  08C2  083C               	movf	?___ftadd,w
  9165  08C3  0021               	movlb	1	; select bank1
  9166  08C4  00AB               	movwf	_gY^(0+128)
  9167  08C5  0020               	movlb	0	; select bank0
  9168  08C6  083D               	movf	?___ftadd+1,w
  9169  08C7  0021               	movlb	1	; select bank1
  9170  08C8  00AC               	movwf	(_gY+1)^(0+128)
  9171  08C9  0020               	movlb	0	; select bank0
  9172  08CA  083E               	movf	?___ftadd+2,w
  9173  08CB  0021               	movlb	1	; select bank1
  9174  08CC  00AD               	movwf	(_gY+2)^(0+128)
  9175                           
  9176                           ;glucose_meter_main.c: 397: }
  9177  08CD  0008               	return
  9178  08CE                     l5498:	
  9179                           
  9180                           ;glucose_meter_main.c: 398: else
  9181                           ;glucose_meter_main.c: 399: {
  9182                           ;glucose_meter_main.c: 400: gY = (0.362 * gXadc) + -368;
  9183  08CE  3000               	movlw	0
  9184  08CF  0020               	movlb	0	; select bank0
  9185  08D0  00BC               	movwf	___ftadd@f1
  9186  08D1  30B8               	movlw	184
  9187  08D2  00BD               	movwf	___ftadd@f1+1
  9188  08D3  30C3               	movlw	195
  9189  08D4  00BE               	movwf	___ftadd@f1+2
  9190  08D5  3058               	movlw	88
  9191  08D6  00C9               	movwf	___ftmul@f1
  9192  08D7  30B9               	movlw	185
  9193  08D8  00CA               	movwf	___ftmul@f1+1
  9194  08D9  303E               	movlw	62
  9195  08DA  00CB               	movwf	___ftmul@f1+2
  9196  08DB  0021               	movlb	1	; select bank1
  9197  08DC  084D               	movf	_gXadc^(0+128),w
  9198  08DD  0020               	movlb	0	; select bank0
  9199  08DE  00CC               	movwf	___ftmul@f2
  9200  08DF  0021               	movlb	1	; select bank1
  9201  08E0  084E               	movf	(_gXadc+1)^(0+128),w
  9202  08E1  0020               	movlb	0	; select bank0
  9203  08E2  00CD               	movwf	___ftmul@f2+1
  9204  08E3  0021               	movlb	1	; select bank1
  9205  08E4  084F               	movf	(_gXadc+2)^(0+128),w
  9206  08E5  0020               	movlb	0	; select bank0
  9207  08E6  00CE               	movwf	___ftmul@f2+2
  9208  08E7  3189  21A9  3188   	fcall	___ftmul
  9209  08EA  0020               	movlb	0	; select bank0
  9210  08EB  0849               	movf	?___ftmul,w
  9211  08EC  00BF               	movwf	___ftadd@f2
  9212  08ED  084A               	movf	?___ftmul+1,w
  9213  08EE  00C0               	movwf	___ftadd@f2+1
  9214  08EF  084B               	movf	?___ftmul+2,w
  9215  08F0  00C1               	movwf	___ftadd@f2+2
  9216  08F1  318A  225D         	fcall	___ftadd
  9217  08F3  0020               	movlb	0	; select bank0
  9218  08F4  083C               	movf	?___ftadd,w
  9219  08F5  0021               	movlb	1	; select bank1
  9220  08F6  00AB               	movwf	_gY^(0+128)
  9221  08F7  0020               	movlb	0	; select bank0
  9222  08F8  083D               	movf	?___ftadd+1,w
  9223  08F9  0021               	movlb	1	; select bank1
  9224  08FA  00AC               	movwf	(_gY+1)^(0+128)
  9225  08FB  0020               	movlb	0	; select bank0
  9226  08FC  083E               	movf	?___ftadd+2,w
  9227  08FD  0021               	movlb	1	; select bank1
  9228  08FE  00AD               	movwf	(_gY+2)^(0+128)
  9229  08FF  0008               	return
  9230  0900                     __end_of_CalcGlucose:	
  9231                           
  9232                           	psect	text36
  9233  09A9                     __ptext36:	
  9234 ;; *************** function ___ftmul *****************
  9235 ;; Defined at:
  9236 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  f1              3   41[BANK0 ] float 
  9239 ;;  f2              3   44[BANK0 ] float 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  f3_as_produc    3   52[BANK0 ] unsigned um
  9242 ;;  sign            1   56[BANK0 ] unsigned char 
  9243 ;;  cntr            1   55[BANK0 ] unsigned char 
  9244 ;;  exp             1   51[BANK0 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  3   41[BANK0 ] float 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0, pclath, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9254 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;Total ram usage:       16 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    4
  9261 ;; This function calls:
  9262 ;;		___ftpack
  9263 ;; This function is called by:
  9264 ;;		_DisplaySavedGlucoReading
  9265 ;;		_main
  9266 ;;		_CalcGlucose
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function ___ftmul
  9272  09A9                     ___ftmul:	
  9273                           
  9274                           ;incstack = 0
  9275                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9276  09A9  0020               	movlb	0	; select bank0
  9277  09AA  0849               	movf	___ftmul@f1,w
  9278  09AB  00CF               	movwf	??___ftmul
  9279  09AC  084A               	movf	___ftmul@f1+1,w
  9280  09AD  00D0               	movwf	??___ftmul+1
  9281  09AE  084B               	movf	___ftmul@f1+2,w
  9282  09AF  00D1               	movwf	??___ftmul+2
  9283  09B0  1003               	clrc
  9284  09B1  0D50               	rlf	??___ftmul+1,w
  9285  09B2  0D51               	rlf	??___ftmul+2,w
  9286  09B3  00D2               	movwf	??___ftmul+3
  9287  09B4  0852               	movf	??___ftmul+3,w
  9288  09B5  00D3               	movwf	___ftmul@exp
  9289  09B6  0853               	movf	___ftmul@exp,w
  9290  09B7  1D03               	btfss	3,2
  9291  09B8  29C0               	goto	l5068
  9292  09B9  3000               	movlw	0
  9293  09BA  00C9               	movwf	?___ftmul
  9294  09BB  3000               	movlw	0
  9295  09BC  00CA               	movwf	?___ftmul+1
  9296  09BD  3000               	movlw	0
  9297  09BE  00CB               	movwf	?___ftmul+2
  9298  09BF  0008               	return
  9299  09C0                     l5068:	
  9300  09C0  084C               	movf	___ftmul@f2,w
  9301  09C1  00CF               	movwf	??___ftmul
  9302  09C2  084D               	movf	___ftmul@f2+1,w
  9303  09C3  00D0               	movwf	??___ftmul+1
  9304  09C4  084E               	movf	___ftmul@f2+2,w
  9305  09C5  00D1               	movwf	??___ftmul+2
  9306  09C6  1003               	clrc
  9307  09C7  0D50               	rlf	??___ftmul+1,w
  9308  09C8  0D51               	rlf	??___ftmul+2,w
  9309  09C9  00D2               	movwf	??___ftmul+3
  9310  09CA  0852               	movf	??___ftmul+3,w
  9311  09CB  00D8               	movwf	___ftmul@sign
  9312  09CC  0858               	movf	___ftmul@sign,w
  9313  09CD  1D03               	btfss	3,2
  9314  09CE  29D6               	goto	l5074
  9315  09CF  3000               	movlw	0
  9316  09D0  00C9               	movwf	?___ftmul
  9317  09D1  3000               	movlw	0
  9318  09D2  00CA               	movwf	?___ftmul+1
  9319  09D3  3000               	movlw	0
  9320  09D4  00CB               	movwf	?___ftmul+2
  9321  09D5  0008               	return
  9322  09D6                     l5074:	
  9323  09D6  0858               	movf	___ftmul@sign,w
  9324  09D7  3E7B               	addlw	123
  9325  09D8  00CF               	movwf	??___ftmul
  9326  09D9  084F               	movf	??___ftmul,w
  9327  09DA  07D3               	addwf	___ftmul@exp,f
  9328  09DB  0849               	movf	___ftmul@f1,w
  9329  09DC  00CF               	movwf	??___ftmul
  9330  09DD  084A               	movf	___ftmul@f1+1,w
  9331  09DE  00D0               	movwf	??___ftmul+1
  9332  09DF  084B               	movf	___ftmul@f1+2,w
  9333  09E0  00D1               	movwf	??___ftmul+2
  9334  09E1  3010               	movlw	16
  9335  09E2                     u5455:	
  9336  09E2  36D1               	lsrf	??___ftmul+2,f
  9337  09E3  0CD0               	rrf	??___ftmul+1,f
  9338  09E4  0CCF               	rrf	??___ftmul,f
  9339  09E5  0B89               	decfsz	9,f
  9340  09E6  29E2               	goto	u5455
  9341  09E7  084F               	movf	??___ftmul,w
  9342  09E8  00D2               	movwf	??___ftmul+3
  9343  09E9  0852               	movf	??___ftmul+3,w
  9344  09EA  00D8               	movwf	___ftmul@sign
  9345  09EB  084C               	movf	___ftmul@f2,w
  9346  09EC  00CF               	movwf	??___ftmul
  9347  09ED  084D               	movf	___ftmul@f2+1,w
  9348  09EE  00D0               	movwf	??___ftmul+1
  9349  09EF  084E               	movf	___ftmul@f2+2,w
  9350  09F0  00D1               	movwf	??___ftmul+2
  9351  09F1  3010               	movlw	16
  9352  09F2                     u5465:	
  9353  09F2  36D1               	lsrf	??___ftmul+2,f
  9354  09F3  0CD0               	rrf	??___ftmul+1,f
  9355  09F4  0CCF               	rrf	??___ftmul,f
  9356  09F5  0B89               	decfsz	9,f
  9357  09F6  29F2               	goto	u5465
  9358  09F7  084F               	movf	??___ftmul,w
  9359  09F8  00D2               	movwf	??___ftmul+3
  9360  09F9  0852               	movf	??___ftmul+3,w
  9361  09FA  06D8               	xorwf	___ftmul@sign,f
  9362  09FB  3080               	movlw	128
  9363  09FC  00CF               	movwf	??___ftmul
  9364  09FD  084F               	movf	??___ftmul,w
  9365  09FE  05D8               	andwf	___ftmul@sign,f
  9366  09FF  17CA               	bsf	___ftmul@f1+1,7
  9367  0A00  17CD               	bsf	___ftmul@f2+1,7
  9368  0A01  30FF               	movlw	255
  9369  0A02  05CC               	andwf	___ftmul@f2,f
  9370  0A03  30FF               	movlw	255
  9371  0A04  05CD               	andwf	___ftmul@f2+1,f
  9372  0A05  3000               	movlw	0
  9373  0A06  05CE               	andwf	___ftmul@f2+2,f
  9374  0A07  3000               	movlw	0
  9375  0A08  00D4               	movwf	___ftmul@f3_as_product
  9376  0A09  3000               	movlw	0
  9377  0A0A  00D5               	movwf	___ftmul@f3_as_product+1
  9378  0A0B  3000               	movlw	0
  9379  0A0C  00D6               	movwf	___ftmul@f3_as_product+2
  9380  0A0D  3007               	movlw	7
  9381  0A0E  00CF               	movwf	??___ftmul
  9382  0A0F  084F               	movf	??___ftmul,w
  9383  0A10  00D7               	movwf	___ftmul@cntr
  9384  0A11                     l5086:	
  9385  0A11  1C49               	btfss	___ftmul@f1,0
  9386  0A12  2A19               	goto	l5090
  9387  0A13  084C               	movf	___ftmul@f2,w
  9388  0A14  07D4               	addwf	___ftmul@f3_as_product,f
  9389  0A15  084D               	movf	___ftmul@f2+1,w
  9390  0A16  3DD5               	addwfc	___ftmul@f3_as_product+1,f
  9391  0A17  084E               	movf	___ftmul@f2+2,w
  9392  0A18  3DD6               	addwfc	___ftmul@f3_as_product+2,f
  9393  0A19                     l5090:	
  9394  0A19  3001               	movlw	1
  9395  0A1A                     u5485:	
  9396  0A1A  36CB               	lsrf	___ftmul@f1+2,f
  9397  0A1B  0CCA               	rrf	___ftmul@f1+1,f
  9398  0A1C  0CC9               	rrf	___ftmul@f1,f
  9399  0A1D  0B89               	decfsz	9,f
  9400  0A1E  2A1A               	goto	u5485
  9401  0A1F  3001               	movlw	1
  9402  0A20                     u5495:	
  9403  0A20  35CC               	lslf	___ftmul@f2,f
  9404  0A21  0DCD               	rlf	___ftmul@f2+1,f
  9405  0A22  0DCE               	rlf	___ftmul@f2+2,f
  9406  0A23  0B89               	decfsz	9,f
  9407  0A24  2A20               	goto	u5495
  9408  0A25  3001               	movlw	1
  9409  0A26  02D7               	subwf	___ftmul@cntr,f
  9410  0A27  1D03               	btfss	3,2
  9411  0A28  2A11               	goto	l5086
  9412  0A29  3009               	movlw	9
  9413  0A2A  00CF               	movwf	??___ftmul
  9414  0A2B  084F               	movf	??___ftmul,w
  9415  0A2C  00D7               	movwf	___ftmul@cntr
  9416  0A2D                     l5098:	
  9417  0A2D  1C49               	btfss	___ftmul@f1,0
  9418  0A2E  2A35               	goto	l5102
  9419  0A2F  084C               	movf	___ftmul@f2,w
  9420  0A30  07D4               	addwf	___ftmul@f3_as_product,f
  9421  0A31  084D               	movf	___ftmul@f2+1,w
  9422  0A32  3DD5               	addwfc	___ftmul@f3_as_product+1,f
  9423  0A33  084E               	movf	___ftmul@f2+2,w
  9424  0A34  3DD6               	addwfc	___ftmul@f3_as_product+2,f
  9425  0A35                     l5102:	
  9426  0A35  3001               	movlw	1
  9427  0A36                     u5525:	
  9428  0A36  36CB               	lsrf	___ftmul@f1+2,f
  9429  0A37  0CCA               	rrf	___ftmul@f1+1,f
  9430  0A38  0CC9               	rrf	___ftmul@f1,f
  9431  0A39  0B89               	decfsz	9,f
  9432  0A3A  2A36               	goto	u5525
  9433  0A3B  3001               	movlw	1
  9434  0A3C                     u5535:	
  9435  0A3C  36D6               	lsrf	___ftmul@f3_as_product+2,f
  9436  0A3D  0CD5               	rrf	___ftmul@f3_as_product+1,f
  9437  0A3E  0CD4               	rrf	___ftmul@f3_as_product,f
  9438  0A3F  0B89               	decfsz	9,f
  9439  0A40  2A3C               	goto	u5535
  9440  0A41  3001               	movlw	1
  9441  0A42  02D7               	subwf	___ftmul@cntr,f
  9442  0A43  1D03               	btfss	3,2
  9443  0A44  2A2D               	goto	l5098
  9444  0A45  0854               	movf	___ftmul@f3_as_product,w
  9445  0A46  00A9               	movwf	___ftpack@arg
  9446  0A47  0855               	movf	___ftmul@f3_as_product+1,w
  9447  0A48  00AA               	movwf	___ftpack@arg+1
  9448  0A49  0856               	movf	___ftmul@f3_as_product+2,w
  9449  0A4A  00AB               	movwf	___ftpack@arg+2
  9450  0A4B  0853               	movf	___ftmul@exp,w
  9451  0A4C  00CF               	movwf	??___ftmul
  9452  0A4D  084F               	movf	??___ftmul,w
  9453  0A4E  00AC               	movwf	___ftpack@exp
  9454  0A4F  0858               	movf	___ftmul@sign,w
  9455  0A50  00D0               	movwf	??___ftmul+1
  9456  0A51  0850               	movf	??___ftmul+1,w
  9457  0A52  00AD               	movwf	___ftpack@sign
  9458  0A53  3188  2008         	fcall	___ftpack
  9459  0A55  0020               	movlb	0	; select bank0
  9460  0A56  0829               	movf	?___ftpack,w
  9461  0A57  00C9               	movwf	?___ftmul
  9462  0A58  082A               	movf	?___ftpack+1,w
  9463  0A59  00CA               	movwf	?___ftmul+1
  9464  0A5A  082B               	movf	?___ftpack+2,w
  9465  0A5B  00CB               	movwf	?___ftmul+2
  9466  0A5C  0008               	return
  9467  0A5D                     __end_of___ftmul:	
  9468                           
  9469                           	psect	text37
  9470  147E                     __ptext37:	
  9471 ;; *************** function ___ftge *****************
  9472 ;; Defined at:
  9473 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  ff1             3    9[BANK0 ] float 
  9476 ;;  ff2             3   12[BANK0 ] float 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;		None               void
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9488 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;Total ram usage:        9 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    3
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_CalcGlucose
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           
  9503                           ;psect for function ___ftge
  9504  147E                     ___ftge:	
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9508  147E  0020               	movlb	0	; select bank0
  9509  147F  1FAB               	btfss	___ftge@ff1+2,7
  9510  1480  2C95               	goto	l3466
  9511  1481  0929               	comf	___ftge@ff1,w
  9512  1482  00AF               	movwf	??___ftge
  9513  1483  092A               	comf	___ftge@ff1+1,w
  9514  1484  00B0               	movwf	??___ftge+1
  9515  1485  092B               	comf	___ftge@ff1+2,w
  9516  1486  00B1               	movwf	??___ftge+2
  9517  1487  0AAF               	incf	??___ftge,f
  9518  1488  1903               	skipnz
  9519  1489  0AB0               	incf	??___ftge+1,f
  9520  148A  1903               	skipnz
  9521  148B  0AB1               	incf	??___ftge+2,f
  9522  148C  3000               	movlw	0
  9523  148D  072F               	addwf	??___ftge,w
  9524  148E  00A9               	movwf	___ftge@ff1
  9525  148F  3000               	movlw	0
  9526  1490  3D30               	addwfc	??___ftge+1,w
  9527  1491  00AA               	movwf	___ftge@ff1+1
  9528  1492  3080               	movlw	128
  9529  1493  3D31               	addwfc	??___ftge+2,w
  9530  1494  00AB               	movwf	___ftge@ff1+2
  9531  1495                     l3466:	
  9532  1495  1FAE               	btfss	___ftge@ff2+2,7
  9533  1496  2CAB               	goto	l3470
  9534  1497  092C               	comf	___ftge@ff2,w
  9535  1498  00AF               	movwf	??___ftge
  9536  1499  092D               	comf	___ftge@ff2+1,w
  9537  149A  00B0               	movwf	??___ftge+1
  9538  149B  092E               	comf	___ftge@ff2+2,w
  9539  149C  00B1               	movwf	??___ftge+2
  9540  149D  0AAF               	incf	??___ftge,f
  9541  149E  1903               	skipnz
  9542  149F  0AB0               	incf	??___ftge+1,f
  9543  14A0  1903               	skipnz
  9544  14A1  0AB1               	incf	??___ftge+2,f
  9545  14A2  3000               	movlw	0
  9546  14A3  072F               	addwf	??___ftge,w
  9547  14A4  00AC               	movwf	___ftge@ff2
  9548  14A5  3000               	movlw	0
  9549  14A6  3D30               	addwfc	??___ftge+1,w
  9550  14A7  00AD               	movwf	___ftge@ff2+1
  9551  14A8  3080               	movlw	128
  9552  14A9  3D31               	addwfc	??___ftge+2,w
  9553  14AA  00AE               	movwf	___ftge@ff2+2
  9554  14AB                     l3470:	
  9555  14AB  3080               	movlw	128
  9556  14AC  06AB               	xorwf	___ftge@ff1+2,f
  9557  14AD  3080               	movlw	128
  9558  14AE  06AE               	xorwf	___ftge@ff2+2,f
  9559  14AF  082E               	movf	___ftge@ff2+2,w
  9560  14B0  022B               	subwf	___ftge@ff1+2,w
  9561  14B1  1D03               	skipz
  9562  14B2  0008               	return
  9563  14B3  082D               	movf	___ftge@ff2+1,w
  9564  14B4  022A               	subwf	___ftge@ff1+1,w
  9565  14B5  1D03               	skipz
  9566  14B6  0008               	return
  9567  14B7  082C               	movf	___ftge@ff2,w
  9568  14B8  0229               	subwf	___ftge@ff1,w
  9569  14B9  0008               	return
  9570  14BA                     __end_of___ftge:	
  9571                           
  9572                           	psect	text38
  9573  0A5D                     __ptext38:	
  9574 ;; *************** function ___ftadd *****************
  9575 ;; Defined at:
  9576 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;  f1              3   28[BANK0 ] float 
  9579 ;;  f2              3   31[BANK0 ] float 
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  exp1            1   40[BANK0 ] unsigned char 
  9582 ;;  exp2            1   39[BANK0 ] unsigned char 
  9583 ;;  sign            1   38[BANK0 ] unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  3   28[BANK0 ] float 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9593 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;Total ram usage:       13 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    4
  9600 ;; This function calls:
  9601 ;;		___ftpack
  9602 ;; This function is called by:
  9603 ;;		_main
  9604 ;;		_CalcGlucose
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           
  9609                           ;psect for function ___ftadd
  9610  0A5D                     ___ftadd:	
  9611                           
  9612                           ;incstack = 0
  9613                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9614  0A5D  0020               	movlb	0	; select bank0
  9615  0A5E  083C               	movf	___ftadd@f1,w
  9616  0A5F  00C2               	movwf	??___ftadd
  9617  0A60  083D               	movf	___ftadd@f1+1,w
  9618  0A61  00C3               	movwf	??___ftadd+1
  9619  0A62  083E               	movf	___ftadd@f1+2,w
  9620  0A63  00C4               	movwf	??___ftadd+2
  9621  0A64  1003               	clrc
  9622  0A65  0D43               	rlf	??___ftadd+1,w
  9623  0A66  0D44               	rlf	??___ftadd+2,w
  9624  0A67  00C5               	movwf	??___ftadd+3
  9625  0A68  0845               	movf	??___ftadd+3,w
  9626  0A69  00C8               	movwf	___ftadd@exp1
  9627  0A6A  083F               	movf	___ftadd@f2,w
  9628  0A6B  00C2               	movwf	??___ftadd
  9629  0A6C  0840               	movf	___ftadd@f2+1,w
  9630  0A6D  00C3               	movwf	??___ftadd+1
  9631  0A6E  0841               	movf	___ftadd@f2+2,w
  9632  0A6F  00C4               	movwf	??___ftadd+2
  9633  0A70  1003               	clrc
  9634  0A71  0D43               	rlf	??___ftadd+1,w
  9635  0A72  0D44               	rlf	??___ftadd+2,w
  9636  0A73  00C5               	movwf	??___ftadd+3
  9637  0A74  0845               	movf	??___ftadd+3,w
  9638  0A75  00C7               	movwf	___ftadd@exp2
  9639  0A76  0848               	movf	___ftadd@exp1,w
  9640  0A77  1903               	btfsc	3,2
  9641  0A78  2A85               	goto	l4998
  9642  0A79  0847               	movf	___ftadd@exp2,w
  9643  0A7A  0248               	subwf	___ftadd@exp1,w
  9644  0A7B  1803               	skipnc
  9645  0A7C  2A8C               	goto	l5002
  9646  0A7D  0348               	decf	___ftadd@exp1,w
  9647  0A7E  3AFF               	xorlw	255
  9648  0A7F  0747               	addwf	___ftadd@exp2,w
  9649  0A80  00C2               	movwf	??___ftadd
  9650  0A81  3019               	movlw	25
  9651  0A82  0242               	subwf	??___ftadd,w
  9652  0A83  1C03               	skipc
  9653  0A84  2A8C               	goto	l5002
  9654  0A85                     l4998:	
  9655  0A85  083F               	movf	___ftadd@f2,w
  9656  0A86  00BC               	movwf	?___ftadd
  9657  0A87  0840               	movf	___ftadd@f2+1,w
  9658  0A88  00BD               	movwf	?___ftadd+1
  9659  0A89  0841               	movf	___ftadd@f2+2,w
  9660  0A8A  00BE               	movwf	?___ftadd+2
  9661  0A8B  0008               	return
  9662  0A8C                     l5002:	
  9663  0A8C  0847               	movf	___ftadd@exp2,w
  9664  0A8D  1903               	btfsc	3,2
  9665  0A8E  0008               	return
  9666  0A8F  0848               	movf	___ftadd@exp1,w
  9667  0A90  0247               	subwf	___ftadd@exp2,w
  9668  0A91  1803               	skipnc
  9669  0A92  2A9B               	goto	l5008
  9670  0A93  0347               	decf	___ftadd@exp2,w
  9671  0A94  3AFF               	xorlw	255
  9672  0A95  0748               	addwf	___ftadd@exp1,w
  9673  0A96  00C2               	movwf	??___ftadd
  9674  0A97  3019               	movlw	25
  9675  0A98  0242               	subwf	??___ftadd,w
  9676  0A99  1803               	btfsc	3,0
  9677  0A9A  0008               	return
  9678  0A9B                     l5008:	
  9679  0A9B  3006               	movlw	6
  9680  0A9C  00C2               	movwf	??___ftadd
  9681  0A9D  0842               	movf	??___ftadd,w
  9682  0A9E  00C6               	movwf	___ftadd@sign
  9683  0A9F  1BBE               	btfsc	___ftadd@f1+2,7
  9684  0AA0  17C6               	bsf	___ftadd@sign,7
  9685  0AA1  1BC1               	btfsc	___ftadd@f2+2,7
  9686  0AA2  1746               	bsf	___ftadd@sign,6
  9687  0AA3  17BD               	bsf	___ftadd@f1+1,7
  9688  0AA4  30FF               	movlw	255
  9689  0AA5  05BC               	andwf	___ftadd@f1,f
  9690  0AA6  30FF               	movlw	255
  9691  0AA7  05BD               	andwf	___ftadd@f1+1,f
  9692  0AA8  3000               	movlw	0
  9693  0AA9  05BE               	andwf	___ftadd@f1+2,f
  9694  0AAA  17C0               	bsf	___ftadd@f2+1,7
  9695  0AAB  30FF               	movlw	255
  9696  0AAC  05BF               	andwf	___ftadd@f2,f
  9697  0AAD  30FF               	movlw	255
  9698  0AAE  05C0               	andwf	___ftadd@f2+1,f
  9699  0AAF  3000               	movlw	0
  9700  0AB0  05C1               	andwf	___ftadd@f2+2,f
  9701  0AB1  0847               	movf	___ftadd@exp2,w
  9702  0AB2  0248               	subwf	___ftadd@exp1,w
  9703  0AB3  1803               	skipnc
  9704  0AB4  2AD7               	goto	l5030
  9705  0AB5                     l5020:	
  9706  0AB5  3001               	movlw	1
  9707  0AB6                     u5295:	
  9708  0AB6  35BF               	lslf	___ftadd@f2,f
  9709  0AB7  0DC0               	rlf	___ftadd@f2+1,f
  9710  0AB8  0DC1               	rlf	___ftadd@f2+2,f
  9711  0AB9  0B89               	decfsz	9,f
  9712  0ABA  2AB6               	goto	u5295
  9713  0ABB  3001               	movlw	1
  9714  0ABC  02C7               	subwf	___ftadd@exp2,f
  9715  0ABD  0847               	movf	___ftadd@exp2,w
  9716  0ABE  0648               	xorwf	___ftadd@exp1,w
  9717  0ABF  1903               	skipnz
  9718  0AC0  2AD2               	goto	l5028
  9719  0AC1  3001               	movlw	1
  9720  0AC2  02C6               	subwf	___ftadd@sign,f
  9721  0AC3  0846               	movf	___ftadd@sign,w
  9722  0AC4  3907               	andlw	7
  9723  0AC5  1903               	btfsc	3,2
  9724  0AC6  2AD2               	goto	l5028
  9725  0AC7  2AB5               	goto	l5020
  9726  0AC8                     l5026:	
  9727  0AC8  3001               	movlw	1
  9728  0AC9                     u5325:	
  9729  0AC9  36BE               	lsrf	___ftadd@f1+2,f
  9730  0ACA  0CBD               	rrf	___ftadd@f1+1,f
  9731  0ACB  0CBC               	rrf	___ftadd@f1,f
  9732  0ACC  0B89               	decfsz	9,f
  9733  0ACD  2AC9               	goto	u5325
  9734  0ACE  3001               	movlw	1
  9735  0ACF  00C2               	movwf	??___ftadd
  9736  0AD0  0842               	movf	??___ftadd,w
  9737  0AD1  07C8               	addwf	___ftadd@exp1,f
  9738  0AD2                     l5028:	
  9739  0AD2  0848               	movf	___ftadd@exp1,w
  9740  0AD3  0647               	xorwf	___ftadd@exp2,w
  9741  0AD4  1903               	btfsc	3,2
  9742  0AD5  2AFC               	goto	l1012
  9743  0AD6  2AC8               	goto	l5026
  9744  0AD7                     l5030:	
  9745  0AD7  0848               	movf	___ftadd@exp1,w
  9746  0AD8  0247               	subwf	___ftadd@exp2,w
  9747  0AD9  1803               	skipnc
  9748  0ADA  2AFC               	goto	l1012
  9749  0ADB                     l5032:	
  9750  0ADB  3001               	movlw	1
  9751  0ADC                     u5355:	
  9752  0ADC  35BC               	lslf	___ftadd@f1,f
  9753  0ADD  0DBD               	rlf	___ftadd@f1+1,f
  9754  0ADE  0DBE               	rlf	___ftadd@f1+2,f
  9755  0ADF  0B89               	decfsz	9,f
  9756  0AE0  2ADC               	goto	u5355
  9757  0AE1  3001               	movlw	1
  9758  0AE2  02C8               	subwf	___ftadd@exp1,f
  9759  0AE3  0847               	movf	___ftadd@exp2,w
  9760  0AE4  0648               	xorwf	___ftadd@exp1,w
  9761  0AE5  1903               	skipnz
  9762  0AE6  2AF8               	goto	l5040
  9763  0AE7  3001               	movlw	1
  9764  0AE8  02C6               	subwf	___ftadd@sign,f
  9765  0AE9  0846               	movf	___ftadd@sign,w
  9766  0AEA  3907               	andlw	7
  9767  0AEB  1903               	btfsc	3,2
  9768  0AEC  2AF8               	goto	l5040
  9769  0AED  2ADB               	goto	l5032
  9770  0AEE                     l5038:	
  9771  0AEE  3001               	movlw	1
  9772  0AEF                     u5385:	
  9773  0AEF  36C1               	lsrf	___ftadd@f2+2,f
  9774  0AF0  0CC0               	rrf	___ftadd@f2+1,f
  9775  0AF1  0CBF               	rrf	___ftadd@f2,f
  9776  0AF2  0B89               	decfsz	9,f
  9777  0AF3  2AEF               	goto	u5385
  9778  0AF4  3001               	movlw	1
  9779  0AF5  00C2               	movwf	??___ftadd
  9780  0AF6  0842               	movf	??___ftadd,w
  9781  0AF7  07C7               	addwf	___ftadd@exp2,f
  9782  0AF8                     l5040:	
  9783  0AF8  0848               	movf	___ftadd@exp1,w
  9784  0AF9  0647               	xorwf	___ftadd@exp2,w
  9785  0AFA  1D03               	skipz
  9786  0AFB  2AEE               	goto	l5038
  9787  0AFC                     l1012:	
  9788  0AFC  1FC6               	btfss	___ftadd@sign,7
  9789  0AFD  2B0E               	goto	l5044
  9790  0AFE  30FF               	movlw	255
  9791  0AFF  06BC               	xorwf	___ftadd@f1,f
  9792  0B00  30FF               	movlw	255
  9793  0B01  06BD               	xorwf	___ftadd@f1+1,f
  9794  0B02  30FF               	movlw	255
  9795  0B03  06BE               	xorwf	___ftadd@f1+2,f
  9796  0B04  3001               	movlw	1
  9797  0B05  07BC               	addwf	___ftadd@f1,f
  9798  0B06  3000               	movlw	0
  9799  0B07  1803               	skipnc
  9800  0B08  3001               	movlw	1
  9801  0B09  07BD               	addwf	___ftadd@f1+1,f
  9802  0B0A  3000               	movlw	0
  9803  0B0B  1803               	skipnc
  9804  0B0C  3001               	movlw	1
  9805  0B0D  07BE               	addwf	___ftadd@f1+2,f
  9806  0B0E                     l5044:	
  9807  0B0E  1F46               	btfss	___ftadd@sign,6
  9808  0B0F  2B20               	goto	l5048
  9809  0B10  30FF               	movlw	255
  9810  0B11  06BF               	xorwf	___ftadd@f2,f
  9811  0B12  30FF               	movlw	255
  9812  0B13  06C0               	xorwf	___ftadd@f2+1,f
  9813  0B14  30FF               	movlw	255
  9814  0B15  06C1               	xorwf	___ftadd@f2+2,f
  9815  0B16  3001               	movlw	1
  9816  0B17  07BF               	addwf	___ftadd@f2,f
  9817  0B18  3000               	movlw	0
  9818  0B19  1803               	skipnc
  9819  0B1A  3001               	movlw	1
  9820  0B1B  07C0               	addwf	___ftadd@f2+1,f
  9821  0B1C  3000               	movlw	0
  9822  0B1D  1803               	skipnc
  9823  0B1E  3001               	movlw	1
  9824  0B1F  07C1               	addwf	___ftadd@f2+2,f
  9825  0B20                     l5048:	
  9826  0B20  01C6               	clrf	___ftadd@sign
  9827  0B21  083C               	movf	___ftadd@f1,w
  9828  0B22  07BF               	addwf	___ftadd@f2,f
  9829  0B23  083D               	movf	___ftadd@f1+1,w
  9830  0B24  3DC0               	addwfc	___ftadd@f2+1,f
  9831  0B25  083E               	movf	___ftadd@f1+2,w
  9832  0B26  3DC1               	addwfc	___ftadd@f2+2,f
  9833  0B27  1FC1               	btfss	___ftadd@f2+2,7
  9834  0B28  2B3B               	goto	l5058
  9835  0B29  30FF               	movlw	255
  9836  0B2A  06BF               	xorwf	___ftadd@f2,f
  9837  0B2B  30FF               	movlw	255
  9838  0B2C  06C0               	xorwf	___ftadd@f2+1,f
  9839  0B2D  30FF               	movlw	255
  9840  0B2E  06C1               	xorwf	___ftadd@f2+2,f
  9841  0B2F  3001               	movlw	1
  9842  0B30  07BF               	addwf	___ftadd@f2,f
  9843  0B31  3000               	movlw	0
  9844  0B32  1803               	skipnc
  9845  0B33  3001               	movlw	1
  9846  0B34  07C0               	addwf	___ftadd@f2+1,f
  9847  0B35  3000               	movlw	0
  9848  0B36  1803               	skipnc
  9849  0B37  3001               	movlw	1
  9850  0B38  07C1               	addwf	___ftadd@f2+2,f
  9851  0B39  01C6               	clrf	___ftadd@sign
  9852  0B3A  0AC6               	incf	___ftadd@sign,f
  9853  0B3B                     l5058:	
  9854  0B3B  083F               	movf	___ftadd@f2,w
  9855  0B3C  00A9               	movwf	___ftpack@arg
  9856  0B3D  0840               	movf	___ftadd@f2+1,w
  9857  0B3E  00AA               	movwf	___ftpack@arg+1
  9858  0B3F  0841               	movf	___ftadd@f2+2,w
  9859  0B40  00AB               	movwf	___ftpack@arg+2
  9860  0B41  0848               	movf	___ftadd@exp1,w
  9861  0B42  00C2               	movwf	??___ftadd
  9862  0B43  0842               	movf	??___ftadd,w
  9863  0B44  00AC               	movwf	___ftpack@exp
  9864  0B45  0846               	movf	___ftadd@sign,w
  9865  0B46  00C3               	movwf	??___ftadd+1
  9866  0B47  0843               	movf	??___ftadd+1,w
  9867  0B48  00AD               	movwf	___ftpack@sign
  9868  0B49  3188  2008         	fcall	___ftpack
  9869  0B4B  0020               	movlb	0	; select bank0
  9870  0B4C  0829               	movf	?___ftpack,w
  9871  0B4D  00BC               	movwf	?___ftadd
  9872  0B4E  082A               	movf	?___ftpack+1,w
  9873  0B4F  00BD               	movwf	?___ftadd+1
  9874  0B50  082B               	movf	?___ftpack+2,w
  9875  0B51  00BE               	movwf	?___ftadd+2
  9876  0B52  0008               	return
  9877  0B53                     __end_of___ftadd:	
  9878                           
  9879                           	psect	text39
  9880  131D                     __ptext39:	
  9881 ;; *************** function ___awtoft *****************
  9882 ;; Defined at:
  9883 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  c               2   18[BANK0 ] int 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  sign            1   23[BANK0 ] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  3   18[BANK0 ] float 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0, pclath, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9897 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;Total ram usage:        6 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    4
  9904 ;; This function calls:
  9905 ;;		___ftpack
  9906 ;; This function is called by:
  9907 ;;		_DisplaySavedGlucoReading
  9908 ;;		_CalcGlucose
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function ___awtoft
  9914  131D                     ___awtoft:	
  9915                           
  9916                           ;incstack = 0
  9917                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9918  131D  0020               	movlb	0	; select bank0
  9919  131E  01B7               	clrf	___awtoft@sign
  9920  131F  1FB3               	btfss	___awtoft@c+1,7
  9921  1320  2B28               	goto	l4988
  9922  1321  09B2               	comf	___awtoft@c,f
  9923  1322  09B3               	comf	___awtoft@c+1,f
  9924  1323  0AB2               	incf	___awtoft@c,f
  9925  1324  1903               	skipnz
  9926  1325  0AB3               	incf	___awtoft@c+1,f
  9927  1326  01B7               	clrf	___awtoft@sign
  9928  1327  0AB7               	incf	___awtoft@sign,f
  9929  1328                     l4988:	
  9930  1328  0832               	movf	___awtoft@c,w
  9931  1329  00A9               	movwf	___ftpack@arg
  9932  132A  0833               	movf	___awtoft@c+1,w
  9933  132B  00AA               	movwf	___ftpack@arg+1
  9934  132C  01AB               	clrf	___ftpack@arg+2
  9935  132D  308E               	movlw	142
  9936  132E  00B5               	movwf	??___awtoft
  9937  132F  0835               	movf	??___awtoft,w
  9938  1330  00AC               	movwf	___ftpack@exp
  9939  1331  0837               	movf	___awtoft@sign,w
  9940  1332  00B6               	movwf	??___awtoft+1
  9941  1333  0836               	movf	??___awtoft+1,w
  9942  1334  00AD               	movwf	___ftpack@sign
  9943  1335  3188  2008         	fcall	___ftpack
  9944  1337  0020               	movlb	0	; select bank0
  9945  1338  0829               	movf	?___ftpack,w
  9946  1339  00B2               	movwf	?___awtoft
  9947  133A  082A               	movf	?___ftpack+1,w
  9948  133B  00B3               	movwf	?___awtoft+1
  9949  133C  082B               	movf	?___ftpack+2,w
  9950  133D  00B4               	movwf	?___awtoft+2
  9951  133E  0008               	return
  9952  133F                     __end_of___awtoft:	
  9953                           
  9954                           	psect	text40
  9955  0808                     __ptext40:	
  9956 ;; *************** function ___ftpack *****************
  9957 ;; Defined at:
  9958 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  arg             3    9[BANK0 ] unsigned um
  9961 ;;  exp             1   12[BANK0 ] unsigned char 
  9962 ;;  sign            1   13[BANK0 ] unsigned char 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  3    9[BANK0 ] float 
  9967 ;; Registers used:
  9968 ;;		wreg, status,2, status,0
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        8 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:    3
  9981 ;; This function calls:
  9982 ;;		Nothing
  9983 ;; This function is called by:
  9984 ;;		___awtoft
  9985 ;;		___ftadd
  9986 ;;		___ftdiv
  9987 ;;		___ftmul
  9988 ;;		___lbtoft
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           
  9993                           ;psect for function ___ftpack
  9994  0808                     ___ftpack:	
  9995                           
  9996                           ;incstack = 0
  9997                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9998  0808  0020               	movlb	0	; select bank0
  9999  0809  082C               	movf	___ftpack@exp,w
 10000  080A  1903               	btfsc	3,2
 10001  080B  2811               	goto	l4526
 10002  080C  082B               	movf	___ftpack@arg+2,w
 10003  080D  042A               	iorwf	___ftpack@arg+1,w
 10004  080E  0429               	iorwf	___ftpack@arg,w
 10005  080F  1D03               	skipz
 10006  0810  2822               	goto	l4532
 10007  0811                     l4526:	
 10008  0811  3000               	movlw	0
 10009  0812  00A9               	movwf	?___ftpack
 10010  0813  3000               	movlw	0
 10011  0814  00AA               	movwf	?___ftpack+1
 10012  0815  3000               	movlw	0
 10013  0816  00AB               	movwf	?___ftpack+2
 10014  0817  0008               	return
 10015  0818                     l4530:	
 10016  0818  3001               	movlw	1
 10017  0819  00AE               	movwf	??___ftpack
 10018  081A  082E               	movf	??___ftpack,w
 10019  081B  07AC               	addwf	___ftpack@exp,f
 10020  081C  3001               	movlw	1
 10021  081D                     u4575:	
 10022  081D  36AB               	lsrf	___ftpack@arg+2,f
 10023  081E  0CAA               	rrf	___ftpack@arg+1,f
 10024  081F  0CA9               	rrf	___ftpack@arg,f
 10025  0820  0B89               	decfsz	9,f
 10026  0821  281D               	goto	u4575
 10027  0822                     l4532:	
 10028  0822  30FE               	movlw	254
 10029  0823  052B               	andwf	___ftpack@arg+2,w
 10030  0824  1903               	btfsc	3,2
 10031  0825  283B               	goto	l981
 10032  0826  2818               	goto	l4530
 10033  0827                     l4534:	
 10034  0827  3001               	movlw	1
 10035  0828  00AE               	movwf	??___ftpack
 10036  0829  082E               	movf	??___ftpack,w
 10037  082A  07AC               	addwf	___ftpack@exp,f
 10038  082B  3001               	movlw	1
 10039  082C  07A9               	addwf	___ftpack@arg,f
 10040  082D  3000               	movlw	0
 10041  082E  1803               	skipnc
 10042  082F  3001               	movlw	1
 10043  0830  07AA               	addwf	___ftpack@arg+1,f
 10044  0831  3000               	movlw	0
 10045  0832  1803               	skipnc
 10046  0833  3001               	movlw	1
 10047  0834  07AB               	addwf	___ftpack@arg+2,f
 10048  0835  3001               	movlw	1
 10049  0836                     u4595:	
 10050  0836  36AB               	lsrf	___ftpack@arg+2,f
 10051  0837  0CAA               	rrf	___ftpack@arg+1,f
 10052  0838  0CA9               	rrf	___ftpack@arg,f
 10053  0839  0B89               	decfsz	9,f
 10054  083A  2836               	goto	u4595
 10055  083B                     l981:	
 10056  083B  30FF               	movlw	255
 10057  083C  052B               	andwf	___ftpack@arg+2,w
 10058  083D  1903               	btfsc	3,2
 10059  083E  2848               	goto	l4542
 10060  083F  2827               	goto	l4534
 10061  0840                     l4540:	
 10062  0840  3001               	movlw	1
 10063  0841  02AC               	subwf	___ftpack@exp,f
 10064  0842  3001               	movlw	1
 10065  0843                     u4615:	
 10066  0843  35A9               	lslf	___ftpack@arg,f
 10067  0844  0DAA               	rlf	___ftpack@arg+1,f
 10068  0845  0DAB               	rlf	___ftpack@arg+2,f
 10069  0846  0B89               	decfsz	9,f
 10070  0847  2843               	goto	u4615
 10071  0848                     l4542:	
 10072  0848  1BAA               	btfsc	___ftpack@arg+1,7
 10073  0849  284E               	goto	l988
 10074  084A  3002               	movlw	2
 10075  084B  022C               	subwf	___ftpack@exp,w
 10076  084C  1803               	skipnc
 10077  084D  2840               	goto	l4540
 10078  084E                     l988:	
 10079  084E  182C               	btfsc	___ftpack@exp,0
 10080  084F  2856               	goto	l989
 10081  0850  30FF               	movlw	255
 10082  0851  05A9               	andwf	___ftpack@arg,f
 10083  0852  307F               	movlw	127
 10084  0853  05AA               	andwf	___ftpack@arg+1,f
 10085  0854  30FF               	movlw	255
 10086  0855  05AB               	andwf	___ftpack@arg+2,f
 10087  0856                     l989:	
 10088  0856  1003               	clrc
 10089  0857  0CAC               	rrf	___ftpack@exp,f
 10090  0858  082C               	movf	___ftpack@exp,w
 10091  0859  00AE               	movwf	??___ftpack
 10092  085A  01AF               	clrf	??___ftpack+1
 10093  085B  01B0               	clrf	??___ftpack+2
 10094  085C  3010               	movlw	16
 10095  085D                     u4655:	
 10096  085D  35AE               	lslf	??___ftpack,f
 10097  085E  0DAF               	rlf	??___ftpack+1,f
 10098  085F  0DB0               	rlf	??___ftpack+2,f
 10099  0860  0B89               	decfsz	9,f
 10100  0861  285D               	goto	u4655
 10101  0862  082E               	movf	??___ftpack,w
 10102  0863  04A9               	iorwf	___ftpack@arg,f
 10103  0864  082F               	movf	??___ftpack+1,w
 10104  0865  04AA               	iorwf	___ftpack@arg+1,f
 10105  0866  0830               	movf	??___ftpack+2,w
 10106  0867  04AB               	iorwf	___ftpack@arg+2,f
 10107  0868  082D               	movf	___ftpack@sign,w
 10108  0869  1903               	btfsc	3,2
 10109  086A  0008               	return
 10110  086B  17AB               	bsf	___ftpack@arg+2,7
 10111  086C  0008               	return
 10112  086D                     __end_of___ftpack:	
 10113                           
 10114                           	psect	intentry
 10115  0004                     __pintentry:	
 10116 ;; *************** function _isr *****************
 10117 ;; Defined at:
 10118 ;;		line 475 in file "glucose_meter_main.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;		None
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, status,2, status,0, pclath, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;Total ram usage:        9 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    2
 10139 ;; This function calls:
 10140 ;;		i1_LCDInit
 10141 ;; This function is called by:
 10142 ;;		Interrupt level 1
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146  0004                     _isr:	
 10147                           
 10148                           ;incstack = 0
 10149                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10150  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10151  0005  3180               	pagesel	$
 10152  0006  0020               	movlb	0	; select bank0
 10153  0007  087F               	movf	127,w
 10154  0008  00A8               	movwf	??_isr+8
 10155                           
 10156                           ;glucose_meter_main.c: 477: if (PIR1bits.TMR1IF == 1)
 10157  0009  1C11               	btfss	17,0	;volatile
 10158  000A  286C               	goto	i1l4280
 10159                           
 10160                           ;glucose_meter_main.c: 478: {
 10161                           ;glucose_meter_main.c: 479: PIR1bits.TMR1IF = 0;
 10162  000B  1011               	bcf	17,0	;volatile
 10163                           
 10164                           ;glucose_meter_main.c: 481: TMR1H |= 0x80;
 10165  000C  1797               	bsf	23,7	;volatile
 10166                           
 10167                           ;glucose_meter_main.c: 482: Seconds++;
 10168  000D  3001               	movlw	1
 10169  000E  00A0               	movwf	??_isr
 10170  000F  0820               	movf	??_isr,w
 10171  0010  0021               	movlb	1	; select bank1
 10172  0011  07C2               	addwf	_Seconds^(0+128),f
 10173                           
 10174                           ;glucose_meter_main.c: 484: if (Seconds == 60) {Minutes++; Seconds=0;
 10175  0012  303C               	movlw	60
 10176  0013  0642               	xorwf	_Seconds^(0+128),w
 10177  0014  1D03               	btfss	3,2
 10178  0015  286C               	goto	i1l4280
 10179  0016  3001               	movlw	1
 10180  0017  0020               	movlb	0	; select bank0
 10181  0018  00A0               	movwf	??_isr
 10182  0019  0820               	movf	??_isr,w
 10183  001A  07E3               	addwf	_Minutes,f
 10184  001B  0021               	movlb	1	; select bank1
 10185  001C  01C2               	clrf	_Seconds^(0+128)
 10186                           
 10187                           ;glucose_meter_main.c: 485: if (Minutes == 60) {Hours++; Minutes=0;
 10188  001D  303C               	movlw	60
 10189  001E  0020               	movlb	0	; select bank0
 10190  001F  0663               	xorwf	_Minutes,w
 10191  0020  1D03               	btfss	3,2
 10192  0021  286C               	goto	i1l4280
 10193  0022  3001               	movlw	1
 10194  0023  00A0               	movwf	??_isr
 10195  0024  0820               	movf	??_isr,w
 10196  0025  07E2               	addwf	_Hours,f
 10197  0026  01E3               	clrf	_Minutes
 10198                           
 10199                           ;glucose_meter_main.c: 486: if (Hours == 24) {Days++; Hours=0;
 10200  0027  3018               	movlw	24
 10201  0028  0662               	xorwf	_Hours,w
 10202  0029  1D03               	btfss	3,2
 10203  002A  286C               	goto	i1l4280
 10204  002B  3001               	movlw	1
 10205  002C  00A0               	movwf	??_isr
 10206  002D  0820               	movf	??_isr,w
 10207  002E  07E1               	addwf	_Days,f
 10208  002F  01E2               	clrf	_Hours
 10209                           
 10210                           ;glucose_meter_main.c: 487: if ( (Days == 29 && Month==2 && !(Year%4 == 0))
 10211                           ;glucose_meter_main.c: 488: || (Days == 30 && Month==2)
 10212                           ;glucose_meter_main.c: 489: || (Days == 31 && (Month==4 || Month==6 || Month==9 || Month
      +                          ==11 ))
 10213                           ;glucose_meter_main.c: 490: || (Days == 32)
 10214                           ;glucose_meter_main.c: 491: ) {Month++; Days=1;}
 10215  0030  301D               	movlw	29
 10216  0031  0661               	xorwf	_Days,w
 10217  0032  1D03               	btfss	3,2
 10218  0033  283C               	goto	i1l4256
 10219  0034  3002               	movlw	2
 10220  0035  0664               	xorwf	_Month,w
 10221  0036  1D03               	btfss	3,2
 10222  0037  283C               	goto	i1l4256
 10223  0038  0865               	movf	_Year,w
 10224  0039  3903               	andlw	3
 10225  003A  1D03               	btfss	3,2
 10226  003B  285C               	goto	i1l4272
 10227  003C                     i1l4256:	
 10228  003C  301E               	movlw	30
 10229  003D  0661               	xorwf	_Days,w
 10230  003E  1D03               	btfss	3,2
 10231  003F  2844               	goto	i1l4260
 10232  0040  3002               	movlw	2
 10233  0041  0664               	xorwf	_Month,w
 10234  0042  1903               	btfsc	3,2
 10235  0043  285C               	goto	i1l4272
 10236  0044                     i1l4260:	
 10237  0044  301F               	movlw	31
 10238  0045  0661               	xorwf	_Days,w
 10239  0046  1D03               	btfss	3,2
 10240  0047  2858               	goto	i1l4270
 10241  0048  3004               	movlw	4
 10242  0049  0664               	xorwf	_Month,w
 10243  004A  1903               	btfsc	3,2
 10244  004B  285C               	goto	i1l4272
 10245  004C  3006               	movlw	6
 10246  004D  0664               	xorwf	_Month,w
 10247  004E  1903               	btfsc	3,2
 10248  004F  285C               	goto	i1l4272
 10249  0050  3009               	movlw	9
 10250  0051  0664               	xorwf	_Month,w
 10251  0052  1903               	btfsc	3,2
 10252  0053  285C               	goto	i1l4272
 10253  0054  300B               	movlw	11
 10254  0055  0664               	xorwf	_Month,w
 10255  0056  1903               	btfsc	3,2
 10256  0057  285C               	goto	i1l4272
 10257  0058                     i1l4270:	
 10258  0058  3020               	movlw	32
 10259  0059  0661               	xorwf	_Days,w
 10260  005A  1D03               	btfss	3,2
 10261  005B  2862               	goto	i1l550
 10262  005C                     i1l4272:	
 10263  005C  3001               	movlw	1
 10264  005D  00A0               	movwf	??_isr
 10265  005E  0820               	movf	??_isr,w
 10266  005F  07E4               	addwf	_Month,f
 10267  0060  01E1               	clrf	_Days
 10268  0061  0AE1               	incf	_Days,f
 10269  0062                     i1l550:	
 10270                           
 10271                           ;glucose_meter_main.c: 492: if (Month == 13) {Year++; Month=1;}
 10272  0062  300D               	movlw	13
 10273  0063  0664               	xorwf	_Month,w
 10274  0064  1D03               	btfss	3,2
 10275  0065  286C               	goto	i1l4280
 10276  0066  3001               	movlw	1
 10277  0067  00A0               	movwf	??_isr
 10278  0068  0820               	movf	??_isr,w
 10279  0069  07E5               	addwf	_Year,f
 10280  006A  01E4               	clrf	_Month
 10281  006B  0AE4               	incf	_Month,f
 10282  006C                     i1l4280:	
 10283                           
 10284                           ;glucose_meter_main.c: 493: }}}
 10285                           ;glucose_meter_main.c: 495: }
 10286                           ;glucose_meter_main.c: 497: if (INTCONbits.INTF == 1)
 10287  006C  1C8B               	btfss	11,1	;volatile
 10288  006D  289C               	goto	i1l4322
 10289                           
 10290                           ;glucose_meter_main.c: 498: {
 10291                           ;glucose_meter_main.c: 499: INTCONbits.INTF = 0;
 10292  006E  108B               	bcf	11,1	;volatile
 10293                           
 10294                           ;glucose_meter_main.c: 500: gcountIdleTime = 120000;
 10295  006F  3000               	movlw	0
 10296  0070  0021               	movlb	1	; select bank1
 10297  0071  00D7               	movwf	(_gcountIdleTime+3)^(0+128)
 10298  0072  3001               	movlw	1
 10299  0073  00D6               	movwf	(_gcountIdleTime+2)^(0+128)
 10300  0074  30D4               	movlw	212
 10301  0075  00D5               	movwf	(_gcountIdleTime+1)^(0+128)
 10302  0076  30C0               	movlw	192
 10303  0077  00D4               	movwf	_gcountIdleTime^(0+128)
 10304                           
 10305                           ;glucose_meter_main.c: 501: gStripIdleTime = 250000;
 10306  0078  3000               	movlw	0
 10307  0079  00D3               	movwf	(_gStripIdleTime+3)^(0+128)
 10308  007A  3003               	movlw	3
 10309  007B  00D2               	movwf	(_gStripIdleTime+2)^(0+128)
 10310  007C  30D0               	movlw	208
 10311  007D  00D1               	movwf	(_gStripIdleTime+1)^(0+128)
 10312  007E  3090               	movlw	144
 10313  007F  00D0               	movwf	_gStripIdleTime^(0+128)
 10314                           
 10315                           ;glucose_meter_main.c: 502: gStripInserted = 0;
 10316  0080  01FB               	clrf	_gStripInserted
 10317                           
 10318                           ;glucose_meter_main.c: 503: gStripRemoved = 0;
 10319  0081  0020               	movlb	0	; select bank0
 10320  0082  01E0               	clrf	_gStripRemoved
 10321                           
 10322                           ;glucose_meter_main.c: 504: gBloodNotInsetrted = 0;
 10323  0083  01F8               	clrf	_gBloodNotInsetrted
 10324                           
 10325                           ;glucose_meter_main.c: 505: TRISC = 0;
 10326  0084  0021               	movlb	1	; select bank1
 10327  0085  018E               	clrf	14	;volatile
 10328                           
 10329                           ;glucose_meter_main.c: 506: TRISBbits.TRISB5 = 0;
 10330  0086  128D               	bcf	13,5	;volatile
 10331                           
 10332                           ;glucose_meter_main.c: 507: TRISBbits.TRISB1 = 0;
 10333  0087  108D               	bcf	13,1	;volatile
 10334                           
 10335                           ;glucose_meter_main.c: 508: TRISAbits.TRISA7 = 0;
 10336  0088  138C               	bcf	12,7	;volatile
 10337                           
 10338                           ;glucose_meter_main.c: 509: TRISAbits.TRISA6 = 0;
 10339  0089  130C               	bcf	12,6	;volatile
 10340                           
 10341                           ;glucose_meter_main.c: 510: TRISAbits.TRISA3 = 0;
 10342  008A  118C               	bcf	12,3	;volatile
 10343                           
 10344                           ;glucose_meter_main.c: 511: FVRCONbits.FVREN = 1;
 10345  008B  0022               	movlb	2	; select bank2
 10346  008C  1797               	bsf	23,7	;volatile
 10347                           
 10348                           ;glucose_meter_main.c: 512: OPA1CONbits.OPA1EN = 1;
 10349  008D  002A               	movlb	10	; select bank10
 10350  008E  1791               	bsf	17,7	;volatile
 10351                           
 10352                           ;glucose_meter_main.c: 513: DACCON0bits.DACEN = 1;
 10353  008F  0022               	movlb	2	; select bank2
 10354  0090  1798               	bsf	24,7	;volatile
 10355                           
 10356                           ;glucose_meter_main.c: 514: DACCON0bits.DACOE1= 1;
 10357  0091  1698               	bsf	24,5	;volatile
 10358                           
 10359                           ;glucose_meter_main.c: 515: ADCON0bits.ADON = 1;
 10360  0092  0021               	movlb	1	; select bank1
 10361  0093  141D               	bsf	29,0	;volatile
 10362                           
 10363                           ;glucose_meter_main.c: 516: LATB5 = 0;
 10364  0094  0022               	movlb	2	; select bank2
 10365  0095  128D               	bcf	13,5	;volatile
 10366                           
 10367                           ;glucose_meter_main.c: 518: LCDInit();
 10368  0096  3194  24FC  3180   	fcall	i1_LCDInit
 10369                           
 10370                           ;glucose_meter_main.c: 519: __nop();
 10371  0099  0000               	nop
 10372                           
 10373                           ;glucose_meter_main.c: 520: gSleepMode = 0;
 10374  009A  0020               	movlb	0	; select bank0
 10375  009B  01DF               	clrf	_gSleepMode
 10376  009C                     i1l4322:	
 10377                           
 10378                           ;glucose_meter_main.c: 521: }
 10379                           ;glucose_meter_main.c: 523: if (INTCONbits.IOCIF == 1)
 10380  009C  1C0B               	btfss	11,0	;volatile
 10381  009D  28F1               	goto	i1l4366
 10382                           
 10383                           ;glucose_meter_main.c: 524: {
 10384                           ;glucose_meter_main.c: 525: INTCONbits.IOCIF = 0;
 10385  009E  100B               	bcf	11,0	;volatile
 10386                           
 10387                           ;glucose_meter_main.c: 526: if (IOCBFbits.IOCBF4)
 10388  009F  0027               	movlb	7	; select bank7
 10389  00A0  1E16               	btfss	22,4	;volatile
 10390  00A1  28C1               	goto	i1l4344
 10391                           
 10392                           ;glucose_meter_main.c: 527: {
 10393                           ;glucose_meter_main.c: 528: IOCBFbits.IOCBF4 = 0;
 10394  00A2  1216               	bcf	22,4	;volatile
 10395                           
 10396                           ;glucose_meter_main.c: 529: if (gMemorymode == 1)
 10397  00A3  0020               	movlb	0	; select bank0
 10398  00A4  035C               	decf	_gMemorymode,w
 10399  00A5  1D03               	btfss	3,2
 10400  00A6  28AB               	goto	i1l4334
 10401                           
 10402                           ;glucose_meter_main.c: 530: {
 10403                           ;glucose_meter_main.c: 531: gExitMemoryMode = 1;
 10404  00A7  01F9               	clrf	_gExitMemoryMode
 10405  00A8  0AF9               	incf	_gExitMemoryMode,f
 10406                           
 10407                           ;glucose_meter_main.c: 532: gMemorymode = 0;
 10408  00A9  01DC               	clrf	_gMemorymode
 10409                           
 10410                           ;glucose_meter_main.c: 533: }
 10411  00AA  28B5               	goto	i1l564
 10412  00AB                     i1l4334:	
 10413                           
 10414                           ;glucose_meter_main.c: 534: else if (gSleepMode == 1)
 10415  00AB  035F               	decf	_gSleepMode,w
 10416  00AC  1D03               	btfss	3,2
 10417  00AD  28B2               	goto	i1l4340
 10418                           
 10419                           ;glucose_meter_main.c: 535: {
 10420                           ;glucose_meter_main.c: 536: gExitMemoryMode = 0;
 10421  00AE  01F9               	clrf	_gExitMemoryMode
 10422                           
 10423                           ;glucose_meter_main.c: 537: gMemorymode = 1;
 10424  00AF  01DC               	clrf	_gMemorymode
 10425  00B0  0ADC               	incf	_gMemorymode,f
 10426  00B1  28B4               	goto	L9
 10427  00B2                     i1l4340:	
 10428                           ;glucose_meter_main.c: 539: }
 10429                           
 10430                           ;glucose_meter_main.c: 538: gOneReadingDisplyed = 0;
 10431                           
 10432                           
 10433                           ;glucose_meter_main.c: 540: else
 10434                           ;glucose_meter_main.c: 541: {
 10435                           ;glucose_meter_main.c: 542: gExitMemoryMode = 0;
 10436  00B2  01F9               	clrf	_gExitMemoryMode
 10437                           
 10438                           ;glucose_meter_main.c: 543: gMemorymode = 0;
 10439  00B3  01DC               	clrf	_gMemorymode
 10440  00B4                     L9:	
 10441                           
 10442                           ;glucose_meter_main.c: 544: gOneReadingDisplyed = 0;
 10443  00B4  01FA               	clrf	_gOneReadingDisplyed
 10444  00B5                     i1l564:	
 10445                           
 10446                           ;glucose_meter_main.c: 545: }
 10447                           ;glucose_meter_main.c: 546: gDisplayPreviousReading = 0;
 10448  00B5  0021               	movlb	1	; select bank1
 10449  00B6  01C4               	clrf	_gDisplayPreviousReading^(0+128)
 10450                           
 10451                           ;glucose_meter_main.c: 547: _delay((unsigned long)((50)*(8000000/4000.0)));
 10452  00B7  3082               	movlw	130
 10453  00B8  0020               	movlb	0	; select bank0
 10454  00B9  00A1               	movwf	??_isr+1
 10455  00BA  30DD               	movlw	221
 10456  00BB  00A0               	movwf	??_isr
 10457  00BC                     u635_27:	
 10458  00BC  0BA0               	decfsz	??_isr,f
 10459  00BD  28BC               	goto	u635_27
 10460  00BE  0BA1               	decfsz	??_isr+1,f
 10461  00BF  28BC               	goto	u635_27
 10462  00C0  3200               	nop2
 10463  00C1                     i1l4344:	
 10464                           
 10465                           ;glucose_meter_main.c: 548: }
 10466                           ;glucose_meter_main.c: 549: if (IOCBFbits.IOCBF3 == 1)
 10467  00C1  0027               	movlb	7	; select bank7
 10468  00C2  1D96               	btfss	22,3	;volatile
 10469  00C3  28F1               	goto	i1l4366
 10470                           
 10471                           ;glucose_meter_main.c: 550: {
 10472                           ;glucose_meter_main.c: 551: IOCBFbits.IOCBF3 = 0;
 10473  00C4  1196               	bcf	22,3	;volatile
 10474                           
 10475                           ;glucose_meter_main.c: 553: if (gMemorymode == 1)
 10476  00C5  0020               	movlb	0	; select bank0
 10477  00C6  035C               	decf	_gMemorymode,w
 10478  00C7  1D03               	btfss	3,2
 10479  00C8  28D8               	goto	i1l4356
 10480                           
 10481                           ;glucose_meter_main.c: 554: {
 10482                           ;glucose_meter_main.c: 556: gDisplayPreviousReading = 1;
 10483  00C9  0021               	movlb	1	; select bank1
 10484  00CA  01C4               	clrf	_gDisplayPreviousReading^(0+128)
 10485  00CB  0AC4               	incf	_gDisplayPreviousReading^(0+128),f
 10486                           
 10487                           ;glucose_meter_main.c: 557: gSetDateTime = 0;
 10488  00CC  01C9               	clrf	_gSetDateTime^(0+128)
 10489                           
 10490                           ;glucose_meter_main.c: 558: _delay((unsigned long)((50)*(8000000/4000.0)));
 10491  00CD  3082               	movlw	130
 10492  00CE  0020               	movlb	0	; select bank0
 10493  00CF  00A1               	movwf	??_isr+1
 10494  00D0  30DD               	movlw	221
 10495  00D1  00A0               	movwf	??_isr
 10496  00D2                     u636_27:	
 10497  00D2  0BA0               	decfsz	??_isr,f
 10498  00D3  28D2               	goto	u636_27
 10499  00D4  0BA1               	decfsz	??_isr+1,f
 10500  00D5  28D2               	goto	u636_27
 10501  00D6  3200               	nop2
 10502                           
 10503                           ;glucose_meter_main.c: 559: }
 10504  00D7  28F1               	goto	i1l4366
 10505  00D8                     i1l4356:	
 10506                           
 10507                           ;glucose_meter_main.c: 560: else if (gSleepMode == 1)
 10508  00D8  0020               	movlb	0	; select bank0
 10509  00D9  035F               	decf	_gSleepMode,w
 10510  00DA  1D03               	btfss	3,2
 10511  00DB  28ED               	goto	i1l4364
 10512                           
 10513                           ;glucose_meter_main.c: 561: {
 10514                           ;glucose_meter_main.c: 562: gSetDateTime = 1;
 10515  00DC  0021               	movlb	1	; select bank1
 10516  00DD  01C9               	clrf	_gSetDateTime^(0+128)
 10517  00DE  0AC9               	incf	_gSetDateTime^(0+128),f
 10518                           
 10519                           ;glucose_meter_main.c: 563: gMemorymode = 0;
 10520  00DF  0020               	movlb	0	; select bank0
 10521  00E0  01DC               	clrf	_gMemorymode
 10522  00E1                     i1l571:	
 10523                           ;glucose_meter_main.c: 564: while(!(PORTB & 0x08));
 10524                           
 10525  00E1  1D8D               	btfss	13,3	;volatile
 10526  00E2  28E1               	goto	i1l571
 10527                           
 10528                           ;glucose_meter_main.c: 565: _delay((unsigned long)((50)*(8000000/4000.0)));
 10529  00E3  3082               	movlw	130
 10530  00E4  00A1               	movwf	??_isr+1
 10531  00E5  30DD               	movlw	221
 10532  00E6  00A0               	movwf	??_isr
 10533  00E7                     u637_27:	
 10534  00E7  0BA0               	decfsz	??_isr,f
 10535  00E8  28E7               	goto	u637_27
 10536  00E9  0BA1               	decfsz	??_isr+1,f
 10537  00EA  28E7               	goto	u637_27
 10538  00EB  3200               	nop2
 10539                           
 10540                           ;glucose_meter_main.c: 566: }
 10541  00EC  28F1               	goto	i1l4366
 10542  00ED                     i1l4364:	
 10543                           
 10544                           ;glucose_meter_main.c: 567: else
 10545                           ;glucose_meter_main.c: 568: {
 10546                           ;glucose_meter_main.c: 569: gSetDateTime = 0;
 10547  00ED  0021               	movlb	1	; select bank1
 10548  00EE  01C9               	clrf	_gSetDateTime^(0+128)
 10549                           
 10550                           ;glucose_meter_main.c: 570: gMemorymode = 0;
 10551  00EF  0020               	movlb	0	; select bank0
 10552  00F0  01DC               	clrf	_gMemorymode
 10553  00F1                     i1l4366:	
 10554                           
 10555                           ;glucose_meter_main.c: 571: }
 10556                           ;glucose_meter_main.c: 574: }
 10557                           ;glucose_meter_main.c: 575: }
 10558                           ;glucose_meter_main.c: 576: if (PIR1bits.ADIF == 1)
 10559  00F1  0020               	movlb	0	; select bank0
 10560  00F2  1F11               	btfss	17,6	;volatile
 10561  00F3  29D6               	goto	i1l588
 10562                           
 10563                           ;glucose_meter_main.c: 577: {
 10564                           ;glucose_meter_main.c: 578: PIR1bits.ADIF = 0;
 10565  00F4  1311               	bcf	17,6	;volatile
 10566                           
 10567                           ;glucose_meter_main.c: 580: if(ADRESH > 127){ADRESH = 0;ADRESL = 0;}
 10568  00F5  3080               	movlw	128
 10569  00F6  0021               	movlb	1	; select bank1
 10570  00F7  021C               	subwf	28,w	;volatile
 10571  00F8  1C03               	skipc
 10572  00F9  28FC               	goto	i1l4374
 10573  00FA  019C               	clrf	28	;volatile
 10574  00FB  019B               	clrf	27	;volatile
 10575  00FC                     i1l4374:	
 10576                           
 10577                           ;glucose_meter_main.c: 581: gReadData = ADRESL;
 10578  00FC  081B               	movf	27,w	;volatile
 10579  00FD  0020               	movlb	0	; select bank0
 10580  00FE  00A0               	movwf	??_isr
 10581  00FF  01A1               	clrf	??_isr+1
 10582  0100  0820               	movf	??_isr,w
 10583  0101  0021               	movlb	1	; select bank1
 10584  0102  00B4               	movwf	_gReadData^(0+128)
 10585  0103  0020               	movlb	0	; select bank0
 10586  0104  0821               	movf	??_isr+1,w
 10587  0105  0021               	movlb	1	; select bank1
 10588  0106  00B5               	movwf	(_gReadData+1)^(0+128)
 10589                           
 10590                           ;glucose_meter_main.c: 582: gReadData += ADRESH << 8;
 10591  0107  081C               	movf	28,w	;volatile
 10592  0108  0020               	movlb	0	; select bank0
 10593  0109  00A0               	movwf	??_isr
 10594  010A  01A1               	clrf	??_isr+1
 10595  010B  0820               	movf	??_isr,w
 10596  010C  00A1               	movwf	??_isr+1
 10597  010D  01A0               	clrf	??_isr
 10598  010E  0820               	movf	??_isr,w
 10599  010F  0021               	movlb	1	; select bank1
 10600  0110  07B4               	addwf	_gReadData^(0+128),f
 10601  0111  0020               	movlb	0	; select bank0
 10602  0112  0821               	movf	??_isr+1,w
 10603  0113  0021               	movlb	1	; select bank1
 10604  0114  3DB5               	addwfc	(_gReadData+1)^(0+128),f
 10605                           
 10606                           ;glucose_meter_main.c: 584: if(gReadData >= 900)
 10607  0115  0835               	movf	(_gReadData+1)^(0+128),w
 10608  0116  3A80               	xorlw	128
 10609  0117  0020               	movlb	0	; select bank0
 10610  0118  00A0               	movwf	??_isr
 10611  0119  3083               	movlw	131
 10612  011A  0220               	subwf	??_isr,w
 10613  011B  1D03               	skipz
 10614  011C  2920               	goto	u435_25
 10615  011D  3084               	movlw	132
 10616  011E  0021               	movlb	1	; select bank1
 10617  011F  0234               	subwf	_gReadData^(0+128),w
 10618  0120                     u435_25:	
 10619  0120  1C03               	skipc
 10620  0121  299A               	goto	i1l4402
 10621                           
 10622                           ;glucose_meter_main.c: 585: {
 10623                           ;glucose_meter_main.c: 591: if(gcounter <= 0)
 10624  0122  0021               	movlb	1	; select bank1
 10625  0123  085F               	movf	(_gcounter+1)^(0+128),w
 10626  0124  3A80               	xorlw	128
 10627  0125  0020               	movlb	0	; select bank0
 10628  0126  00A0               	movwf	??_isr
 10629  0127  3080               	movlw	128
 10630  0128  0220               	subwf	??_isr,w
 10631  0129  1D03               	skipz
 10632  012A  292E               	goto	u436_25
 10633  012B  3001               	movlw	1
 10634  012C  0021               	movlb	1	; select bank1
 10635  012D  025E               	subwf	_gcounter^(0+128),w
 10636  012E                     u436_25:	
 10637  012E  1803               	skipnc
 10638  012F  2934               	goto	i1l4384
 10639                           
 10640                           ;glucose_meter_main.c: 592: {
 10641                           ;glucose_meter_main.c: 593: gcounter = 0;
 10642  0130  0021               	movlb	1	; select bank1
 10643  0131  01DE               	clrf	_gcounter^(0+128)
 10644  0132  01DF               	clrf	(_gcounter+1)^(0+128)
 10645                           
 10646                           ;glucose_meter_main.c: 595: }
 10647  0133  2939               	goto	i1l4386
 10648  0134                     i1l4384:	
 10649                           
 10650                           ;glucose_meter_main.c: 597: else
 10651                           ;glucose_meter_main.c: 598: gcounter--;
 10652  0134  30FF               	movlw	255
 10653  0135  0021               	movlb	1	; select bank1
 10654  0136  07DE               	addwf	_gcounter^(0+128),f
 10655  0137  30FF               	movlw	255
 10656  0138  3DDF               	addwfc	(_gcounter+1)^(0+128),f
 10657  0139                     i1l4386:	
 10658                           
 10659                           ;glucose_meter_main.c: 600: if(gcounter == 0)
 10660  0139  085E               	movf	_gcounter^(0+128),w
 10661  013A  045F               	iorwf	(_gcounter+1)^(0+128),w
 10662  013B  1D03               	btfss	3,2
 10663  013C  29D1               	goto	i1l4412
 10664                           
 10665                           ;glucose_meter_main.c: 601: {
 10666                           ;glucose_meter_main.c: 602: if(gglucoseIndex <= 4096)
 10667  013D  0841               	movf	(_gglucoseIndex+1)^(0+128),w
 10668  013E  3A80               	xorlw	128
 10669  013F  0020               	movlb	0	; select bank0
 10670  0140  00A0               	movwf	??_isr
 10671  0141  3090               	movlw	144
 10672  0142  0220               	subwf	??_isr,w
 10673  0143  1D03               	skipz
 10674  0144  2948               	goto	u438_25
 10675  0145  3001               	movlw	1
 10676  0146  0021               	movlb	1	; select bank1
 10677  0147  0240               	subwf	_gglucoseIndex^(0+128),w
 10678  0148                     u438_25:	
 10679  0148  1803               	skipnc
 10680  0149  298C               	goto	i1l581
 10681                           
 10682                           ;glucose_meter_main.c: 603: {
 10683                           ;glucose_meter_main.c: 604: gSigmaGlucoseValue = (gSigmaGlucoseValue + gReadData)>>1;
 10684  014A  0021               	movlb	1	; select bank1
 10685  014B  0824               	movf	_gSigmaGlucoseValue^(0+128),w
 10686  014C  0020               	movlb	0	; select bank0
 10687  014D  00A0               	movwf	??_isr
 10688  014E  0021               	movlb	1	; select bank1
 10689  014F  0825               	movf	(_gSigmaGlucoseValue+1)^(0+128),w
 10690  0150  0020               	movlb	0	; select bank0
 10691  0151  00A1               	movwf	??_isr+1
 10692  0152  0021               	movlb	1	; select bank1
 10693  0153  0826               	movf	(_gSigmaGlucoseValue+2)^(0+128),w
 10694  0154  0020               	movlb	0	; select bank0
 10695  0155  00A2               	movwf	??_isr+2
 10696  0156  0021               	movlb	1	; select bank1
 10697  0157  0827               	movf	(_gSigmaGlucoseValue+3)^(0+128),w
 10698  0158  0020               	movlb	0	; select bank0
 10699  0159  00A3               	movwf	??_isr+3
 10700  015A  0021               	movlb	1	; select bank1
 10701  015B  0834               	movf	_gReadData^(0+128),w
 10702  015C  0020               	movlb	0	; select bank0
 10703  015D  00A4               	movwf	??_isr+4
 10704  015E  0021               	movlb	1	; select bank1
 10705  015F  0835               	movf	(_gReadData+1)^(0+128),w
 10706  0160  0020               	movlb	0	; select bank0
 10707  0161  00A5               	movwf	??_isr+5
 10708  0162  3000               	movlw	0
 10709  0163  1BA5               	btfsc	??_isr+5,7
 10710  0164  30FF               	movlw	255
 10711  0165  00A6               	movwf	??_isr+6
 10712  0166  00A7               	movwf	??_isr+7
 10713  0167  0824               	movf	??_isr+4,w
 10714  0168  07A0               	addwf	??_isr,f
 10715  0169  0825               	movf	??_isr+5,w
 10716  016A  3DA1               	addwfc	??_isr+1,f
 10717  016B  0826               	movf	??_isr+6,w
 10718  016C  3DA2               	addwfc	??_isr+2,f
 10719  016D  0827               	movf	??_isr+7,w
 10720  016E  3DA3               	addwfc	??_isr+3,f
 10721  016F  3001               	movlw	1
 10722  0170                     u439_25:	
 10723  0170  36A3               	lsrf	??_isr+3,f
 10724  0171  0CA2               	rrf	??_isr+2,f
 10725  0172  0CA1               	rrf	??_isr+1,f
 10726  0173  0CA0               	rrf	??_isr,f
 10727  0174  0B89               	decfsz	9,f
 10728  0175  2970               	goto	u439_25
 10729  0176  0823               	movf	??_isr+3,w
 10730  0177  0021               	movlb	1	; select bank1
 10731  0178  00A7               	movwf	(_gSigmaGlucoseValue+3)^(0+128)
 10732  0179  0020               	movlb	0	; select bank0
 10733  017A  0822               	movf	??_isr+2,w
 10734  017B  0021               	movlb	1	; select bank1
 10735  017C  00A6               	movwf	(_gSigmaGlucoseValue+2)^(0+128)
 10736  017D  0020               	movlb	0	; select bank0
 10737  017E  0821               	movf	??_isr+1,w
 10738  017F  0021               	movlb	1	; select bank1
 10739  0180  00A5               	movwf	(_gSigmaGlucoseValue+1)^(0+128)
 10740  0181  0020               	movlb	0	; select bank0
 10741  0182  0820               	movf	??_isr,w
 10742  0183  0021               	movlb	1	; select bank1
 10743  0184  00A4               	movwf	_gSigmaGlucoseValue^(0+128)
 10744                           
 10745                           ;glucose_meter_main.c: 605: gglucoseIndex++;
 10746  0185  3001               	movlw	1
 10747  0186  07C0               	addwf	_gglucoseIndex^(0+128),f
 10748  0187  3000               	movlw	0
 10749  0188  3DC1               	addwfc	(_gglucoseIndex+1)^(0+128),f
 10750                           
 10751                           ;glucose_meter_main.c: 606: LATAbits.LATA3 = 1;
 10752  0189  0022               	movlb	2	; select bank2
 10753  018A  158C               	bsf	12,3	;volatile
 10754                           
 10755                           ;glucose_meter_main.c: 607: }
 10756  018B  29D1               	goto	i1l4412
 10757  018C                     i1l581:	
 10758                           
 10759                           ;glucose_meter_main.c: 608: else
 10760                           ;glucose_meter_main.c: 609: {
 10761                           ;glucose_meter_main.c: 610: INTCONbits.PEIE = 1;
 10762  018C  170B               	bsf	11,6	;volatile
 10763                           
 10764                           ;glucose_meter_main.c: 611: PIE1bits.ADIE=1;
 10765  018D  0021               	movlb	1	; select bank1
 10766  018E  1711               	bsf	17,6	;volatile
 10767                           
 10768                           ;glucose_meter_main.c: 612: gglucDataReady = 1;
 10769  018F  01FC               	clrf	_gglucDataReady
 10770  0190  0AFC               	incf	_gglucDataReady,f
 10771                           
 10772                           ;glucose_meter_main.c: 613: gglucoseIndex = 0;
 10773  0191  01C0               	clrf	_gglucoseIndex^(0+128)
 10774  0192  01C1               	clrf	(_gglucoseIndex+1)^(0+128)
 10775                           
 10776                           ;glucose_meter_main.c: 614: gcounter = 8000;
 10777  0193  3040               	movlw	64
 10778  0194  00DE               	movwf	_gcounter^(0+128)
 10779  0195  301F               	movlw	31
 10780  0196  00DF               	movwf	(_gcounter^(0+128)+1)
 10781                           
 10782                           ;glucose_meter_main.c: 615: LATAbits.LATA3 = 0;
 10783  0197  0022               	movlb	2	; select bank2
 10784  0198  118C               	bcf	12,3	;volatile
 10785                           
 10786                           ;glucose_meter_main.c: 616: }
 10787                           ;glucose_meter_main.c: 617: }
 10788                           ;glucose_meter_main.c: 618: }
 10789  0199  29D1               	goto	i1l4412
 10790  019A                     i1l4402:	
 10791                           
 10792                           ;glucose_meter_main.c: 619: else
 10793                           ;glucose_meter_main.c: 620: {
 10794                           ;glucose_meter_main.c: 622: if(gcountIdleTime <= 1)
 10795  019A  0021               	movlb	1	; select bank1
 10796  019B  0857               	movf	(_gcountIdleTime+3)^(0+128),w
 10797  019C  1D03               	btfss	3,2
 10798  019D  29B1               	goto	i1l4406
 10799  019E  0856               	movf	(_gcountIdleTime+2)^(0+128),w
 10800  019F  1D03               	btfss	3,2
 10801  01A0  29B1               	goto	i1l4406
 10802  01A1  0855               	movf	(_gcountIdleTime+1)^(0+128),w
 10803  01A2  1D03               	btfss	3,2
 10804  01A3  29B1               	goto	i1l4406
 10805  01A4  3002               	movlw	2
 10806  01A5  0254               	subwf	_gcountIdleTime^(0+128),w
 10807  01A6  1803               	btfsc	3,0
 10808  01A7  29B1               	goto	i1l4406
 10809                           
 10810                           ;glucose_meter_main.c: 623: gcountIdleTime = 1;
 10811  01A8  3000               	movlw	0
 10812  01A9  00D7               	movwf	(_gcountIdleTime+3)^(0+128)
 10813  01AA  3000               	movlw	0
 10814  01AB  00D6               	movwf	(_gcountIdleTime+2)^(0+128)
 10815  01AC  3000               	movlw	0
 10816  01AD  00D5               	movwf	(_gcountIdleTime+1)^(0+128)
 10817  01AE  3001               	movlw	1
 10818  01AF  00D4               	movwf	_gcountIdleTime^(0+128)
 10819  01B0  29C9               	goto	i1l4408
 10820  01B1                     i1l4406:	
 10821                           
 10822                           ;glucose_meter_main.c: 625: else
 10823                           ;glucose_meter_main.c: 626: gcountIdleTime--;
 10824  01B1  3001               	movlw	1
 10825  01B2  0020               	movlb	0	; select bank0
 10826  01B3  00A0               	movwf	??_isr
 10827  01B4  3000               	movlw	0
 10828  01B5  00A1               	movwf	??_isr+1
 10829  01B6  3000               	movlw	0
 10830  01B7  00A2               	movwf	??_isr+2
 10831  01B8  3000               	movlw	0
 10832  01B9  00A3               	movwf	??_isr+3
 10833  01BA  0820               	movf	??_isr,w
 10834  01BB  0021               	movlb	1	; select bank1
 10835  01BC  02D4               	subwf	_gcountIdleTime^(0+128),f
 10836  01BD  0020               	movlb	0	; select bank0
 10837  01BE  0821               	movf	??_isr+1,w
 10838  01BF  0021               	movlb	1	; select bank1
 10839  01C0  3BD5               	subwfb	(_gcountIdleTime+1)^(0+128),f
 10840  01C1  0020               	movlb	0	; select bank0
 10841  01C2  0822               	movf	??_isr+2,w
 10842  01C3  0021               	movlb	1	; select bank1
 10843  01C4  3BD6               	subwfb	(_gcountIdleTime+2)^(0+128),f
 10844  01C5  0020               	movlb	0	; select bank0
 10845  01C6  0823               	movf	??_isr+3,w
 10846  01C7  0021               	movlb	1	; select bank1
 10847  01C8  3BD7               	subwfb	(_gcountIdleTime+3)^(0+128),f
 10848  01C9                     i1l4408:	
 10849                           
 10850                           ;glucose_meter_main.c: 628: if(gcountIdleTime == 1)
 10851  01C9  0354               	decf	_gcountIdleTime^(0+128),w
 10852  01CA  0455               	iorwf	(_gcountIdleTime+1)^(0+128),w
 10853  01CB  0456               	iorwf	(_gcountIdleTime+2)^(0+128),w
 10854  01CC  0457               	iorwf	(_gcountIdleTime+3)^(0+128),w
 10855  01CD  1D03               	btfss	3,2
 10856  01CE  29D1               	goto	i1l4412
 10857                           
 10858                           ;glucose_meter_main.c: 629: {
 10859                           ;glucose_meter_main.c: 630: gBloodNotInsetrted=1;
 10860  01CF  01F8               	clrf	_gBloodNotInsetrted
 10861  01D0  0AF8               	incf	_gBloodNotInsetrted,f
 10862  01D1                     i1l4412:	
 10863                           
 10864                           ;glucose_meter_main.c: 631: }
 10865                           ;glucose_meter_main.c: 632: }
 10866                           ;glucose_meter_main.c: 634: if (gglucDataReady == 0)
 10867  01D1  087C               	movf	_gglucDataReady,w
 10868  01D2  1D03               	btfss	3,2
 10869  01D3  29D6               	goto	i1l588
 10870                           
 10871                           ;glucose_meter_main.c: 635: ADCON0bits.ADGO = 1;
 10872  01D4  0021               	movlb	1	; select bank1
 10873  01D5  149D               	bsf	29,1	;volatile
 10874  01D6                     i1l588:	
 10875  01D6  0020               	movlb	0	; select bank0
 10876  01D7  0828               	movf	??_isr+8,w
 10877  01D8  00FF               	movwf	127
 10878  01D9  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10879  01DA  0009               	retfie
 10880  01DB                     __end_of_isr:	
 10881                           
 10882                           	psect	text42
 10883  14FC                     __ptext42:	
 10884 ;; *************** function i1_LCDInit *****************
 10885 ;; Defined at:
 10886 ;;		line 234 in file "Nokia5110/Nokia.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, pclath, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        2 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    1
 10907 ;; This function calls:
 10908 ;;		i1_LCDWrite
 10909 ;; This function is called by:
 10910 ;;		_isr
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           
 10915                           ;psect for function i1_LCDInit
 10916  14FC                     i1_LCDInit:	
 10917                           
 10918                           ;Nokia.c: 236: TRISCbits.TRISC3=0;
 10919                           
 10920                           ;incstack = 0
 10921                           ; Regs used in i1_LCDInit: [wreg+status,2+status,0+pclath+cstack]
 10922  14FC  0021               	movlb	1	; select bank1
 10923  14FD  118E               	bcf	14,3	;volatile
 10924                           
 10925                           ;Nokia.c: 237: TRISCbits.TRISC4=0;
 10926  14FE  120E               	bcf	14,4	;volatile
 10927                           
 10928                           ;Nokia.c: 238: TRISCbits.TRISC5=0;
 10929  14FF  128E               	bcf	14,5	;volatile
 10930                           
 10931                           ;Nokia.c: 239: TRISCbits.TRISC6=0;
 10932  1500  130E               	bcf	14,6	;volatile
 10933                           
 10934                           ;Nokia.c: 240: TRISCbits.TRISC7=0;
 10935  1501  138E               	bcf	14,7	;volatile
 10936                           
 10937                           ;Nokia.c: 242: LATCbits.LATC4=0;
 10938  1502  0022               	movlb	2	; select bank2
 10939  1503  120E               	bcf	14,4	;volatile
 10940                           
 10941                           ;Nokia.c: 243: LATCbits.LATC5=0;
 10942  1504  128E               	bcf	14,5	;volatile
 10943                           
 10944                           ;Nokia.c: 244: LATCbits.LATC3=0;
 10945  1505  118E               	bcf	14,3	;volatile
 10946                           
 10947                           ;Nokia.c: 247: LATCbits.LATC7=0;
 10948  1506  138E               	bcf	14,7	;volatile
 10949                           
 10950                           ;Nokia.c: 248: _delay((unsigned long)((10)*(800000/4000.0)));
 10951  1507  3003               	movlw	3
 10952  1508  00F6               	movwf	??i1_LCDInit+1
 10953  1509  3097               	movlw	151
 10954  150A  00F5               	movwf	??i1_LCDInit
 10955  150B                     u638_27:	
 10956  150B  0BF5               	decfsz	??i1_LCDInit,f
 10957  150C  2D0B               	goto	u638_27
 10958  150D  0BF6               	decfsz	??i1_LCDInit+1,f
 10959  150E  2D0B               	goto	u638_27
 10960  150F  3200               	nop2
 10961                           
 10962                           ;Nokia.c: 249: LATCbits.LATC7=1;
 10963  1510  0022               	movlb	2	; select bank2
 10964  1511  178E               	bsf	14,7	;volatile
 10965                           
 10966                           ;Nokia.c: 251: LCDWrite(0, 0x21);
 10967  1512  3021               	movlw	33
 10968  1513  00F5               	movwf	??i1_LCDInit
 10969  1514  0875               	movf	??i1_LCDInit,w
 10970  1515  00F0               	movwf	i1LCDWrite@data
 10971  1516  3000               	movlw	0
 10972  1517  3193  233F  3194   	fcall	i1_LCDWrite
 10973                           
 10974                           ;Nokia.c: 252: LCDWrite(0, 0xBB);
 10975  151A  30BB               	movlw	187
 10976  151B  00F5               	movwf	??i1_LCDInit
 10977  151C  0875               	movf	??i1_LCDInit,w
 10978  151D  00F0               	movwf	i1LCDWrite@data
 10979  151E  3000               	movlw	0
 10980  151F  3193  233F  3194   	fcall	i1_LCDWrite
 10981                           
 10982                           ;Nokia.c: 253: LCDWrite(0, 0x04);
 10983  1522  3004               	movlw	4
 10984  1523  00F5               	movwf	??i1_LCDInit
 10985  1524  0875               	movf	??i1_LCDInit,w
 10986  1525  00F0               	movwf	i1LCDWrite@data
 10987  1526  3000               	movlw	0
 10988  1527  3193  233F  3194   	fcall	i1_LCDWrite
 10989                           
 10990                           ;Nokia.c: 254: LCDWrite(0, 0x14);
 10991  152A  3014               	movlw	20
 10992  152B  00F5               	movwf	??i1_LCDInit
 10993  152C  0875               	movf	??i1_LCDInit,w
 10994  152D  00F0               	movwf	i1LCDWrite@data
 10995  152E  3000               	movlw	0
 10996  152F  3193  233F  3194   	fcall	i1_LCDWrite
 10997                           
 10998                           ;Nokia.c: 256: LCDWrite(0, 0x20);
 10999  1532  3020               	movlw	32
 11000  1533  00F5               	movwf	??i1_LCDInit
 11001  1534  0875               	movf	??i1_LCDInit,w
 11002  1535  00F0               	movwf	i1LCDWrite@data
 11003  1536  3000               	movlw	0
 11004  1537  3193  233F  3194   	fcall	i1_LCDWrite
 11005                           
 11006                           ;Nokia.c: 257: LCDWrite(0, 0x0C);
 11007  153A  300C               	movlw	12
 11008  153B  00F5               	movwf	??i1_LCDInit
 11009  153C  0875               	movf	??i1_LCDInit,w
 11010  153D  00F0               	movwf	i1LCDWrite@data
 11011  153E  3000               	movlw	0
 11012  153F  3193  233F         	fcall	i1_LCDWrite
 11013  1541  0008               	return
 11014  1542                     __end_ofi1_LCDInit:	
 11015                           
 11016                           	psect	text43
 11017  133F                     __ptext43:	
 11018 ;; *************** function i1_LCDWrite *****************
 11019 ;; Defined at:
 11020 ;;		line 263 in file "Nokia5110/Nokia.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  data_or_comm    1    wreg     unsigned char 
 11023 ;;  data            1    0[COMMON] unsigned char 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;  data_or_comm    1    2[COMMON] unsigned char 
 11026 ;;  LCDWrite        1    4[COMMON] unsigned char 
 11027 ;;  LCDWrite        1    3[COMMON] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, status,2, status,0
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;Total ram usage:        5 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; This function calls:
 11044 ;;		Nothing
 11045 ;; This function is called by:
 11046 ;;		i1_LCDInit
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           
 11051                           ;psect for function i1_LCDWrite
 11052  133F                     i1_LCDWrite:	
 11053                           
 11054                           ;incstack = 0
 11055                           ; Regs used in i1_LCDWrite: [wreg+status,2+status,0]
 11056                           ;i1LCDWrite@data_or_command stored from wreg
 11057  133F  00F2               	movwf	i1LCDWrite@data_or_command
 11058                           
 11059                           ;Nokia.c: 264: char i,d;
 11060                           ;Nokia.c: 265: d=data;
 11061  1340  0870               	movf	i1LCDWrite@data,w
 11062  1341  00F1               	movwf	??i1_LCDWrite
 11063  1342  0871               	movf	??i1_LCDWrite,w
 11064  1343  00F3               	movwf	i1LCDWrite@d
 11065                           
 11066                           ;Nokia.c: 266: if(data_or_command==0)LATCbits.LATC3=0;
 11067  1344  0872               	movf	i1LCDWrite@data_or_command,w
 11068  1345  1D03               	btfss	3,2
 11069  1346  2B4A               	goto	i1l634
 11070  1347  0022               	movlb	2	; select bank2
 11071  1348  118E               	bcf	14,3	;volatile
 11072  1349  2B4C               	goto	i1l635
 11073  134A                     i1l634:	
 11074                           
 11075                           ;Nokia.c: 267: else LATCbits.LATC3=1;
 11076  134A  0022               	movlb	2	; select bank2
 11077  134B  158E               	bsf	14,3	;volatile
 11078  134C                     i1l635:	
 11079                           
 11080                           ;Nokia.c: 270: LATCbits.LATC6=0;
 11081  134C  130E               	bcf	14,6	;volatile
 11082                           
 11083                           ;Nokia.c: 272: for(i=0;i<8;i++) {
 11084  134D  01F4               	clrf	i1LCDWrite@i
 11085  134E  3008               	movlw	8
 11086  134F  0274               	subwf	i1LCDWrite@i,w
 11087  1350  1803               	btfsc	3,0
 11088  1351  2B62               	goto	i1l637
 11089  1352                     i1l636:	
 11090                           
 11091                           ;Nokia.c: 273: LATCbits.LATC4=0;
 11092  1352  120E               	bcf	14,4	;volatile
 11093                           
 11094                           ;Nokia.c: 274: if(d&0x80)LATCbits.LATC4=1;
 11095  1353  1FF3               	btfss	i1LCDWrite@d,7
 11096  1354  2B56               	goto	i1l638
 11097  1355  160E               	bsf	14,4	;volatile
 11098  1356                     i1l638:	
 11099                           
 11100                           ;Nokia.c: 275: LATCbits.LATC5=1;
 11101  1356  168E               	bsf	14,5	;volatile
 11102                           
 11103                           ;Nokia.c: 276: d<<=1;
 11104  1357  1003               	clrc
 11105  1358  0DF3               	rlf	i1LCDWrite@d,f
 11106                           
 11107                           ;Nokia.c: 277: LATCbits.LATC5=0;
 11108  1359  128E               	bcf	14,5	;volatile
 11109  135A  3001               	movlw	1
 11110  135B  00F1               	movwf	??i1_LCDWrite
 11111  135C  0871               	movf	??i1_LCDWrite,w
 11112  135D  07F4               	addwf	i1LCDWrite@i,f
 11113  135E  3008               	movlw	8
 11114  135F  0274               	subwf	i1LCDWrite@i,w
 11115  1360  1C03               	skipc
 11116  1361  2B52               	goto	i1l636
 11117  1362                     i1l637:	
 11118                           
 11119                           ;Nokia.c: 278: }
 11120                           ;Nokia.c: 279: LATCbits.LATC6=1;
 11121  1362  170E               	bsf	14,6	;volatile
 11122  1363  0008               	return
 11123  1364                     __end_ofi1_LCDWrite:	
 11124  007E                     btemp	set	126	;btemp
 11125  007E                     int$flags	set	126
 11126  007E                     wtemp	set	126
 11127  007E                     wtemp0	set	126
 11128  0080                     wtemp1	set	128
 11129  0082                     wtemp2	set	130
 11130  0084                     wtemp3	set	132
 11131  0086                     wtemp4	set	134
 11132  0088                     wtemp5	set	136
 11133  007F                     wtemp6	set	127
 11134  007E                     ttemp	set	126
 11135  007E                     ttemp0	set	126
 11136  0081                     ttemp1	set	129
 11137  0084                     ttemp2	set	132
 11138  0087                     ttemp3	set	135
 11139  007F                     ttemp4	set	127
 11140  007E                     ltemp	set	126
 11141  007E                     ltemp0	set	126
 11142  0082                     ltemp1	set	130
 11143  0086                     ltemp2	set	134
 11144  0080                     ltemp3	set	128


Data Sizes:
    Strings     50
    Constant    750
    Data        23
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     59      71
    BANK1            80      9      73
    BANK2            80     19      19
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            68      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    LCDString@characters	PTR unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_LCDInit
    i1_LCDInit->i1_LCDWrite

Critical Paths under _main in BANK0

    _main->_DisplaySavedGlucoReading
    ___lbtoft->___ftpack
    ___ftneg->___lbtoft
    ___ftdiv->___ftpack
    _SetTime->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _SenseTestStrip->_LCDClear
    _SaveGlucoReading->_eeprom_write
    _ReadSavedGlucoReading->_eeprom_read
    _LCDString->_LCDCharacter
    _LCDCharacter->_LCDWrite
    _HwInit->_LCDInit
    _LCDInit->_LCDWrite
    _DisplaySavedGlucoReading->___ftmul
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWrite->___wmul
    _CalcGlucose->___ftmul
    ___ftmul->___ftadd
    ___ftadd->___ftneg
    ___awtoft->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DisplaySavedGlucoReading

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_SetTime

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   62584
                                              5 BANK1      4     4      0
                        _CalcGlucose
                     _Delay_1_Second
           _DisplaySavedGlucoReading
                     _EnterDeepSleep
                             _HwInit
                           _LCDClear
                            _LCDInit
                          _LCDString
              _ReadSavedGlucoReading
                   _SaveGlucoReading
                     _SenseTestStrip
                            _SetTime
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    2159
                                             17 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     130
                                             25 BANK0      3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2678
                                             17 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _SetTime                                             22    22      0   11515
                                             39 BANK0      3     3      0
                                              0 BANK2     19    19      0
                           _LCDClear
                            _LCDInit
                        _SW1_pressed
                        _SW3_pressed
                             ___bmul
                             _gotoXY
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    20      4    2512
                                             23 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                             17 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     371
                                              9 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     786
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _SW3_pressed                                          2     2      0      37
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SW1_pressed                                          2     2      0      37
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SenseTestStrip                                       7     7      0    5840
                                             26 BANK0      7     7      0
                     _EnterDeepSleep
                            _InitADC
                           _LCDClear
                             _gotoXY
 ---------------------------------------------------------------------------------
 (2) _EnterDeepSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SaveGlucoReading                                     2     2      0     468
                                             13 BANK0      2     2      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         4     3      1     468
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ReadSavedGlucoReading                                3     3      0      44
                                             13 BANK0      3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      22
                                              9 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCDString                                            3     1      2    2058
                                             28 BANK0      3     1      2
                       _LCDCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDCharacter                                         8     8      0    1798
                                             20 BANK0      8     8      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     526
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _HwInit                                               0     0      0    1142
                _ConfigureOscillator
                            _InitADC
                            _InitApp
                         _InitTimer1
                            _LCDInit
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              2     2      0    1142
                                             20 BANK0      2     2      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySavedGlucoReading                             7     7      0   12508
                                             57 BANK0      2     2      0
                                              0 BANK1      5     5      0
                           _LCDClear
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     631
                                              9 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              9 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3454
                                             23 BANK0      3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2244
                                             20 BANK0      3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1142
                                             15 BANK0      5     4      1
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Delay_1_Second                                       3     3      0       0
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CalcGlucose                                          0     0      0    9602
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    3136
                                             41 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     242
                                              9 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    3833
                                             28 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2391
                                             18 BANK0      6     3      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2128
                                              9 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  9     9      0     270
                                              0 BANK0      9     9      0
                          i1_LCDInit
 ---------------------------------------------------------------------------------
 (6) i1_LCDInit                                            2     2      0     270
                                              5 COMMON     2     2      0
                         i1_LCDWrite
 ---------------------------------------------------------------------------------
 (7) i1_LCDWrite                                           5     4      1     270
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcGlucose
     ___awtoft
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
   _Delay_1_Second
   _DisplaySavedGlucoReading
     _LCDClear
       _LCDWrite
         ___wmul (ARG)
       _gotoXY
         _LCDWrite
           ___wmul (ARG)
     ___awdiv
     ___awtoft
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
     _gotoXY
       _LCDWrite
         ___wmul (ARG)
   _EnterDeepSleep
   _HwInit
     _ConfigureOscillator
     _InitADC
     _InitApp
     _InitTimer1
     _LCDInit
       _LCDWrite
         ___wmul (ARG)
   _LCDClear
     _LCDWrite
       ___wmul (ARG)
     _gotoXY
       _LCDWrite
         ___wmul (ARG)
   _LCDInit
     _LCDWrite
       ___wmul (ARG)
   _LCDString
     _LCDCharacter
       _LCDWrite
         ___wmul (ARG)
       ___wmul
   _ReadSavedGlucoReading
     _eeprom_read
   _SaveGlucoReading
     _eeprom_write
   _SenseTestStrip
     _EnterDeepSleep
     _InitADC
     _LCDClear
       _LCDWrite
         ___wmul (ARG)
       _gotoXY
         _LCDWrite
           ___wmul (ARG)
     _gotoXY
       _LCDWrite
         ___wmul (ARG)
   _SetTime
     _LCDClear
       _LCDWrite
         ___wmul (ARG)
       _gotoXY
         _LCDWrite
           ___wmul (ARG)
     _LCDInit
       _LCDWrite
         ___wmul (ARG)
     _SW1_pressed
     _SW3_pressed
     ___bmul
     _gotoXY
       _LCDWrite
         ___wmul (ARG)
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack
   _gotoXY
     _LCDWrite
       ___wmul (ARG)

 _isr (ROOT)
   i1_LCDInit
     i1_LCDWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     13      13       9       23.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               44      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Aug 06 00:11:45 2016

                                    pc 0002                         ___bmul@product 002B  
                          _SW3_pressed 1268                            __CFG_CP$OFF 0000  
                                   _RD 0CA8                                     _WR 0CA9  
                         ___awdiv@sign 002F                                     _gY 00AB  
                  ___wmul@multiplicand 002B                           ___ftadd@exp1 0048  
                         ___ftadd@exp2 0047                           ___ftadd@sign 0046  
                        _gglucoseIndex 00C0                                    l151 0794  
                                  l160 1262                                    l148 0791  
                                  l503 0FC2                                    l168 1275  
                                  l523 0D36                                    l507 0FE2  
                                  l532 0DE7                                    l518 0CD3  
                        LCDClear@index 0038                                    l634 13F3  
                                  l730 1390                                    l635 13F5  
                                  l483 0E5E                                    l636 13FC  
                                  l820 12CB                                    l708 1300  
                                  l660 0B79                                    l637 1413  
                                  l638 1403                                    l678 0C22  
                                  l695 0CAD                                    l981 083B  
                                  _GIE 005F                                    l988 084E  
                                  l989 0856                           __CFG_CPD$OFF 0000  
                                  _isr 0004                            _CalcGlucose 086D  
                         __CFG_BORV$LO 0000                         ??_LCDCharacter 0034  
                         _gSetDateTime 00C9                                    wreg 0009  
                                 S5774 1000                                   S5776 1014  
                     _SaveGlucoReading 1628                        __end_of_LCDInit 15D6  
                         __CFG_LVP$OFF 0000                           ___ftdiv@cntr 003B  
                         ___ftdiv@sign 0040                                   l1012 0AFC  
                                 l1072 17E6                                   l5002 0A8C  
                                 l5020 0AB5                                   l5030 0AD7  
                                 l5102 0A35                                   l5040 0AF8  
                                 l5032 0ADB                                   l5008 0A9B  
                                 l5026 0AC8                                   l5044 0B0E  
                                 l5028 0AD2                                   l5300 06F2  
                                 l5220 05DB                                   l5212 0593  
                                 l5038 0AEE                                   l3470 14AB  
                                 l5150 17F7                                   l5118 1792  
                                 l4510 12C5                                   l5214 05A5  
                                 l5230 0607                                   l5048 0B20  
                                 l5144 17DD                                   l5136 17C2  
                                 l4504 1231                                   l5216 05B7  
                                 l5224 05ED                                   l4530 0818  
                                 l5058 0B3B                                   l3466 1495  
                                 l5090 0A19                                   l5074 09D6  
                                 l5146 17E9                                   l5138 17D0  
                                 l5242 0631                                   l5218 05C9  
                                 l5226 05F8                                   l4540 0840  
                                 l4532 0822                                   l5068 09C0  
                                 l5412 0CDB                                   l5404 0CCD  
                                 l5332 0778                                   l4542 0848  
                                 l4534 0827                                   l4526 0811  
                                 l5086 0A11                                   l5422 0D03  
                                 l5254 065E                                   l5246 0639  
                                 l5238 0622                                   l5432 0D55  
                                 l5264 067C                                   l5336 077B  
                                 l5512 092D                                   l5098 0A2D  
                                 l4810 0C16                                   l5274 069B  
                                 l5258 0665                                   l5346 0579  
                                 l5506 0917                                   l4724 1388  
                                 l4572 1470                                   l4564 1452  
                                 l4820 0C41                                   l4804 0BF7  
                                 l5284 06BA                                   l5268 0683  
                                 l4718 1372                                   l5438 0D5B  
                                 l4566 145E                                   l4590 13CD  
                                 l5286 06C0                                   l5278 06A2  
                                 l5534 0987                                   l5526 096E  
                                 l5710 0FF9                                   l5606 0E7C  
                                 l4920 07EE                                   l5456 0D81  
                                 l4576 1479                                   l4832 0C5A  
                                 l5296 06E1                                   l5288 06C2  
                                 l5632 0EBB                                   l5616 0E94  
                                 l4914 07B6                                   l5378 1290  
                                 l4594 13D9                                   l4834 0C5E  
                                 l4842 0C73                                   l4826 0C4B  
                                 l4818 0C3E                                   l4770 0B7E  
                                 l4850 0B58                                   l5298 06E4  
                                 l5642 0ECC                                   l5634 0EC2  
                                 l5626 0EB1                                   l5570 0ED0  
                                 l5476 0DB6                                   l5468 0D98  
                                 l4924 1246                                   l4588 13C1  
                                 l4772 0B87                                   l4764 0B74  
                                 l5572 0E44                                   l4950 15EC  
                                 l5486 0E06                                   l5478 0DCE  
                                 l4598 13E2                                   l4838 0C6B  
                                 l5590 0E54                                   l4960 15F4  
                                 l4944 15E1                                   l4928 124C  
                                 l4848 0C78                                   l4776 0B94  
                                 l5664 0F1E                                   l5498 08CE  
                                 l4962 1600                                   l4786 0BC2  
                                 l4972 161B                                   l4788 0BDA  
                                 l5596 0E75                                   ?_isr 0070  
                                 l4798 0BF1                                   l4976 1623  
                                 l4968 1612                                   l5698 0FCB  
                                 l4988 1328                                   l4998 0A85  
                                 STR_1 0510                                   STR_2 051F  
                                 STR_3 0538                                   STR_4 052D  
                                 u5125 15F7                                   u5055 07B4  
                                 u5145 1601                                   u5065 07EC  
                                 u3625 1630                                   u6105 0F19  
                                 u5155 160B                                   u3635 1706  
                                 u5325 0AC9                                   u5165 1613  
                                 u4525 12CC                                   u2861 12FF  
                                 u4615 0843                                   u4535 12D1  
                                 u6207 0716                                   u4705 145F  
                                 u6217 0723                                   u5355 0ADC  
                                 u6307 14C1                                   u4715 1469  
                                 u6227 0730                                   u5525 0A36  
                                 u6317 14CE                                   u4805 1370  
                                 u4725 1471                                   u6237 073D  
                                 u4655 085D                                   u4575 081D  
                                 u5295 0AB6                                   u5535 0A3C  
                                 u5455 09E2                                   u6327 14DB  
                                 u4815 1386                                   u6247 074A  
                                 u5385 0AEF                                   u5465 09F2  
                                 u6337 14E8                                   u5625 17DE  
                                 u6257 0757                                   u4595 0836  
                                 u6347 14F5                                   u4755 13C4  
                                 u4915 0C0C                                   u6267 0764  
                                 u6187 05FF                                   u5485 0A1A  
                                 u5565 1799                                   u4685 1455  
                                 u6277 0771                                   u6197 061A  
                                 u5495 0A20                                   u6287 0CCF  
                                 u4775 13D3                                   u6297 1599  
                                 u4785 13DA                                   u5595 17C3  
                                 u4955 0C31                                   u5915 093F  
                                 u5925 094F                                   u5935 096F  
                                 u5945 097E                                   u5795 0D1D  
                                 u5955 0988                            ?i1_LCDWrite 0070  
                                 _WREN 0CAA                         ??_eeprom_write 002A  
                                 _Days 0061                           __CFG_WRT$OFF 0000  
                                 _Year 0065                                   _main 0E0C  
                         ___ftpack@arg 0029                           ___ftpack@exp 002C  
                                 fsr0h 0005                                   fsr1h 0007  
                                 fsr0l 0004                                   indf0 0000  
                                 fsr1l 0006                                   btemp 007E  
                         _gMinutesRead 00C6                                   ltemp 007E  
                                 start 01DB                                   ttemp 007E  
                                 wtemp 007E                          __CFG_IESO$OFF 0000  
                   __size_of_LCDString 0017                   SW1_pressed@SW1_press 002A  
                    ___bmul@multiplier 002C                          __CFG_MCLRE$ON 0000  
                         ___ftmul@cntr 0057                           ___ftmul@sign 0058  
                      __end_of_InitADC 0808                        __end_of_InitApp 1589  
                   __size_ofi1_LCDInit 0046                       __end_of_LCDClear 138E  
                         ___fttol@exp1 0036                           ___fttol@lval 0032  
                                ??_isr 0020                       __end_of_LARGEnum 0506  
                      __end_of_SetTime 07A1                       __end_of_LCDWrite 1416  
    DisplaySavedGlucoReading@read_mgdl 00E2                                  ?_main 0070  
                      __end_of___awdiv 1628                                  _EEADR 0191  
                      __end_of___ftadd 0B53                          __CFG_WDTE$OFF 0000  
                                _CARRY 0018                        __end_of___ftdiv 09A9  
                                _ASCII 0222                        __end_of___ftneg 120D  
                      __end_of___ftmul 0A5D                        ___awdiv@divisor 0029  
                      __end_of___fttol 1800                                  _LATB1 0869  
                                _LATB5 086D                        __end_of___lwdiv 147E  
                      __end_of___lwmod 13E7                                  i1l550 0062  
                                i1l634 134A                                  i1l635 134C  
                                i1l571 00E1                                  i1l636 1352  
                                i1l564 00B5                                  i1l637 1362  
                                i1l581 018C                                  i1l638 1356  
                                i1l588 01D6                        ___awdiv@counter 002E  
                                _TMR1H 0017                                  _PORTB 000D  
                                _TRISA 008C                                  _TRISB 008D  
                                _TRISC 008E                    _ConfigureOscillator 11FA  
                       __CFG_FCMEN$OFF 0000                                  _Hours 0062  
                                _Month 0064                                  _gXadc 00CD  
                                _gTemp 00A8                                  _gYint 00DC  
                        ___awtoft@sign 0037                        __end_of_dpowers 0510  
                      __end_of_isdigit 1233                          ___ftpack@sign 002D  
                                _putch 11F9                         __CFG_BOREN$OFF 0000  
                  SenseTestStrip@index 0040                    _gOneReadingDisplyed 007A  
                                ltemp0 007E                                  ltemp1 0082  
                                ltemp2 0086                                  ltemp3 0080  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                  _ReadSavedGlucoReading 1701  
                 ?_ConfigureOscillator 0070                        __initialization 01DD  
                           _InitTimer1 120D                           __end_of_main 1000  
                       _SenseTestStrip 0CAE                      LCDCharacter@index 003A  
                       __CFG_LPBOR$OFF 0000                    __size_ofi1_LCDWrite 0025  
                               ??_main 00E5                          ___fttol@sign1 0031  
                            ??_LCDInit 0034                        _gAverageGlucose 00A0  
                       __CFG_PLLEN$OFF 0000                      __end_of_LCDString 12A7  
           ??_DisplaySavedGlucoReading 0059                          SetTime@tMonth 0120  
              LCDWrite@data_or_command 0031                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                        SetTime@hour_1 012F                          SetTime@hour_2 012A  
                               _ADRESH 009C                                 _ADRESL 009B  
                               _EEDATA 0193                                 _EEADRS 005B  
                               _EECON1 0195                                 _EECON2 0196  
                     ___awdiv@dividend 002B                      __end_ofi1_LCDInit 1542  
                        SetTime@year_1 012C                          SetTime@year_2 0127  
                     __end_of___awtoft 133F                                 _ANSELA 018C  
                               ?_putch 0070                                 _ANSELB 018D  
                     __end_of___ftpack 086D                       __end_of___lbtoft 12C2  
                               i1l4402 019A                                 i1l4322 009C  
                               i1l4412 01D1                                 i1l4340 00B2  
                               i1l4260 0044                                 i1l4406 01B1  
                               i1l4334 00AB                                 i1l4270 0058  
                               i1l4408 01C9                                 i1l4344 00C1  
                               i1l4272 005C                                 i1l4256 003C  
                               i1l4280 006C                                 i1l4364 00ED  
                               i1l4356 00D8                                 i1l4374 00FC  
                               i1l4366 00F1                                 i1l4384 0134  
                               i1l4386 0139     ReadSavedGlucoReading@reading_count 002F  
                     ??_Delay_1_Second 0029                                 u435_25 0120  
                               u436_25 012E                                 u438_25 0148  
                               u439_25 0170                                 _OSCCON 0099  
                               u635_27 00BC                                 u636_27 00D2  
                               u637_27 00E7                                 u638_27 150B  
                            ??_InitADC 0029                              ??_InitApp 0029  
                ??_ConfigureOscillator 0029                                 _HwInit 12DE  
                       __CFG_PWRTE$OFF 0000              i1LCDWrite@data_or_command 0072  
               __end_of_SenseTestStrip 0E0C                              ??_SetTime 0047  
                 __end_of_LCDCharacter 07F4                   __size_of_eeprom_read 0021  
                               ___bmul 1243                                 ___ftge 147E  
                               _gYint2 00BC                                 ___wmul 12C2  
                            ??___awdiv 002D                              ??___ftadd 0042  
                       __CFG_STVREN$ON 0000                                 _gYmmol 00AE  
                            ??___ftdiv 0037                              ??___ftneg 003C  
                            ??___ftmul 004F                              ??___fttol 002D  
                            ??___lwdiv 002D                              ??___lwmod 0035  
                               _gotoXY 127B                       ___awdiv@quotient 0030  
                 __end_of_eeprom_write 13BA                                 _printf 0B53  
                     ??_EnterDeepSleep 0029                  ___ftmul@f3_as_product 0054  
                         LCDWrite@data 002F                           __pdataCOMMON 007D  
                            ??_isdigit 0029                                 putch@c 0070  
                           _gReadCount 00C8                              ?_LCDClear 0070  
               ?_ReadSavedGlucoReading 0070                __end_of__initialization 021E  
                      eeprom_read@addr 002C                             ___ftadd@f1 003C  
                           ___ftadd@f2 003F                             ___ftge@ff1 0029  
                           ___ftge@ff2 002C                              ?_LCDWrite 002F  
                           _gHoursRead 00C5                          __end_of_ASCII 0402  
                           ___ftdiv@f1 0034                             ___ftdiv@f2 0031  
                           ___ftdiv@f3 003C                  LCDCharacter@character 0039  
                           ___ftneg@f1 0039                             ___awtoft@c 0032  
                           ___lbtoft@c 0038                    ___bmul@multiplicand 0029  
                      ?_SenseTestStrip 0070                             ___ftmul@f1 0049  
                           ___ftmul@f2 004C                           ?_SW1_pressed 0070  
                           ___fttol@f1 0029                            ?_InitTimer1 0070  
                       __pcstackCOMMON 0070                             _gMonthRead 00C7  
                         __pidataBANK0 11FE                           __pidataBANK1 1233  
             __end_of_SaveGlucoReading 168C                             _gSleepMode 005F  
                         ?_SW3_pressed 0070                              LCDWrite@d 0032  
                            LCDWrite@i 0033                          __end_of_putch 11FA  
                          SetTime@tDay 0121                            SetTime@tMin 0124  
                        _gtimeOutCount 00D8                         _OPTION_REGbits 0095  
                         ?_CalcGlucose 0070                         i1LCDWrite@data 0070  
                    eeprom_write@value 0029                                ??_putch 0029  
                           __pbssBANK0 005B                             __pbssBANK1 00A0  
                         ??i1_LCDWrite 0071                             _gYmmolRead 00CC  
                           ??_LCDClear 0037                             _gYmmolchar 0066  
                           ??_LCDWrite 0030                            _RedingCount 0077  
                              ?_HwInit 0070                             __pmaintext 0E0C  
                              ?___bmul 0029                                ?___ftge 0029  
                              ?___wmul 0029                             __pintentry 0004  
                              _DACCON1 0119                                ?_gotoXY 0034  
                            ?___awtoft 0032                         SetTime@month_1 012D  
                       SetTime@month_2 0128                              ?___ftpack 0029  
                            ?___lbtoft 0031                                ?_printf 0037  
                   __end_ofi1_LCDWrite 1364                                _LCDInit 1589  
                     SetTime@sw1_count 0132                    __size_of_InitTimer1 000B  
                __size_of_LCDCharacter 0053                                _InitADC 0800  
                              _InitApp 1542                        __size_of_HwInit 001E  
                              _Minutes 0063                                _Seconds 00C2  
                              _SetTime 0542                  __size_of_eeprom_write 002C  
                      __size_of___bmul 0012                        __size_of___ftge 003C  
                              ___awdiv 15D6                                ___ftadd 0A5D  
                              ___ftdiv 0900                                ___ftneg 1204  
                      __size_of___wmul 001C                                ___ftmul 09A9  
                              ___fttol 1779                                ___lwdiv 1449  
                              ___lwmod 13BA                        __size_of_gotoXY 0015  
                           ??___awtoft 0035                             ??___ftpack 002E  
                           ??___lbtoft 0034                                __ptext1 12A7  
                              __ptext2 1204                                __ptext3 0900  
                              __ptext4 0542                                __ptext5 0B53  
                              __ptext6 11F9                                __ptext7 1224  
                              __ptext8 13BA                                __ptext9 1449  
                      __size_of_printf 015B                              _T1CONbits 0018  
                              _dpowers 0506                                _isdigit 1224  
                         __size_of_isr 01D7                              _IOCBFbits 0396  
                            _IOCBNbits 0395                           _LCDCharacter 07A1  
                              clrloop0 07F5                              _LCDString 1290  
                 end_of_initialization 021E                                gotoXY@x 0036  
                              gotoXY@y 0034                                init_ram 1218  
                         _eeprom_write 138E                                initloop 1219  
                            i1_LCDInit 14FC                          _gStripRemoved 0060  
                              printf@c 0046                                printf@f 0037  
                         __pstringtext 0222                   __size_of_SW1_pressed 0013  
                 __size_of_SW3_pressed 0013                       __CFG_FOSC$INTOSC 0000  
                            _TRISAbits 008C                              _TRISBbits 008D  
                            _TRISCbits 008E                      _gYmmoldecimalchar 007D  
                 __size_of_CalcGlucose 0093                ??_ReadSavedGlucoReading 002D  
                          _DACCON0bits 0118                            _gMemorymode 005C  
                           ?_LCDString 003C            __end_of_ConfigureOscillator 11FE  
                     ??_SenseTestStrip 003A                            ___ftdiv@exp 003F  
                           ?i1_LCDInit 0070                          ??_eeprom_read 0029  
                          printf@width 0044                      __size_of_LCDClear 002A  
    __size_of_DisplaySavedGlucoReading 0075                      __size_of_LCDWrite 002F  
                        _gYmmoldecimal 00B1              ?_DisplaySavedGlucoReading 0070  
                          ___ftmul@exp 0053                         __end_of_HwInit 12FC  
                         ??_InitTimer1 0029                      ?_SaveGlucoReading 0070  
                       __end_of___bmul 1255                         __end_of___ftge 14BA  
                       __end_of___wmul 12DE                          __pidataCOMMON 0003  
                   ??_SaveGlucoReading 002D                         __end_of_gotoXY 1290  
                       __end_of_printf 0CAE                    start_initialization 01DD  
                          __end_of_isr 01DB               SetTime@pre_confirm_count 0125  
                   __end_of_InitTimer1 1218                           SetTime@day_1 012E  
                         SetTime@day_2 0129                           SetTime@tHour 0123  
                         SetTime@min_1 0130                           SetTime@min_2 012B  
                         SetTime@tYear 0122                               ??_HwInit 0036  
                             ??___bmul 002A                               ??___ftge 002F  
                            _gDaysRead 00C3                               ??___wmul 002D  
              __size_of_Delay_1_Second 0042                    __end_of_eeprom_read 131D  
                          __pdataBANK0 0061                            __pdataBANK1 00D0  
                             ??_gotoXY 0035                               ??_printf 003B  
                            _gReadData 00B4                              _gReadTemp 00B6  
                    __size_of___awtoft 0022                               ?_LCDInit 0070  
                    __size_of___ftpack 0065                      __size_of___lbtoft 001B  
                          __pbssBIGRAM 22C4                            __pbssCOMMON 0077  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00E0                          __pcstackBANK2 0120  
                         _isdigit$1429 0029                              _gTempint2 00BA  
                            _gYearRead 00CA                            ??_LCDString 003E  
              __size_of_EnterDeepSleep 0033                       eeprom_write@addr 002C  
                          ??i1_LCDInit 0075                               ?_InitADC 0070  
                             ?_InitApp 0070                            i1LCDWrite@d 0073  
                          i1LCDWrite@i 0074                               ?_SetTime 0070  
                     ___lwdiv@dividend 002B                   SetTime@confirm_count 0131  
                             ?___awdiv 0029                               ?___ftadd 003C  
                             ?___ftdiv 0031                               ?___ftneg 0039  
                             ?___ftmul 0049                               ?___fttol 0029  
                             ?___lwdiv 0029                               ?___lwmod 0031  
                            __pswtext1 1000                              __pswtext2 1014  
                             ?_isdigit 0070                       ___lwdiv@quotient 002F  
                       __size_of_putch 0001                               _LCDClear 1364  
                             _LARGEnum 0402                         ___wmul@product 002D  
                             _LATAbits 010C                               _LATBbits 010D  
                             _LATCbits 010E                               _LCDWrite 13E7  
                            clear_ram0 07F4                            _eeprom_read 12FC  
                             _PIE1bits 0091                               _PIR1bits 0011  
                 SW3_pressed@SW3_press 002A                               _GO_nDONE 04E9  
                           _ADCON0bits 009D                      ___wmul@multiplier 0029  
                           printf@flag 0043                             printf@prec 0040  
                     __size_of_LCDInit 004D                        _gSenseTestStrip 005E  
                          _OPA1CONbits 0511       __end_of_DisplaySavedGlucoReading 1701  
       __size_of_ReadSavedGlucoReading 0078          __end_of_ReadSavedGlucoReading 1779  
                     __size_of_InitADC 0008                       __size_of_InitApp 0047  
                        ??_SW1_pressed 0029                       __size_of_SetTime 025F  
                       _Delay_1_Second 14BA                          ??_SW3_pressed 0029  
                     __size_of___awdiv 0052                       __size_of___ftadd 00F6  
                     __size_of___ftdiv 00A9                       __size_of___ftneg 0009  
                     __size_of___ftmul 00B4                       __size_of___fttol 0087  
                     __size_of___lwdiv 0035                       __size_of___lwmod 002D  
                             ___awtoft 131D                               ___ftpack 0808  
                             ___lbtoft 12A7                               _gTempint 00B8  
                           _ANSELAbits 018C                             _ANSELBbits 018D  
                        ??_CalcGlucose 0059                       __size_of_isdigit 000F  
                      ___lwdiv@divisor 0029                        ___lwdiv@counter 002E  
                             __ptext10 1243                               __ptext11 1268  
                             __ptext20 07A1                               __ptext12 1255  
                             __ptext21 12C2                               __ptext13 0CAE  
                             __ptext30 15D6                               __ptext22 12DE  
                             __ptext14 1416                               __ptext31 1364  
                             __ptext23 1589                               __ptext15 1628  
                             __ptext40 0808                               __ptext32 127B  
                             __ptext24 120D                               __ptext16 138E  
                             __ptext33 13E7                               __ptext25 1542  
                             __ptext17 1701                               __ptext42 14FC  
                             __ptext34 14BA                               __ptext26 0800  
                             __ptext18 12FC                               __ptext43 133F  
                             __ptext35 086D                               __ptext27 11FA  
                             __ptext19 1290                               __ptext36 09A9  
                             __ptext28 168C                               __ptext37 147E  
                             __ptext29 1779                               __ptext38 0A5D  
                             __ptext39 131D              __size_of_SaveGlucoReading 0064  
                       _EnterDeepSleep 1416                         _gglucDataReady 007C  
DisplaySavedGlucoReading@read_mgdl_int 00E0                               _gcounter 00DE  
                        __size_of_main 01F4           __size_of_ConfigureOscillator 0004  
               __end_of_Delay_1_Second 14FC                               int$flags 007E  
                            printf@val 0041                    __end_of_SW1_pressed 1268  
                       _gStripIdleTime 00D0                        _gExitMemoryMode 0079  
                  __end_of_SW3_pressed 127B                             _INTCONbits 000B  
                           _FVRCONbits 0117                 __end_of_EnterDeepSleep 1449  
                             isdigit@c 002A                       _gcaptured2SValue 00BE  
                       _gStripInserted 007B                    __end_of_CalcGlucose 0900  
                       _gcountIdleTime 00D4                               intlevel1 0000  
                           i1_LCDWrite 133F                       ___lwmod@dividend 0033  
             _DisplaySavedGlucoReading 168C                 SenseTestStrip@temp_adc 003E  
                    __CFG_CLKOUTEN$OFF 0000                        ?_Delay_1_Second 0070  
                             printf@ap 003F                          _gGlucoseValue 22C4  
              __size_of_SenseTestStrip 015E                    LCDString@characters 003C  
                           _OPTION_REG 0095                      _gYmmolDecimalRead 00CB  
                      ___lwmod@divisor 0031                        ___lwmod@counter 0036  
            SetTime@set_time_date_loop 0126                          ?_LCDCharacter 0070  
                      ?_EnterDeepSleep 0070                            _VREGCONbits 0197  
                     _gSavedReadingCnt 005D                     _gSigmaGlucoseValue 00A4  
              _gDisplayPreviousReading 00C4                          ?_eeprom_write 0029  
                         ?_eeprom_read 0070                     _gBloodNotInsetrted 0078  
                          _SW1_pressed 1255  
